<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Codeforces Round 928 (Div. 4)</title>
    <url>/2024/02/19/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)Codeforces%20Round%20928%20(Div.%204)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    map&lt;<span class="type">char</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : s)</span><br><span class="line">        mp[i]++;</span><br><span class="line">    cout &lt;&lt; (mp[<span class="string">&#x27;A&#x27;</span>] &gt; mp[<span class="string">&#x27;B&#x27;</span>] ? <span class="string">&#x27;A&#x27;</span> : <span class="string">&#x27;B&#x27;</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, cnt = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">char</span> c;</span><br><span class="line">            cin &gt;&gt; c;</span><br><span class="line">            a[i][j] = c - <span class="string">&#x27;0&#x27;</span>, cnt += a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">auto</span> query = [&amp;](<span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> x2, <span class="type">int</span> y2) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> a[x2][y2] - a[x1 - <span class="number">1</span>][y2] - a[x2][y1 - <span class="number">1</span>] + a[x1 - <span class="number">1</span>][y1 - <span class="number">1</span>];</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            a[i][j] += a[i - <span class="number">1</span>][j] + a[i][j - <span class="number">1</span>] - a[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">2</span>; i + k - <span class="number">1</span> &lt;= n &amp;&amp; j + k - <span class="number">1</span> &lt;= n; k++)</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">query</span>(i, j, i + k - <span class="number">1</span>, j + k - <span class="number">1</span>) == cnt &amp;&amp; cnt == k * k)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;SQUARE&quot;</span> &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;TRIANGLE&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">100</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line">ll ans[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; ans[n] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> cal = [&amp;](<span class="type">int</span> x) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x)</span><br><span class="line">            res += x % <span class="number">10</span>, x /= <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2e5</span>; i++)</span><br><span class="line">        ans[i] = ans[i - <span class="number">1</span>] + <span class="built_in">cal</span>(i);</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(10);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>每个数x,只能和$1&lt;&lt;31-1-a[i]$放在一起</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    map&lt;ll, ll&gt; mp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        mp[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll add = <span class="built_in">max</span>(mp[a[i]], mp[(<span class="number">1ll</span> &lt;&lt; <span class="number">31</span>) - <span class="number">1</span> - a[i]]);</span><br><span class="line">        ans += add;</span><br><span class="line">        mp[a[i]] = <span class="built_in">max</span>(mp[a[i]] - add, <span class="number">0ll</span>);</span><br><span class="line">        mp[(<span class="number">1ll</span> &lt;&lt; <span class="number">31</span>) - <span class="number">1</span> - a[i]] = <span class="built_in">max</span>(mp[(<span class="number">1ll</span> &lt;&lt; <span class="number">31</span>) - <span class="number">1</span> - a[i]] - add, <span class="number">0ll</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>仅当乘2的幂次时有新的数加入</p>
<p>奇数*奇数&#x3D;奇数</p>
<p>奇数*偶数&#x3D;偶数</p>
<p>奇数轮与偶数轮一定不同,并且奇数轮一定在第一轮被筛完,后面就只需要考虑偶数轮了</p>
<p>对于偶数轮可以这样理解:</p>
<p>奇数$\times2$,奇数$\times4$,奇数$\times6$,..</p>
<p>注意到非2的幂次的偶数都可以拆成奇数$\times$奇数$\times2$</p>
<p>比如奇数$\times4$可以变成奇数$\times$奇数$\times2$</p>
<p>所以仅当乘2的幂次时有新的数加入</p>
<p>每i(偶数)轮输入的第k个数就是:</p>
<p>$2^i*(2k+1)$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k, u = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">while</span> (n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> num = (n - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (k &gt; num)</span><br><span class="line">            k -= num;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; (k * <span class="number">2</span> - <span class="number">1</span>) * u &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        n /= <span class="number">2</span>, u *= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>1.迭代加深+剪枝</p>
<p>手玩一下发现最坏情况(全是B)好像只需要8个,以8为上界打表,时间复杂度为$\sum_{i&#x3D;0}^{8}\binom{49}{i} $等于553000876</p>
<p>最外圈一定不会选,所以变成了$\sum_{i&#x3D;0}^{8}\binom{25}{i} $</p>
<p>如果前7都没有,那答案就是8,所以$\sum_{i&#x3D;0}^{7}\binom{25}{i} $等于726206</p>
<p>再考虑从小到大枚举答案,遇到答案就return,极限能卡过去(迭代加深)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;, dy[] = &#123;<span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">7</span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(n, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(n));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    <span class="type">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">auto</span> chk = [&amp;](<span class="type">int</span> x, <span class="type">int</span> y) -&gt; <span class="type">bool</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> xx = x + dx[i], yy = y + dy[i];</span><br><span class="line">            <span class="keyword">if</span> (a[xx][yy] != <span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> &amp;dfs, <span class="type">int</span> u, <span class="type">int</span> num) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (f)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (u == <span class="number">25</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!num)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; <span class="number">6</span>; j++)</span><br><span class="line">                        <span class="keyword">if</span> (a[i][j] == <span class="string">&#x27;B&#x27;</span> &amp;&amp; <span class="built_in">chk</span>(i, j))</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                f = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> x = u / <span class="number">5</span> + <span class="number">1</span>, y = u % <span class="number">5</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (num &amp;&amp; a[x][y] == <span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[x][y] = <span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(dfs, u + <span class="number">1</span>, num - <span class="number">1</span>);</span><br><span class="line">            a[x][y] = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">dfs</span>(dfs, u + <span class="number">1</span>, num);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">dfs</span>(dfs, <span class="number">0</span>, i);</span><br><span class="line">        <span class="keyword">if</span> (f)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="number">8</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.两次搜索</p>
<p>与黑白染色相似,如果两个中心点的曼哈顿距离是奇数,那么一次修改只能影响其中一个</p>
<p>所以分别搜索,复杂度为:</p>
<p>$2\times \sum_{i&#x3D;0}^{7}(12,i)$</p>
<p>在cf上比第一种快了100倍</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;, dy[] = &#123;<span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">7</span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(n, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(n));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    <span class="type">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">auto</span> chk = [&amp;](<span class="type">int</span> x, <span class="type">int</span> y) -&gt; <span class="type">bool</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> xx = x + dx[i], yy = y + dy[i];</span><br><span class="line">            <span class="keyword">if</span> (a[xx][yy] != <span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> &amp;dfs, <span class="type">int</span> u, <span class="type">int</span> num, <span class="type">int</span> oe) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (f)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (u &gt;= <span class="number">25</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!num)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; <span class="number">6</span>; j++)</span><br><span class="line">                        <span class="keyword">if</span> ((i + j) % <span class="number">2</span> == oe &amp;&amp; a[i][j] == <span class="string">&#x27;B&#x27;</span> &amp;&amp; <span class="built_in">chk</span>(i, j))</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                f = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> x = u / <span class="number">5</span> + <span class="number">1</span>, y = u % <span class="number">5</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (num &amp;&amp; a[x][y] == <span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[x][y] = <span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(dfs, u + <span class="number">2</span>, num - <span class="number">1</span>, oe);</span><br><span class="line">            a[x][y] = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">dfs</span>(dfs, u + <span class="number">2</span>, num, oe);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">1</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">dfs</span>(dfs, j, i, j);</span><br><span class="line">            <span class="keyword">if</span> (f)</span><br><span class="line">            &#123;</span><br><span class="line">                ans += i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans += f ? <span class="number">0</span> : <span class="number">8</span>;</span><br><span class="line">        f = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>经典数dp,类似没有上司的舞会</p>
<p>考虑每条边堵还是不堵</p>
<p>$f[u][0&#x2F;1]$表示以u为根的子树,全部满足各自的要求的代价,且u是安静&#x2F;吵闹的最小花费</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="function">vector&lt;<span class="type">char</span>&gt; <span class="title">s</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        e[x].<span class="built_in">push_back</span>(i), e[i].<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; s[i];</span><br><span class="line">    vector&lt;vector&lt;ll&gt;&gt; <span class="built_in">f</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;ll&gt;(<span class="number">2</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> dfs, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[u] == <span class="string">&#x27;S&#x27;</span>)</span><br><span class="line">            f[u][<span class="number">1</span>] = <span class="number">1e9</span>;</span><br><span class="line">        <span class="keyword">if</span> (s[u] == <span class="string">&#x27;P&#x27;</span>)</span><br><span class="line">            f[u][<span class="number">0</span>] = <span class="number">1e9</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">dfs</span>(dfs, to, u);</span><br><span class="line">                f[u][<span class="number">0</span>] += <span class="built_in">min</span>(f[to][<span class="number">0</span>], f[to][<span class="number">1</span>] + <span class="number">1</span>);</span><br><span class="line">                f[u][<span class="number">1</span>] += <span class="built_in">min</span>(f[to][<span class="number">1</span>], f[to][<span class="number">0</span>] + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; <span class="built_in">min</span>(f[<span class="number">1</span>][<span class="number">0</span>], f[<span class="number">1</span>][<span class="number">1</span>]) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 930 (Div. 2)</title>
    <url>/2024/02/29/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)Codeforces%20Round%20930%20(Div.%202)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>答案就是$\le n$的最大的2的x次方</p>
<p>因为在所有操作中,1只会被2的x次方数改变位置</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">40</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> ((<span class="number">1ll</span> &lt;&lt; i) &lt;= n)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; (<span class="number">1ll</span> &lt;&lt; i) &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>贪心的考虑答案</p>
<p>如果往右和往下走是一样的,就继续往右走</p>
<p>如果往左是0,往下是1,贪心往右</p>
<p>如果往左是1,往下是0,贪心往下</p>
<p>怎样计算路径数?</p>
<p>找到拐点,往左走,如果往右和往下是一样的,答案++,否则break</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(<span class="number">2</span>, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(n + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    vector&lt;<span class="type">char</span>&gt; ans;</span><br><span class="line">    ans.<span class="built_in">push_back</span>(a[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">    <span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i + <span class="number">1</span> &lt; n &amp;&amp; a[<span class="number">0</span>][i + <span class="number">1</span>] == a[<span class="number">1</span>][i])</span><br><span class="line">            ans.<span class="built_in">push_back</span>(a[<span class="number">0</span>][i + <span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i + <span class="number">1</span> &lt; n &amp;&amp; a[<span class="number">0</span>][i + <span class="number">1</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                ans.<span class="built_in">push_back</span>(a[<span class="number">0</span>][i + <span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                c = i;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; n; j++)</span><br><span class="line">                    ans.<span class="built_in">push_back</span>(a[<span class="number">1</span>][j]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : ans)</span><br><span class="line">        cout &lt;&lt; i;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = c - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[<span class="number">0</span>][i + <span class="number">1</span>] == a[<span class="number">1</span>][i])</span><br><span class="line">        &#123;</span><br><span class="line">            res++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>打表可以发现,异或最大一定或最大,但或最大不一定异或最大,先找到最大值,花费n次,然后找到能够和最大值达到或最大的,如果相等,再取最小</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(<span class="number">2</span>, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(n + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    vector&lt;<span class="type">char</span>&gt; ans;</span><br><span class="line">    ans.<span class="built_in">push_back</span>(a[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">    <span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i + <span class="number">1</span> &lt; n &amp;&amp; a[<span class="number">0</span>][i + <span class="number">1</span>] == a[<span class="number">1</span>][i])</span><br><span class="line">            ans.<span class="built_in">push_back</span>(a[<span class="number">0</span>][i + <span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i + <span class="number">1</span> &lt; n &amp;&amp; a[<span class="number">0</span>][i + <span class="number">1</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                ans.<span class="built_in">push_back</span>(a[<span class="number">0</span>][i + <span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                c = i;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; n; j++)</span><br><span class="line">                    ans.<span class="built_in">push_back</span>(a[<span class="number">1</span>][j]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : ans)</span><br><span class="line">        cout &lt;&lt; i;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = c - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[<span class="number">0</span>][i + <span class="number">1</span>] == a[<span class="number">1</span>][i])</span><br><span class="line">        &#123;</span><br><span class="line">            res++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>对于每个起点,先判断最终会从哪里出去,把从起点到终点的答案先加上</p>
<p>然后注意到,消去最近的两个折返点的答案为2<em>dis,把这个拆成2</em>(i-l)和2*(r-i)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">char</span>&gt; <span class="title">s</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">ans</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">su</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span>, <span class="title">sd</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; s[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        su[i] = su[i - <span class="number">1</span>] + (s[i] == <span class="string">&#x27;&gt;&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">        sd[i] = sd[i + <span class="number">1</span>] + (s[i] == <span class="string">&#x27;&lt;&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (su[i] &gt; sd[i + <span class="number">1</span>])</span><br><span class="line">            ans[i] = n - i + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans[i] = i;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">q</span><span class="params">(<span class="number">2</span> * n, <span class="number">0</span>)</span></span>;</span><br><span class="line">    ll h = <span class="number">0</span>, t = <span class="number">0</span>, tot = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tot += t - h;</span><br><span class="line">        <span class="keyword">while</span> (h &lt; t &amp;&amp; t - h &gt; sd[i])</span><br><span class="line">        &#123;</span><br><span class="line">            tot -= i - q[h];</span><br><span class="line">            h++;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[i] += <span class="number">2</span> * tot;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;&gt;&#x27;</span>)</span><br><span class="line">            q[t++] = i;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    h = t = tot = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        tot += t - h;</span><br><span class="line">        <span class="keyword">while</span> (h &lt; t &amp;&amp; t - h &gt; su[i])</span><br><span class="line">        &#123;</span><br><span class="line">            tot -= q[h] - i;</span><br><span class="line">            h++;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[i] += <span class="number">2</span> * tot;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;&lt;&#x27;</span>)</span><br><span class="line">            q[t++] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 929 (Div. 3)</title>
    <url>/2024/02/27/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)Codeforces%20Round%20929%20(Div.%203)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, sum = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        sum += <span class="built_in">abs</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>分类讨论</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, sum = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">cnt</span><span class="params">(<span class="number">10</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        a[i] %= <span class="number">3</span>;</span><br><span class="line">        cnt[a[i]]++;</span><br><span class="line">        sum = (sum + a[i]) % <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum == <span class="number">0</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;0&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sum == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; (cnt[<span class="number">1</span>] ? <span class="number">1</span> : <span class="number">2</span>) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>暴力枚举</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll a, b, l;</span><br><span class="line">    set&lt;ll&gt; s;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; l;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i &lt;= l; i *= a)</span><br><span class="line">        <span class="keyword">for</span> (ll j = <span class="number">1</span>; i * j &lt;= l; j *= b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (l % (i * j) == <span class="number">0</span>)</span><br><span class="line">                s.<span class="built_in">insert</span>(l / (i * j));</span><br><span class="line">        &#125;</span><br><span class="line">    cout &lt;&lt; s.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>首先考虑如何构造一个可能的方案</p>
<p>按照升序排序</p>
<p>如果最小值只有1个,类似2 3,这样是可以的</p>
<p>但是这样会这种情况 2 2 3,但可行解是3 2 2</p>
<p>注意到只需要找到一个最小值不能整除的数,那么就一定可以</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, mi = <span class="number">1e9</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i], mp[a[i]]++, mi = <span class="built_in">min</span>(mi, a[i]);</span><br><span class="line">    <span class="keyword">if</span> (mp[mi] == <span class="number">1</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            <span class="keyword">if</span> (a[i] % mi)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>先二分出最小的r满足$sum[r]-sum[l-1]&lt;&#x3D;u$</p>
<p>然后在暴力枚举边界,因为是平方级别的增长,所以大概只需要再跑个200次</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">s</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l, u;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; u;</span><br><span class="line">        <span class="type">int</span> lo = l, ri = n;</span><br><span class="line">        <span class="keyword">while</span> (lo &lt; ri)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = (lo + ri + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (s[mid] - s[l - <span class="number">1</span>] &lt;= u)</span><br><span class="line">                lo = mid;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ri = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">auto</span> cal = [&amp;](<span class="type">int</span> x) -&gt; ll</span><br><span class="line">        &#123;</span><br><span class="line">            ll sum = s[x] - s[l - <span class="number">1</span>];</span><br><span class="line">            ll res = (sum * (u - sum + <span class="number">1</span> + u)) / <span class="number">2</span>;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;;</span><br><span class="line"> </span><br><span class="line">        ll ans = ri, mx = <span class="built_in">cal</span>(ri);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = ri, cnt = <span class="number">200</span>; j &lt;= n &amp;&amp; cnt; j++, cnt--)</span><br><span class="line">        &#123;</span><br><span class="line">            ll res = <span class="built_in">cal</span>(j);</span><br><span class="line">            <span class="keyword">if</span> (res &gt; mx)</span><br><span class="line">                mx = res, ans = j;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>注意到往上走是无效的(在i!&#x3D;m-1)</p>
<p>然后bfs,在最后一列枚举所有可能的答案</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(n, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m, <span class="number">0</span>));</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dist</span>(n, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m, <span class="number">1e9</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    queue&lt;pii&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(&#123;<span class="number">0</span>, <span class="number">0</span>&#125;);</span><br><span class="line">    dist[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> [x, y] = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="type">int</span> t = dist[x][y];</span><br><span class="line">        <span class="keyword">if</span> (!a[(x + <span class="number">1</span> + t) % n][y] &amp;&amp; !a[(x + <span class="number">2</span> + t) % n][y] &amp;&amp; dist[(x + <span class="number">1</span>) % n][y] == <span class="number">1e9</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            dist[(x + <span class="number">1</span>) % n][y] = t + <span class="number">1</span>;</span><br><span class="line">            q.<span class="built_in">push</span>(&#123;(x + <span class="number">1</span>) % n, y&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (y + <span class="number">1</span> &lt; m &amp;&amp; !a[(x + <span class="number">1</span> + t) % n][y + <span class="number">1</span>] &amp;&amp; dist[x][y + <span class="number">1</span>] == <span class="number">1e9</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            dist[x][y + <span class="number">1</span>] = t + <span class="number">1</span>;</span><br><span class="line">            q.<span class="built_in">push</span>(&#123;x, y + <span class="number">1</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> ans = <span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">if</span> (dist[i][m - <span class="number">1</span>] != <span class="number">1e9</span>)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, dist[i][m - <span class="number">1</span>] + <span class="built_in">min</span>(i + <span class="number">1</span>, n - i - <span class="number">1</span>));</span><br><span class="line">    cout &lt;&lt; ((ans == <span class="number">1e9</span>) ? <span class="number">-1</span> : ans) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>打表发现最多只有8种合法情况,每次加入时判断一下即可</p>
<p>0 0 1 1 0<br>1 1 0 0 1<br>0 0 1 1 0<br>1 1 0 0 1<br>0 0 1 1 0 </p>
<p>0 1 1 0 0<br>1 0 0 1 1<br>0 1 1 0 0<br>1 0 0 1 1<br>0 1 1 0 0 </p>
<p>1 0 0 1 1<br>0 1 1 0 0<br>1 0 0 1 1<br>0 1 1 0 0<br>1 0 0 1 1 </p>
<p>1 1 0 0 1<br>0 0 1 1 0<br>1 1 0 0 1<br>0 0 1 1 0<br>1 1 0 0 1 </p>
<p>0 1 0 1 0<br>0 1 0 1 0<br>1 0 1 0 1<br>1 0 1 0 1<br>0 1 0 1 0 </p>
<p>0 1 0 1 0<br>1 0 1 0 1<br>1 0 1 0 1<br>0 1 0 1 0<br>0 1 0 1 0 </p>
<p>1 0 1 0 1<br>0 1 0 1 0<br>0 1 0 1 0<br>1 0 1 0 1<br>1 0 1 0 1 </p>
<p>1 0 1 0 1<br>1 0 1 0 1<br>0 1 0 1 0<br>0 1 0 1 0<br>1 0 1 0 1 </p>
<p>打表代码:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n = <span class="number">5</span>, cnt = <span class="number">0</span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(n, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">auto</span> check = [&amp;](<span class="type">int</span> x, <span class="type">int</span> y) -&gt; <span class="type">bool</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x + <span class="number">2</span> &lt; n &amp;&amp; y + <span class="number">2</span> &lt; n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">                <span class="keyword">if</span> (a[x + i][y + i] == a[x][y])</span><br><span class="line">                    cnt++;</span><br><span class="line">            <span class="keyword">if</span> (cnt == <span class="number">2</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (x + <span class="number">2</span> &lt; n &amp;&amp; y - <span class="number">2</span> &gt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">                <span class="keyword">if</span> (a[x + i][y - i] == a[x][y])</span><br><span class="line">                    cnt++;</span><br><span class="line">            <span class="keyword">if</span> (cnt == <span class="number">2</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (x + <span class="number">2</span> &lt; n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">                <span class="keyword">if</span> (a[x + i][y] == a[x][y])</span><br><span class="line">                    cnt++;</span><br><span class="line">            <span class="keyword">if</span> (cnt == <span class="number">2</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (y + <span class="number">2</span> &lt; n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">                <span class="keyword">if</span> (a[x][y + i] == a[x][y])</span><br><span class="line">                    cnt++;</span><br><span class="line">            <span class="keyword">if</span> (cnt == <span class="number">2</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> dfs, <span class="type">int</span> u) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (u == n * n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!<span class="built_in">check</span>(i, j))</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">                    cout &lt;&lt; a[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                cout &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> x = u / n, y = u % n;</span><br><span class="line">        a[x][y] = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(dfs, u + <span class="number">1</span>);</span><br><span class="line">        a[x][y] = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(dfs, u + <span class="number">1</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, <span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(<span class="number">8</span>, <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">r</span><span class="params">(<span class="number">4</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    cout &lt;&lt; <span class="number">8</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x, y, now;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y &gt;&gt; s;</span><br><span class="line">        now = s[<span class="number">0</span>] == <span class="string">&#x27;s&#x27;</span> ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">8</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> v1 = (j &gt;&gt; <span class="number">0</span>) &amp; <span class="number">1</span>;</span><br><span class="line">            r[<span class="number">0</span>] = (j &gt;&gt; <span class="number">1</span>) &amp; <span class="number">1</span>;</span><br><span class="line">            r[<span class="number">1</span>] = (j &gt;&gt; <span class="number">2</span>) &amp; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (r[<span class="number">0</span>] == r[<span class="number">1</span>])</span><br><span class="line">                r[<span class="number">2</span>] = r[<span class="number">3</span>] = <span class="number">1</span> - r[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                r[<span class="number">3</span>] = r[<span class="number">0</span>], r[<span class="number">2</span>] = r[<span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> tar = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (v1)</span><br><span class="line">            &#123;</span><br><span class="line">                tar = r[y % <span class="number">4</span>];</span><br><span class="line">                <span class="keyword">if</span> (x % <span class="number">2</span>)</span><br><span class="line">                    tar = <span class="number">1</span> - tar;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                tar = r[x % <span class="number">4</span>];</span><br><span class="line">                <span class="keyword">if</span> (y % <span class="number">2</span>)</span><br><span class="line">                    tar = <span class="number">1</span> - tar;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (now != tar)</span><br><span class="line">                ans[j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="built_in">count</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>(), <span class="number">1</span>) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 927 (Div. 3)</title>
    <url>/2024/02/18/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)Codeforces%20Round%20927%20(Div.%203)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">            ans++;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i + <span class="number">1</span> &lt; s.<span class="built_in">size</span>() &amp;&amp; s[i + <span class="number">1</span>] == <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    ll ans = a[<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        ans = ((ans - <span class="number">1</span>) / a[i] + <span class="number">1</span>) * a[i], ans++;</span><br><span class="line"> </span><br><span class="line">    cout &lt;&lt; ans - <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>倒着模拟</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">ans</span><span class="params">(n + <span class="number">2</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    vector&lt;pii&gt; seg;</span><br><span class="line">    ans[n + <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>, r = n, t = n;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : s)</span><br><span class="line">    &#123;</span><br><span class="line">        seg.<span class="built_in">push_back</span>(&#123;l, r&#125;);</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">            l++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            r--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">reverse</span>(seg.<span class="built_in">begin</span>(), seg.<span class="built_in">end</span>());</span><br><span class="line">    l = <span class="number">1e9</span>, r = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> [lo, ri] : seg)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (l &gt; lo)</span><br><span class="line">            ans[t] = a[lo], l = <span class="built_in">min</span>(lo, l), r = <span class="built_in">max</span>(r, ri);</span><br><span class="line">        <span class="keyword">if</span> (r &lt; ri)</span><br><span class="line">            ans[t] = a[ri], l = <span class="built_in">min</span>(lo, l), r = <span class="built_in">max</span>(r, ri);</span><br><span class="line">        ans[t] = (ans[t] * ans[t + <span class="number">1</span>]) % m;</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>贪心+暴力</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update<span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">2</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5e3</span> + <span class="number">20</span>, M = <span class="number">21</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mp</span><span class="params">(<span class="number">300</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, joker;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; c;</span><br><span class="line">    joker = mp[c];</span><br><span class="line">    vector&lt;pair&lt;string, string&gt;&gt; ans;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(<span class="number">5</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">20</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">auto</span> cal = [&amp;](<span class="type">int</span> a, <span class="type">int</span> b) -&gt; string</span><br><span class="line">    &#123;</span><br><span class="line">        string res;</span><br><span class="line">        res += <span class="string">&#x27;0&#x27;</span> + b;</span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">1</span>)</span><br><span class="line">            res += <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="number">2</span>)</span><br><span class="line">            res += <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="number">3</span>)</span><br><span class="line">            res += <span class="string">&#x27;H&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="number">4</span>)</span><br><span class="line">            res += <span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> find = [&amp;](<span class="type">int</span> u, <span class="type">int</span> v) -&gt; string</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = v - <span class="number">1</span>; j &gt;= <span class="number">2</span>; j--)</span><br><span class="line">            <span class="keyword">if</span> (a[u][j])</span><br><span class="line">            &#123;</span><br><span class="line">                a[u][j]--;</span><br><span class="line">                a[u][v]--;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">cal</span>(u, j);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;-1&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> findall = [&amp;](<span class="type">int</span> u, <span class="type">int</span> v) -&gt; string</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == u)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">9</span>; j &gt;= <span class="number">2</span>; j--)</span><br><span class="line">                <span class="keyword">if</span> (a[i][j])</span><br><span class="line">                &#123;</span><br><span class="line">                    a[i][j]--;</span><br><span class="line">                    a[u][v]--;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">cal</span>(i, j);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = v - <span class="number">1</span>; j &gt;= <span class="number">2</span>; j--)</span><br><span class="line">            <span class="keyword">if</span> (a[u][j])</span><br><span class="line">            &#123;</span><br><span class="line">                a[u][j]--;</span><br><span class="line">                a[u][v]--;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">cal</span>(u, j);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;-1&quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="type">int</span> fi = s[<span class="number">0</span>] - <span class="string">&#x27;0&#x27;</span>, se = mp[s[<span class="number">1</span>]];</span><br><span class="line">        a[se][fi]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == joker)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">9</span>; j &gt;= <span class="number">2</span>; j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!a[i][j])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">auto</span> res = <span class="built_in">find</span>(i, j);</span><br><span class="line">            <span class="keyword">if</span> (res != <span class="string">&quot;-1&quot;</span>)</span><br><span class="line">                ans.<span class="built_in">push_back</span>(&#123;res, <span class="built_in">cal</span>(i, j)&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">9</span>; i &gt;= <span class="number">2</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!a[joker][i])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">auto</span> res = <span class="built_in">findall</span>(joker, i);</span><br><span class="line">        <span class="keyword">if</span> (res != <span class="string">&quot;-1&quot;</span>)</span><br><span class="line">            ans.<span class="built_in">push_back</span>(&#123;res, <span class="built_in">cal</span>(joker, i)&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ans.<span class="built_in">size</span>() != n)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;IMPOSSIBLE&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> i : ans)</span><br><span class="line">            cout &lt;&lt; i.x &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; i.y &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mp[<span class="string">&#x27;C&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">    mp[<span class="string">&#x27;D&#x27;</span>] = <span class="number">2</span>;</span><br><span class="line">    mp[<span class="string">&#x27;H&#x27;</span>] = <span class="number">3</span>;</span><br><span class="line">    mp[<span class="string">&#x27;S&#x27;</span>] = <span class="number">4</span>;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setiosflags(ios::fixed) &lt;&lt; setprecision(8);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>拆位考虑每一位的贡献,发现答案就是每一个位的前缀和的和</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">map&lt;ll, ll&gt; mp;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(s.size(), <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="built_in">reverse</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">        ans[i] = s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = s.<span class="built_in">size</span>() - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">    &#123;</span><br><span class="line">        ans[j] += res;</span><br><span class="line">        res += s[j] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ans.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> add = ans[i] / <span class="number">10</span>;</span><br><span class="line">        ans[i] %= <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> (add)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i + <span class="number">1</span> &lt; ans.<span class="built_in">size</span>())</span><br><span class="line">                ans[i + <span class="number">1</span>] += add;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ans.<span class="built_in">push_back</span>(add);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ans.<span class="built_in">size</span>() &amp;&amp; ans.<span class="built_in">back</span>() == <span class="number">0</span>)</span><br><span class="line">        ans.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : ans)</span><br><span class="line">        cout &lt;&lt; i;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>$f[i][0&#x2F;1]$表示这个位置不选&#x2F;选的最大值</p>
<p>$nxt$表示该位置放点后左边最大的能放的点</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">nxt</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span>, <span class="title">s</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">f</span>(n + <span class="number">10</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">2</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">        nxt[i] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        nxt[r] = <span class="built_in">min</span>(nxt[r], l);</span><br><span class="line">        s[l]++, s[r + <span class="number">1</span>]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">        nxt[i] = <span class="built_in">min</span>(nxt[i], nxt[i + <span class="number">1</span>]);</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] += s[i - <span class="number">1</span>];</span><br><span class="line">        f[i][<span class="number">0</span>] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">        f[i][<span class="number">1</span>] = s[i] + <span class="built_in">max</span>(f[nxt[i] - <span class="number">1</span>][<span class="number">1</span>], f[nxt[i] - <span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">        ans = <span class="built_in">max</span>(&#123;ans, f[i][<span class="number">0</span>], f[i][<span class="number">1</span>]&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>感觉上是一个最短路,问题在于怎样计算转移的权值</p>
<p>发现要求%h,自然想到用exgcd求解,考虑怎样构造方程</p>
<p>ax+by&#x3D;c</p>
<p>设最小的,u,to能走的时间为y,那么有</p>
<p>$l[u]+y<em>s[u]\equiv l[to]+y</em>s[to]$</p>
<p>$y*(s[to]-s[u])&#x3D;l[u]-l[to]$</p>
<p>设$b&#x3D;(s[to]-s[u]),c&#x3D;l[u]-l[to],a&#x3D;h$</p>
<p>那么就有:</p>
<p>ax+by&#x3D;c</p>
<p>解这个方程即可得到最小的相等时间,再根据当前时间利用通解调整即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">ll <span class="title">exgcd</span><span class="params">(ll a, ll b, ll &amp;x, ll &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    ll d = <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">    y -= (a / b) * x;</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, h;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; h;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">l</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">s</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">dis</span><span class="params">(n + <span class="number">1</span>, <span class="number">1e18</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; l[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; s[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        <span class="comment">// cout &lt;&lt; u &lt;&lt; &quot; &quot; &lt;&lt; v &lt;&lt; endl;</span></span><br><span class="line">        e[u].<span class="built_in">push_back</span>(v), e[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> dij = [&amp;](<span class="type">int</span> x) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;<span class="type">bool</span>&gt; <span class="built_in">vis</span>(n + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        priority_queue&lt;pll, vector&lt;pll&gt;, greater&lt;pll&gt;&gt; q;</span><br><span class="line">        dis[x] = <span class="number">0</span>;</span><br><span class="line">        q.<span class="built_in">push</span>(&#123;dis[x], x&#125;);</span><br><span class="line">        <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> [d, u] = q.<span class="built_in">top</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span> (vis[u])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            vis[u] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            &#123;</span><br><span class="line">                ll c = (l[u] - l[to] + h) % h;</span><br><span class="line">                ll b = (s[to] - s[u] + h) % h;</span><br><span class="line">                ll a = h, x, y, step = <span class="number">0</span>;</span><br><span class="line">                ll g = <span class="built_in">exgcd</span>(a, b, x, y);</span><br><span class="line">                <span class="keyword">if</span> (c % g)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                x *= c / g, y *= c / g;</span><br><span class="line">                ll t = a / g;</span><br><span class="line">                <span class="keyword">if</span> (d &lt; y)</span><br><span class="line">                &#123;</span><br><span class="line">                    step = (y - d) / t;</span><br><span class="line">                    step *= <span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (d &gt; y)</span><br><span class="line">                &#123;</span><br><span class="line">                    step = (d - y + t - <span class="number">1</span>) / t;</span><br><span class="line">                &#125;</span><br><span class="line">                y += step * t;</span><br><span class="line">                <span class="keyword">if</span> (dis[to] &gt; y + <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    dis[to] = y + <span class="number">1</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(&#123;dis[to], to&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dij</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (dis[n] == <span class="number">1e18</span>)</span><br><span class="line">        dis[n] = <span class="number">-1</span>;</span><br><span class="line">    cout &lt;&lt; dis[n] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 931 (Div. 2)</title>
    <url>/2024/03/01/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)Codeforces%20Round%20931%20(Div.%202)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>选择最小和次小,最大和次大,交替放即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">b</span><span class="params">(<span class="number">4</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    b[<span class="number">0</span>] = a[<span class="number">1</span>], b[<span class="number">1</span>] = a[n];</span><br><span class="line">    b[<span class="number">2</span>] = a[<span class="number">2</span>], b[<span class="number">3</span>] = a[n - <span class="number">1</span>];</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        ans += <span class="built_in">abs</span>(b[i] - b[(i - <span class="number">1</span> + <span class="number">4</span>) % <span class="number">4</span>]);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>对于小范围暴力跑背包,大范围xian</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">100</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>&#125;;</span><br><span class="line">ll f[<span class="number">500</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, ans = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">200</span>)</span><br><span class="line">        cout &lt;&lt; f[n] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans += (n - <span class="number">200</span>) / <span class="number">15</span>;</span><br><span class="line">        n -= ans * <span class="number">15</span>;</span><br><span class="line">        cout &lt;&lt; ans + f[n] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">400</span>; i++)</span><br><span class="line">        f[i] = <span class="number">1e9</span>;</span><br><span class="line">    f[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = a[i]; j &lt;= <span class="number">400</span>; j++)</span><br><span class="line">            f[j] = <span class="built_in">min</span>(f[j], f[j - a[i]] + <span class="number">1</span>);</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>先询问(1,1)和(n,1)</p>
<p>假设地雷在询问的交点上,再询问一次,看看是否为0</p>
<p>如果不为0,那么再询问(1,m)&#x2F;(n,m)一次得到的答案一定是对的</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> query = [&amp;](<span class="type">int</span> x, <span class="type">int</span> y) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;? &quot;</span> &lt;&lt; x &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; y &lt;&lt; endl;</span><br><span class="line">        <span class="type">int</span> res;</span><br><span class="line">        cin &gt;&gt; res;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> u1 = <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> u2 = <span class="built_in">query</span>(<span class="number">1</span>, m);</span><br><span class="line">    <span class="type">int</span> u3 = <span class="built_in">query</span>(n, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> ((u1 + u3 + <span class="number">3</span> - n) &gt; <span class="number">0</span> &amp;&amp; (u1 + u3 + <span class="number">3</span> - n) % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> y1 = (u1 + u3 + <span class="number">3</span> - n) / <span class="number">2</span>, x1 = u1 - y1 + <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (x1 &gt;= <span class="number">1</span> &amp;&amp; x1 &lt;= n &amp;&amp; y1 &gt;= <span class="number">1</span> &amp;&amp; y1 &lt;= m)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> q = <span class="built_in">query</span>(x1, y1);</span><br><span class="line">            <span class="keyword">if</span> (q == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;! &quot;</span> &lt;&lt; x1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; y1 &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> x1 = (u1 + u2 + <span class="number">3</span> - m) / <span class="number">2</span>, y1 = u1 + <span class="number">2</span> - x1;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;! &quot;</span> &lt;&lt; x1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; y1 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D1"><a href="#D1" class="headerlink" title="D1"></a>D1</h1><p>需要变的只有两种情况:</p>
<p>$0\to 1$</p>
<p>$1\to 0$</p>
<p>因为$m&lt;n$,所以最高位只有两种情况:</p>
<p>$n&#x3D;1,m&#x3D;1$</p>
<p>$n&#x3D;1,m&#x3D;0$</p>
<p>1.第一种可以直接^m,因为:</p>
<p>1.m一定小于n(输入保证)</p>
<p>2.n^m一定小于n,最高位^是0,一定小于n</p>
<p>2.再考虑如何处理第二种:</p>
<p>2.1.如果在除了最高位以外的其他位有$0\to 1$</p>
<p>$0\to 1$一定同时需要一个$1\to 0$,否则就不满足$x\oplus y&lt;x$</p>
<p>但是一个$1\to 0$够吗?</p>
<p>虽然一个$1\to 0$满足了$x\oplus y&lt;x$,但是却不满足$y&lt;x$</p>
<p>x:10</p>
<p>y:11</p>
<p>m:01</p>
<p>所以这种情况只能是-1</p>
<p>那两个呢?</p>
<p>发现可以采用以下策略:</p>
<p>第一次:</p>
<p>x:110</p>
<p>y:011</p>
<p>m:001</p>
<p>第二次:</p>
<p>x:101</p>
<p>y:100</p>
<p>m:001</p>
<p>2.2.如果在除了最高位以外的其他位没有$0\to 1$</p>
<p>那就是只有最高位不同,或者还有若干个$1\to 0$</p>
<p>因为m&gt;0,所以除最高位以外一定有一位n,m均为1</p>
<p>那么直接对所有$1\to 0$^1,其他位^0,一定满足两个条件</p>
<p>所有情况均讨论完毕</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">if</span> ((n ^ m) &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; n &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; m &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">62</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> u = n &gt;&gt; i &amp; <span class="number">1</span>, v = m &gt;&gt; i &amp; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (u &amp;&amp; !v)</span><br><span class="line">                cnt++;</span><br><span class="line">            <span class="keyword">if</span> (!u &amp;&amp; v)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (cnt &lt;= <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> pos = <span class="number">62</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">62</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> u = n &gt;&gt; i &amp; <span class="number">1</span>, v = m &gt;&gt; i &amp; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (u != v)</span><br><span class="line">            &#123;</span><br><span class="line">                pos = i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">        ll t = n ^ m ^ (<span class="number">1ll</span> &lt;&lt; pos);</span><br><span class="line">        cout &lt;&lt; n &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (n ^ t) &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; m &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D2"><a href="#D2" class="headerlink" title="D2"></a>D2</h1><p>考虑异或的性质,异或并不会改变n中1的数量</p>
<p>所以本质上就是把n中的1选择放入两个集合中的那个,因为还要满足$p_1&gt;0,p_2&gt;0$所以不能有非空集合</p>
<p>然后就是经典模型了:</p>
<p>偶数先手胜,奇数后手胜</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (__builtin_popcountll(n) % <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;second&quot;</span> &lt;&lt; endl;</span><br><span class="line">        ll p1 = <span class="number">0</span>, p2 = <span class="number">0</span>;</span><br><span class="line">        cin &gt;&gt; p1 &gt;&gt; p2;</span><br><span class="line">        <span class="keyword">if</span> (p1 == <span class="number">0</span> &amp;&amp; p2 == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (__builtin_popcountll(p1) % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            n = p1;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            n = p2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;first&quot;</span> &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">62</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">            <span class="keyword">if</span> ((n &gt;&gt; i) &amp; <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; (<span class="number">1ll</span> &lt;&lt; i) &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (n ^ (<span class="number">1ll</span> &lt;&lt; i)) &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        ll p1 = <span class="number">0</span>, p2 = <span class="number">0</span>;</span><br><span class="line">        cin &gt;&gt; p1 &gt;&gt; p2;</span><br><span class="line">        <span class="keyword">if</span> (p1 == <span class="number">0</span> &amp;&amp; p2 == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (__builtin_popcountll(p1) % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            n = p1;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            n = p2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 932 (Div. 2)</title>
    <url>/2024/03/05/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)Codeforces%20Round%20932%20(Div.%202)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>bfs前几层即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line">    set&lt;string&gt; st;</span><br><span class="line">    st.<span class="built_in">insert</span>(s);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="built_in">min</span>(<span class="number">4</span>, n); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        set&lt;string&gt; t;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> e : st)</span><br><span class="line">        &#123;</span><br><span class="line">            string a = e;</span><br><span class="line">            <span class="built_in">reverse</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">            t.<span class="built_in">insert</span>(e + a);</span><br><span class="line">            t.<span class="built_in">insert</span>(a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">swap</span>(t, st);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; *st.<span class="built_in">begin</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>如果有解,一定可以分成两段,因为两段mex相同的子数组合并到一起mex不变</p>
<p>所以需要枚举分界点即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, ans = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp, got;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i], mp[a[i]]++;</span><br><span class="line">        <span class="keyword">while</span> (mp[res])</span><br><span class="line">            res++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        mp[a[i]]--;</span><br><span class="line">        got[a[i]]++;</span><br><span class="line">        <span class="keyword">if</span> (!mp[a[i]])</span><br><span class="line">            res = <span class="built_in">min</span>(res, a[i]);</span><br><span class="line">        <span class="keyword">while</span> (got[ans])</span><br><span class="line">            ans++;</span><br><span class="line">        <span class="keyword">if</span> (ans == res)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;2&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;1 &quot;</span> &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; n &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>n不大,所以考虑暴力枚举左右端点</p>
<p>式子当中关于b的贡献只跟max,min有关,所以可以按照b排序,然后枚举max,min</p>
<p>接下来考虑怎样取使得a的贡献最小,可以用一个multiset维护,如果总和大于l就贪心的删去最大的</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, l;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; l;</span><br><span class="line">    <span class="function">vector&lt;pll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i].y &gt;&gt; a[i].x;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll sum = <span class="number">0</span>;</span><br><span class="line">        multiset&lt;ll&gt; s;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            s.<span class="built_in">insert</span>(a[j].y), sum += a[j].y;</span><br><span class="line">            <span class="keyword">if</span> (s.<span class="built_in">size</span>() &amp;&amp; sum + a[j].x - a[i].x &gt; l)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">auto</span> t = *s.<span class="built_in">rbegin</span>();</span><br><span class="line">                sum -= t;</span><br><span class="line">                s.<span class="built_in">extract</span>(t);</span><br><span class="line">            &#125;</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, <span class="number">1ll</span> * s.<span class="built_in">size</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>发现直接求不是很好求,考虑反过来</p>
<p>原题求x+y在集合中,且y-x不在集合中</p>
<p>反过来就是</p>
<p>求sum-(x+y在集合中||y-x在集合中)</p>
<p>容斥原理:</p>
<p>x+y 在集合中&#x3D;$\sum \left \lfloor \frac{a[i]}{2} \right \rfloor+1 $</p>
<p>y-x 在集合中&#x3D;$\sum c-a[i]+1 $</p>
<p> 在减去x+y 在集合中,且y-x在集合中</p>
<p>设y-x&#x3D;a,那么y&#x3D;a+x,x+y&#x3D;2x+a</p>
<p>也就是a在集合中且2*x+a在集合中</p>
<p>也就是奇偶性相同的数</p>
<p>$-&#x3D;cnt[0]<em>(cnt[0]+1)&#x2F;2+cnt[1]</em>(cnt[1]+1)&#x2F;2$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, c;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; c;</span><br><span class="line">    <span class="type">int</span> a[n + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    ll sum = (c + <span class="number">2</span>) * (c + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    ll cnt[<span class="number">2</span>] = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt[a[i] % <span class="number">2</span>]++;</span><br><span class="line">        sum -= a[i] / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">        sum -= c - a[i] + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sum += cnt[<span class="number">0</span>] * (cnt[<span class="number">0</span>] + <span class="number">1</span>) / <span class="number">2</span> + cnt[<span class="number">1</span>] * (cnt[<span class="number">1</span>] + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    cout &lt;&lt; sum &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 934 (Div 2)</title>
    <url>/2024/03/16/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)Codeforces%20Round%20934%20(Div%202)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    cout &lt;&lt; (k &gt;= n - <span class="number">1</span> ? <span class="number">1</span> : n) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>对于一种数x,只有两种情况:</p>
<p>都在一边,那么另外一边一定存在另外一个数y,在另外一边的数量位2,分别选x,y</p>
<p>两边各一个,两边都选x</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    k *= <span class="number">2</span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(<span class="number">2</span> * n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">cntl</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">cntr</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">vis</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cntl[a[i]]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n + <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i++)</span><br><span class="line">        cntr[a[i]]++;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; s1, s2;</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> len = <span class="number">0</span>, opt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (k &amp;&amp; cntl[i] == <span class="number">2</span>)</span><br><span class="line">            s1.<span class="built_in">push_back</span>(i), s1.<span class="built_in">push_back</span>(i), k -= <span class="number">2</span>, opt++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (k &amp;&amp; cntl[i] == <span class="number">1</span>)</span><br><span class="line">            s1.<span class="built_in">push_back</span>(i), vis[i] = <span class="number">1</span>, k--;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (cntr[i] == <span class="number">2</span> &amp;&amp; opt)</span><br><span class="line">            s2.<span class="built_in">push_back</span>(i), s2.<span class="built_in">push_back</span>(i), opt--;</span><br><span class="line">        <span class="keyword">if</span> (vis[i])</span><br><span class="line">            s2.<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : s1)</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : s2)</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>两种情况:</p>
<p>1.答案是第二个数量为1的</p>
<p>2.答案是第一个数量为0的</p>
<p>注意特判只有一个0的情况</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, ans = <span class="number">1e9</span>;</span><br><span class="line">    <span class="type">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">cnt</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        cnt[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; (cnt[<span class="number">0</span>] ? <span class="number">1</span> : <span class="number">0</span>) &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">if</span> (cnt[i] == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!f)</span><br><span class="line">                f = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">if</span> (!cnt[i])</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, i);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>注意到,如果有长度2的非回文就一定会有长度为3的…</p>
<p>答案就是:2+3+4+..+len</p>
<p>但是后面发现,出现了反例:</p>
<p>1.询问的区间整体是一个回文串,答案需要减去一个len</p>
<p>2.询问的区间是abababab的形式,这样3,5,7都要减去</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">100</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Hash</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">const</span> ll base = <span class="number">1361</span>;</span><br><span class="line">    <span class="type">const</span> ll p = <span class="number">998244353</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;ll&gt; a, c;</span><br><span class="line">    <span class="built_in">Hash</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n), <span class="built_in">a</span>(n + <span class="number">10</span>), <span class="built_in">c</span>(n + <span class="number">10</span>, <span class="number">0</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> n, vector&lt;<span class="type">char</span>&gt; arr)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ll res = <span class="number">0</span>;</span><br><span class="line">        c[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            res = (res * base + arr[i]) % p;</span><br><span class="line">            c[i] = c[i - <span class="number">1</span>] * base % p;</span><br><span class="line">            a[i] = res;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span> <span class="comment">// 询问子串的哈希值</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ll ans = (a[r] - a[l - <span class="number">1</span>] * c[r - l + <span class="number">1</span>] % p + p) % p;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">char</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">s</span>(n + <span class="number">10</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">30</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="function">Hash <span class="title">h1</span><span class="params">(n)</span>, <span class="title">h2</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">chk</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">26</span>; j++)</span><br><span class="line">            s[i][j] += s[i - <span class="number">1</span>][j];</span><br><span class="line">        s[i][a[i] - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    h1.<span class="built_in">build</span>(n, a);</span><br><span class="line">    <span class="built_in">reverse</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    h2.<span class="built_in">build</span>(n, a);</span><br><span class="line">    <span class="built_in">reverse</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i - <span class="number">1</span>] == a[i + <span class="number">1</span>])</span><br><span class="line">            chk[i] = <span class="number">1</span>;</span><br><span class="line">        chk[i] += chk[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= q; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="comment">// cout &lt;&lt; l &lt;&lt; &quot; &quot; &lt;&lt; r &lt;&lt; endl;</span></span><br><span class="line">        <span class="type">bool</span> f = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)</span><br><span class="line">            <span class="keyword">if</span> (s[r][i] - s[l - <span class="number">1</span>][i] == r - l + <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                f = <span class="number">1</span>;</span><br><span class="line">                cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (!f)</span><br><span class="line">        &#123;</span><br><span class="line">            ll len = r - l + <span class="number">1</span>;</span><br><span class="line">            ll res = (len - <span class="number">1</span>) * (<span class="number">2</span> + len) / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (chk[r - <span class="number">1</span>] - chk[l] == r - l - <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ll num = (r - l + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">                res = num * (<span class="number">2</span> + num * <span class="number">2</span>) / <span class="number">2</span>;</span><br><span class="line">                cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (h1.<span class="built_in">query</span>(l, r) == h2.<span class="built_in">query</span>(n - r + <span class="number">1</span>, n - l + <span class="number">1</span>))</span><br><span class="line">                    res -= len;</span><br><span class="line">                cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(10);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>注意到操作的点应该是在树的直径上,且尽量在中间</p>
<p>如果树的直径是奇数,那么就操作直径中点,距离从0-d&#x2F;2</p>
<p>如果直径是偶数,就操作中间的两个点,距离为1,3,5,7,..d&#x2F;2</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, c = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        e[u].<span class="built_in">push_back</span>(v), e[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; tr;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">d</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> &amp;dfs, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">            &#123;</span><br><span class="line">                d[to] = d[u] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (d[to] &gt; d[c])</span><br><span class="line">                    c = to;</span><br><span class="line">                <span class="built_in">dfs</span>(dfs, to, u);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> st, ed;</span><br><span class="line">    <span class="keyword">auto</span> find = [&amp;](<span class="keyword">auto</span> &amp;find, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (f)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        tr.<span class="built_in">push_back</span>(u);</span><br><span class="line">        <span class="keyword">if</span> (u == ed)</span><br><span class="line">        &#123;</span><br><span class="line">            f = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">find</span>(find, to, u);</span><br><span class="line">                <span class="keyword">if</span> (f)</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        tr.<span class="built_in">pop_back</span>();</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    d[c] = <span class="number">0</span>;</span><br><span class="line">    st = c;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, c, <span class="number">0</span>);</span><br><span class="line">    ed = c;</span><br><span class="line">    <span class="built_in">find</span>(find, st, <span class="number">0</span>);</span><br><span class="line">    vector&lt;pii&gt; ans;</span><br><span class="line">    <span class="keyword">if</span> (tr.<span class="built_in">size</span>() % <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> s = tr.<span class="built_in">size</span>() / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= s; i++)</span><br><span class="line">            ans.<span class="built_in">push_back</span>(&#123;tr[s], i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> s = tr.<span class="built_in">size</span>() / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= s; i += <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(&#123;tr[s], i&#125;);</span><br><span class="line">            ans.<span class="built_in">push_back</span>(&#123;tr[s - <span class="number">1</span>], i&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[x, y] : ans)</span><br><span class="line">        cout &lt;&lt; x &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; y &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 933 (Div 3)</title>
    <url>/2024/03/11/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)Codeforces%20Round%20933%20(Div%203)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n, <span class="number">0</span>)</span>, <span class="title">b</span><span class="params">(<span class="number">3e3</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        b[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2000</span>; i++)</span><br><span class="line">        b[i] += b[i - <span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; k)</span><br><span class="line">            ans += b[k - a[i]];</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>第一个元素一定只能全操作完,所以这样一直往后做就是对的</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i + <span class="number">2</span> &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> sub = a[i];</span><br><span class="line">            a[i] -= sub;</span><br><span class="line">            a[i + <span class="number">1</span>] -= <span class="number">2</span> * sub;</span><br><span class="line">            a[i + <span class="number">2</span>] -= sub;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (a[i] != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    s = <span class="string">&quot; &quot;</span> + s;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;p&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">bool</span> ok = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= <span class="number">3</span> &amp;&amp; s[i - <span class="number">1</span>] == <span class="string">&#x27;a&#x27;</span> &amp;&amp; s[i - <span class="number">2</span>] == <span class="string">&#x27;m&#x27;</span>)</span><br><span class="line">                ok = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (i + <span class="number">2</span> &lt;= n &amp;&amp; s[i + <span class="number">1</span>] == <span class="string">&#x27;i&#x27;</span> &amp;&amp; s[i + <span class="number">2</span>] == <span class="string">&#x27;e&#x27;</span>)</span><br><span class="line">                ok = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (ok)</span><br><span class="line">                ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>滚动数组dp</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, x;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; x;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">f</span><span class="params">(n, <span class="number">0</span>)</span>, <span class="title">dp</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="type">int</span> d;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    f[x - <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            dp[i] = <span class="number">0</span>;</span><br><span class="line">        cin &gt;&gt; d &gt;&gt; c;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">if</span> (f[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (c == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                    dp[(i + d) % n] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (c == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">                    dp[(i - d + n) % n] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (c == <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">                    dp[(i + d) % n] = <span class="number">1</span>, dp[(i - d + n) % n] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">swap</span>(f, dp);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">count</span>(f.<span class="built_in">begin</span>(), f.<span class="built_in">end</span>(), <span class="number">1</span>) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">if</span> (f[i])</span><br><span class="line">            cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;to be update</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>单调队列优化dp</p>
<p>也可以直接用multiset,数据范围不大</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, k, d;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k &gt;&gt; d;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">dp</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">vector&lt;ll&gt; <span class="title">f</span><span class="params">(m + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">a</span><span class="params">(m + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">q</span><span class="params">(m + <span class="number">100</span>, <span class="number">0</span>)</span></span>; <span class="comment">// f 在i一定建的最小答案</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            cin &gt;&gt; a[j];</span><br><span class="line">        <span class="type">int</span> l = <span class="number">0</span>, r = <span class="number">-1</span>;</span><br><span class="line">        f[<span class="number">1</span>] = a[<span class="number">1</span>] + <span class="number">1</span>, q[++r] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (r - l &gt;= <span class="number">0</span> &amp;&amp; q[r] - q[l] &gt; d)</span><br><span class="line">                l++;</span><br><span class="line">            f[j] = f[q[l]] + a[j] + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (r - l &gt;= <span class="number">0</span> &amp;&amp; f[j] &lt;= f[q[r]])</span><br><span class="line">                r--;</span><br><span class="line">            q[++r] = j;</span><br><span class="line">        &#125;</span><br><span class="line">        dp[i] = f[m];</span><br><span class="line">        dp[i] += dp[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">1e18</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = k; i &lt;= n; i++)</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, dp[i] - dp[i - k]);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>枚举每个$d_i$然后二分 $f$,向两边稍微拓展一下即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, m, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">d</span><span class="params">(m + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">f</span><span class="params">(k + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">        cin &gt;&gt; d[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; i++)</span><br><span class="line">        cin &gt;&gt; f[i];</span><br><span class="line">    <span class="built_in">sort</span>(d.<span class="built_in">begin</span>() + <span class="number">1</span>, d.<span class="built_in">end</span>()), <span class="built_in">sort</span>(f.<span class="built_in">begin</span>(), f.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">int</span> mx = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (a[i] - a[i - <span class="number">1</span>] &gt; mx)</span><br><span class="line">            mx = a[i] - a[i - <span class="number">1</span>], cnt = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[i] - a[i - <span class="number">1</span>] == mx)</span><br><span class="line">            cnt++;</span><br><span class="line">    <span class="keyword">if</span> (cnt &gt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; mx &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll p = <span class="number">2</span>, perf = <span class="number">0</span>, ans = <span class="number">1e18</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (a[i] - a[i - <span class="number">1</span>] == mx)</span><br><span class="line">            p = i, perf = (a[i] + a[i - <span class="number">1</span>]) / <span class="number">2</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll pos = <span class="built_in">lower_bound</span>(f.<span class="built_in">begin</span>() + <span class="number">1</span>, f.<span class="built_in">end</span>(), perf - d[i]) - f.<span class="built_in">begin</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> u = <span class="built_in">max</span>(<span class="number">1ll</span>, pos - <span class="number">5</span>); u &lt;= <span class="built_in">min</span>(k, pos + <span class="number">5</span>); u++)</span><br><span class="line">        &#123;</span><br><span class="line">            ll tmp = d[i] + f[u];</span><br><span class="line">            <span class="keyword">if</span> (tmp &gt;= a[p - <span class="number">1</span>] &amp;&amp; tmp &lt;= a[p])</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, <span class="built_in">max</span>(a[p] - tmp, tmp - a[p - <span class="number">1</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (i != p)</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, a[i] - a[i - <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (ans == <span class="number">1e18</span>)</span><br><span class="line">        ans = mx;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>对颜色建虚点</p>
<p>点往颜色走,需要1的代价,颜色往点走,0的代价</p>
<p>然后就变成了01bfs</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    vector&lt;vector&lt;pll&gt;&gt; <span class="built_in">e</span>(n + m + <span class="number">1</span>);</span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll u, v, c;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v &gt;&gt; c;</span><br><span class="line">        <span class="keyword">if</span> (!mp.<span class="built_in">count</span>(c))</span><br><span class="line">            mp[c] = ++n;</span><br><span class="line">        e[u].<span class="built_in">push_back</span>(&#123;mp[c], <span class="number">1</span>&#125;);</span><br><span class="line">        e[mp[c]].<span class="built_in">push_back</span>(&#123;u, <span class="number">0</span>&#125;);</span><br><span class="line">        e[v].<span class="built_in">push_back</span>(&#123;mp[c], <span class="number">1</span>&#125;);</span><br><span class="line">        e[mp[c]].<span class="built_in">push_back</span>(&#123;v, <span class="number">0</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> s1, s2;</span><br><span class="line">    cin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">dist</span><span class="params">(n + <span class="number">1</span>, <span class="number">1e18</span>)</span></span>;</span><br><span class="line">    dist[s1] = <span class="number">0</span>;</span><br><span class="line">    deque&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push_back</span>(s1);</span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop_front</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> [to, w] : e[t])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (dist[to] &gt; dist[t] + w)</span><br><span class="line">            &#123;</span><br><span class="line">                dist[to] = dist[t] + w;</span><br><span class="line">                <span class="keyword">if</span> (w)</span><br><span class="line">                    q.<span class="built_in">push_front</span>(to);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    q.<span class="built_in">push_back</span>(to);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; dist[s2] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 935 (Div 3)</title>
    <url>/2024/03/19/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)Codeforces%20Round%20935%20(Div%203)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>b,c尽量取3,b尽量先自己组</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll a, b, c;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">    ll ans = a + b / <span class="number">3</span>;</span><br><span class="line">    ll ne = b % <span class="number">3</span> ? <span class="number">3</span> - b % <span class="number">3</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (ne)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ne &gt; c)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            c -= ne, ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (c)</span><br><span class="line">        ans += (c - <span class="number">1</span>) / <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll a, b, m;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; m;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    ans += (m - <span class="number">1</span>) / a + <span class="number">1</span> + (m % a == <span class="number">0</span>);</span><br><span class="line">    ans += (m - <span class="number">1</span>) / b + <span class="number">1</span> + (m % b == <span class="number">0</span>);</span><br><span class="line"> </span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>记得判0,以及写正确的上取整除法</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">s</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        cin &gt;&gt; c;</span><br><span class="line">        s[i] = (c == <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">        s[i] += s[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (s[n] &gt;= (n + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">bool</span> f = (i - s[i] &gt;= (i + <span class="number">2</span> - <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line">        f &amp;= (s[n] - s[i] &gt;= (n - i + <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> (f &amp;&amp; <span class="built_in">fabs</span>(<span class="number">1.0</span> * n / <span class="number">2.</span> - (db)i) &lt; <span class="built_in">fabs</span>(<span class="number">1.0</span> * n / <span class="number">2.</span> - (db)ans))</span><br><span class="line">            ans = i;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">b</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">f</span><span class="params">(n + <span class="number">1</span>, <span class="number">1e18</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">    ll ans = <span class="number">0</span>, add = <span class="number">1e18</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = m + <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        ans += <span class="built_in">min</span>(a[i], b[i]);</span><br><span class="line">    ll s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = m; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        add = <span class="built_in">min</span>(add, a[i] + s);</span><br><span class="line">        s += b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans + add &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>swap二分找到的点和答案所在的点,最多一次</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, x;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">if</span> (a[i] == x)</span><br><span class="line">            p = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = (l + r + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (a[mid] &lt;= x)</span><br><span class="line">            l = mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (l != p)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&#x27;1&#x27;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; l &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; p &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&#x27;0&#x27;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">p</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">cho</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">f</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; p[i], f[p[i]] = a[p[i]];</span><br><span class="line"></span><br><span class="line">    multiset&lt;pll&gt; s1, s2;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        s1.<span class="built_in">insert</span>(&#123;a[i], i&#125;);</span><br><span class="line">    ll ans = <span class="number">0</span>, opt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (cho[p[i - <span class="number">1</span>]])</span><br><span class="line">                s2.<span class="built_in">erase</span>(&#123;f[p[i - <span class="number">1</span>]], p[i - <span class="number">1</span>]&#125;);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                s1.<span class="built_in">erase</span>(&#123;f[p[i - <span class="number">1</span>]], p[i - <span class="number">1</span>]&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (s1.<span class="built_in">size</span>() &amp;&amp; s2.<span class="built_in">size</span>() &lt; i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> t = *s1.<span class="built_in">rbegin</span>();</span><br><span class="line">            s1.<span class="built_in">erase</span>(t);</span><br><span class="line">            s2.<span class="built_in">insert</span>(t);</span><br><span class="line">            cho[t.y] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ll res = (ll)s2.<span class="built_in">size</span>() * (*s2.<span class="built_in">begin</span>()).x;</span><br><span class="line">        <span class="keyword">if</span> (s2.<span class="built_in">size</span>() == i &amp;&amp; res &gt; ans)</span><br><span class="line">            ans = res, opt = s2.<span class="built_in">size</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; opt &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>每次比较打过一次粥的里面最大的和没打过的大小,模拟即可</p>
<p>注意打过的需要按照k,回来时间,s排序</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">stu</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> t, k, num, s;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> stu &amp;a) <span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k != a.k)</span><br><span class="line">            <span class="keyword">return</span> k &gt; a.k;</span><br><span class="line">        <span class="keyword">if</span> (t != a.t)</span><br><span class="line">            <span class="keyword">return</span> t &lt; a.t;</span><br><span class="line">        <span class="keyword">return</span> s &lt; a.s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">stu</span>(<span class="type">int</span> t, <span class="type">int</span> k, <span class="type">int</span> num, <span class="type">int</span> s) : <span class="built_in">t</span>(t), <span class="built_in">k</span>(k), <span class="built_in">num</span>(num), <span class="built_in">s</span>(s) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    set&lt;stu&gt; s1;</span><br><span class="line">    <span class="type">int</span> n, d;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; d;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">p</span>(d + <span class="number">1</span>);</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">k</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">s</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">suf</span><span class="params">(n + <span class="number">2</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; k[i] &gt;&gt; s[i];</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">        suf[i] = <span class="built_in">max</span>(suf[i + <span class="number">1</span>], k[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= d; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s1.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> it1 = *s1.<span class="built_in">begin</span>();</span><br><span class="line">            <span class="keyword">if</span> (it1.k &gt; suf[l])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//  cout &lt;&lt; &quot;i= &quot; &lt;&lt; i &lt;&lt; &quot; &quot; &lt;&lt; it1.num &lt;&lt; endl;</span></span><br><span class="line">                s1.<span class="built_in">erase</span>(it1);</span><br><span class="line">                <span class="keyword">if</span> (i + it1.s &lt;= d)</span><br><span class="line">                    p[i + it1.s].<span class="built_in">push_back</span>(it1.num);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i + s[l] &lt;= d)</span><br><span class="line">                    p[i + s[l]].<span class="built_in">push_back</span>(l);</span><br><span class="line">                l++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i + s[l] &lt;= d)</span><br><span class="line">                p[i + s[l]].<span class="built_in">push_back</span>(l);</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (l &gt; n)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> e : p[i])</span><br><span class="line">            s1.<span class="built_in">insert</span>(<span class="built_in">stu</span>(i, k[e], e, s[e]));</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="H"><a href="#H" class="headerlink" title="H"></a>H</h1><p>首先注意到,&amp;的数越多,值不会变大,但是可能更小,所以策略就是只取两个</p>
<p>再考虑取数对&amp;的影响:</p>
<p>对于某一位i:</p>
<p>1.bit[i]&#x3D;&#x3D;n-1,取一个这一位为0的数会使得&amp;从0变1</p>
<p>2.bit[i]&#x3D;&#x3D;n-1,取两个这一位为0的数会使得&amp;从0变1</p>
<p>因此选择的数只有三种情况:</p>
<p>1.选两个有影响的</p>
<p>2.选一个有影响的,一个没影响的</p>
<p>3.选两个没有影响的(此时要选gcd最大的,枚举gcd)</p>
<p>1.2两种情况可以暴力</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, x, N;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">bit</span><span class="params">(<span class="number">30</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; aff, oth;</span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">auto</span> print = [&amp;](<span class="type">int</span> x, <span class="type">int</span> y) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;2 &quot;</span> &lt;&lt; x &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; y &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; n - <span class="number">2</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[k] == x)</span><br><span class="line">            &#123;</span><br><span class="line">                x = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (a[k] == y)</span><br><span class="line">            &#123;</span><br><span class="line">                y = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; a[k] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">20</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">            <span class="keyword">if</span> ((a[i] &gt;&gt; j) &amp; <span class="number">1</span>)</span><br><span class="line">                bit[j]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    N = *<span class="built_in">max_element</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">bool</span> f = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">20</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!(a[i] &gt;&gt; j &amp; <span class="number">1</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (bit[j] == n - <span class="number">1</span> || bit[j] == n - <span class="number">2</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    aff.<span class="built_in">push_back</span>(a[i]), f = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!f)</span><br><span class="line">            oth.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> cal = [&amp;](<span class="type">int</span> a, <span class="type">int</span> b) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">20</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> num = ((a &gt;&gt; i) &amp; <span class="number">1</span>) + ((b &gt;&gt; i) &amp; <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (bit[i] - num == n - <span class="number">2</span>)</span><br><span class="line">                res |= <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 情况1,选两个有影响的</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; aff.<span class="built_in">size</span>(); i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; aff.<span class="built_in">size</span>(); j++)</span><br><span class="line">            <span class="keyword">if</span> (__gcd(aff[i], aff[j]) &gt; <span class="built_in">cal</span>(aff[i], aff[j]) + x)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">print</span>(aff[i], aff[j]);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="comment">// 情况2 选一个有影响的,一个没影响的</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; aff.<span class="built_in">size</span>(); i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; oth.<span class="built_in">size</span>(); j++)</span><br><span class="line">            <span class="keyword">if</span> (__gcd(aff[i], oth[j]) &gt; <span class="built_in">cal</span>(aff[i], oth[j]) + x)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">print</span>(aff[i], oth[j]);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="comment">// 情况3 选两个不影响的数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : oth)</span><br><span class="line">        mp[i]++;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">cho</span><span class="params">(<span class="number">2</span>)</span></span>;</span><br><span class="line">    <span class="type">int</span> he = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> g = <span class="number">1</span>; g &lt;= N; g++)</span><br><span class="line">    &#123;</span><br><span class="line">        he = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j * g &lt;= N; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; mp[j * g] &amp;&amp; he &lt; <span class="number">2</span>; k++)</span><br><span class="line">                cho[he++] = j * g;</span><br><span class="line">            <span class="keyword">if</span> (he == <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (g &gt; <span class="built_in">cal</span>(cho[<span class="number">0</span>], cho[<span class="number">1</span>]) + x)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">print</span>(cho[<span class="number">0</span>], cho[<span class="number">1</span>]);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 936 (Div 2)</title>
    <url>/2024/03/22/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)Codeforces%20Round%20936%20(Div%202)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>将中位数后面所有与中位数相等的数加一</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = (n + <span class="number">2</span> - <span class="number">1</span>) / <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == a[(n + <span class="number">2</span> - <span class="number">1</span>) / <span class="number">2</span>])</span><br><span class="line">            cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>选择最大字段和,每次操作就是把最大子段和*2</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    ll mx = <span class="number">-1e9</span>, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">f</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        sum = (sum + a[i] + mod) % mod;</span><br><span class="line">        f[i] = a[i];</span><br><span class="line">        f[i] = <span class="built_in">max</span>(a[i], f[i - <span class="number">1</span>] + a[i]);</span><br><span class="line">        mx = <span class="built_in">max</span>(mx, f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    ll add = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (mx &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            add = (add + mx) % mod;</span><br><span class="line">            mx = mx * <span class="number">2</span> % mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; (sum + add + mod) % mod &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>二分答案+贪心</p>
<p>二分最小的联通的大小x,然后在保证最小的联通块的大小$\ge$x的情况下,尽可能多切,看看是否大于等于k</p>
<p>为什么贪心切是正确的?</p>
<p>对于当且节点u,枚举它的子树,只会有两种情况:</p>
<p>1.子树所在的连通块大小大于等于x,这时贪心的切掉</p>
<p>2.小于x,将这个子树和u放在一个连通块内,如果这条边被切,那子树一定小于x</p>
<p>最后需要特判根节点所在联通块的大小,如果小于需要-1</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k, opt = <span class="number">0</span>, tar = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        e[u].<span class="built_in">push_back</span>(v), e[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sz</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">auto</span> del = [&amp;](<span class="keyword">auto</span> &amp;del, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        sz[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">del</span>(del, to, u);</span><br><span class="line">                <span class="keyword">if</span> (sz[to] &gt;= tar)</span><br><span class="line">                    opt++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    sz[u] += sz[to];</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> chk = [&amp;](<span class="type">int</span> x) -&gt; <span class="type">bool</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            sz[i] = <span class="number">0</span>;</span><br><span class="line">        opt = <span class="number">0</span>, tar = x;</span><br><span class="line">        <span class="built_in">del</span>(del, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (sz[<span class="number">1</span>] &lt; x)</span><br><span class="line">            opt--;</span><br><span class="line">        <span class="keyword">return</span> opt &gt;= k;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">chk</span>(mid))</span><br><span class="line">            l = mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; l &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(5);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>如果想让某一位最后的答案是1,那么这一位可以随便划分</p>
<p>如果想让某一位最后的答案是0,那么必须要满足这一位1的数量是偶数,这样才能两两异或变成0</p>
<p>最后枚举x的每一位,看看是要等于还是小于</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, x;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">bit</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">35</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">29</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ((a[i] &gt;&gt; j) &amp; <span class="number">1</span>)</span><br><span class="line">                bit[i][j]++;</span><br><span class="line">            bit[i][j] += bit[i - <span class="number">1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> cal = [&amp;](<span class="type">int</span> ed) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>, lst = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">bool</span> ok = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">29</span>; j &gt;= ed; j--)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((x &gt;&gt; j) &amp; <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (j != ed)</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> ((bit[i][j] - bit[lst][j]) % <span class="number">2</span> != <span class="number">0</span>)</span><br><span class="line">                            ok = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((bit[i][j] - bit[lst][j]) % <span class="number">2</span> != <span class="number">0</span>)</span><br><span class="line">                        ok = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ok)</span><br><span class="line">                res++, lst = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (lst != n)</span><br><span class="line">            res = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">29</span>; k &gt;= <span class="number">0</span>; k--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((x &gt;&gt; k) &amp; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (bit[n][k] % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">                ans = <span class="built_in">max</span>(ans, <span class="built_in">cal</span>(k));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans = <span class="built_in">max</span>(ans, <span class="built_in">cal</span>(<span class="number">0</span>));</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>, lst = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">bool</span> ok = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">29</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ((x &gt;&gt; j) &amp; <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((bit[i][j] - bit[lst][j]) % <span class="number">2</span> != <span class="number">0</span>)</span><br><span class="line">                    ok = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ok)</span><br><span class="line">            res++, lst = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (lst == n)</span><br><span class="line">        ans = <span class="built_in">max</span>(ans, res);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>组合数学</p>
<p>1.首先注意到a[x]&#x3D;b[1]且一定是排列的最大值,那么这个位置就是确定的</p>
<p>然后分别考虑最大值右边左边的情况,最后乘起来即可</p>
<p>2.先考虑右边选哪些数,方案数为$C(n-1,a[x]-1)$</p>
<p>右边数选好后,左边的数也确定了,所以左边就不用重复计算了</p>
<p>3.再考虑$a[i]-a[i+1]$之间的方案数:</p>
<p>设此时还没有被确定的数的数量为rem</p>
<p>先确定a[i],rem–</p>
<p>这中间的数必须满足$&lt;a[i]$,所以方案数为$A(rem,a[i+1]-a[i]-1)$</p>
<p>4.左边依次类推,右边同理</p>
<p>最后再考虑无解的几种特判:</p>
<p>1.$a[x]\ne b[1]$</p>
<p>2.$a[1]\ne 1$</p>
<p>3.$b[y]\ne n$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">PC</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> mx;</span><br><span class="line">    vector&lt;ll&gt; fac, invfac;</span><br><span class="line">    <span class="function">ll <span class="title">qmi</span><span class="params">(ll a, ll b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ll res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">                res = res * a % mod;</span><br><span class="line">            b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">            a = a * a % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">PC</span>(<span class="type">int</span> n) : <span class="built_in">mx</span>(n), <span class="built_in">fac</span>(n + <span class="number">10</span>), <span class="built_in">invfac</span>(n + <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            fac[i] = fac[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">        invfac[n] = <span class="built_in">qmi</span>(fac[n], mod - <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">            invfac[i] = invfac[i + <span class="number">1</span>] * (i + <span class="number">1</span>) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">C</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; m || m &lt; <span class="number">0</span> || n &gt; mx)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0ll</span>;</span><br><span class="line">        <span class="keyword">return</span> fac[n] * invfac[n - m] % mod * invfac[m] % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">A</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; m || m &lt; <span class="number">0</span> || n &gt; mx)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0ll</span>;</span><br><span class="line">        <span class="keyword">return</span> fac[n] * invfac[n - m] % mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, x, y;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    <span class="function">PC <span class="title">pc</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(x + <span class="number">1</span>)</span>, <span class="title">b</span><span class="params">(y + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= x; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= y; i++)</span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">    <span class="keyword">if</span> (a[x] != b[<span class="number">1</span>] || a[<span class="number">1</span>] != <span class="number">1</span> || b[y] != n)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&#x27;0&#x27;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">1</span>, rem = a[x] - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = x - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        rem--;</span><br><span class="line">        ans = ans * pc.<span class="built_in">A</span>(rem, a[i + <span class="number">1</span>] - a[i] - <span class="number">1</span>) % mod;</span><br><span class="line">        rem -= a[i + <span class="number">1</span>] - a[i] - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    rem = n - b[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= y; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        rem--;</span><br><span class="line">        ans = ans * pc.<span class="built_in">A</span>(rem, b[i] - b[i - <span class="number">1</span>] - <span class="number">1</span>) % mod;</span><br><span class="line">        rem -= b[i] - b[i - <span class="number">1</span>] - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans = ans * pc.<span class="built_in">C</span>(n - <span class="number">1</span>, a[x] - <span class="number">1</span>) % mod;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>枚举选择子序列的左右端点,发现$a[l]|a[r]$</p>
<p>怎样计算这一对左右端点对答案的贡献?</p>
<p>考虑区间中的某个可行的转移点$m$</p>
<p>一定是$a[l]\le a[m]&lt;a[r]$</p>
<p>又因为当前项必须是前一项的倍数,所以可以暴力枚举$l,m,r$,复杂度是$O(n\ logn\ logn)$</p>
<p>这样就可以得到每一对左右端点对答案的贡献了</p>
<p>然后把询问和贡献离线下来,扫描线跑一边ji’k</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">BIT</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;ll&gt; a;</span><br><span class="line">    <span class="built_in">BIT</span>(<span class="type">int</span> n) : <span class="built_in">n</span>(n), <span class="built_in">a</span>(n + <span class="number">10</span>, <span class="number">0</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lb</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123; <span class="keyword">return</span> x &amp; -x; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, ll y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (; x &lt;= n; x += <span class="built_in">lb</span>(x))</span><br><span class="line">            a[x] += y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// if (x == 0)</span></span><br><span class="line">        <span class="comment">//     return 0;</span></span><br><span class="line">        ll res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; x; x ^= <span class="built_in">lb</span>(x))</span><br><span class="line">            res += a[x];</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">que</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query</span>(r) - <span class="built_in">query</span>(l - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line">    <span class="function">BIT <span class="title">bit</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">p</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">f</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">ans</span><span class="params">(q)</span></span>;</span><br><span class="line">    vector&lt;array&lt;<span class="type">int</span>, 3&gt;&gt; ins, <span class="built_in">qry</span>(q);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        p[a[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        qry[i] = &#123;l, r, i&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = a[i];</span><br><span class="line">        f[x] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> y = x; y &lt;= n; y += x)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p[y] &lt; p[x])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> z = <span class="number">2</span> * y; z &lt;= n; z += y)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (p[z] &lt; p[y])</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                f[z] += f[y];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> y = x; y &lt;= n; y += x)</span><br><span class="line">        &#123;</span><br><span class="line">            ins.<span class="built_in">push_back</span>(&#123;i, p[y], f[y]&#125;);</span><br><span class="line">            f[y] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(qry.<span class="built_in">begin</span>(), qry.<span class="built_in">end</span>(), [&amp;](array&lt;<span class="type">int</span>, <span class="number">3</span>&gt; a, array&lt;<span class="type">int</span>, <span class="number">3</span>&gt; b)</span><br><span class="line">         &#123; <span class="keyword">return</span> a[<span class="number">1</span>] &lt; b[<span class="number">1</span>]; &#125;);</span><br><span class="line">    <span class="built_in">sort</span>(ins.<span class="built_in">begin</span>(), ins.<span class="built_in">end</span>(), [&amp;](array&lt;<span class="type">int</span>, <span class="number">3</span>&gt; a, array&lt;<span class="type">int</span>, <span class="number">3</span>&gt; b)</span><br><span class="line">         &#123; <span class="keyword">return</span> a[<span class="number">1</span>] &lt; b[<span class="number">1</span>]; &#125;);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> r = <span class="number">1</span>; r &lt;= n; r++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; ins.<span class="built_in">size</span>() &amp;&amp; ins[i][<span class="number">1</span>] == r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> [l, r, x] = ins[i];</span><br><span class="line">            bit.<span class="built_in">add</span>(l, x), i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (j &lt; qry.<span class="built_in">size</span>() &amp;&amp; qry[j][<span class="number">1</span>] == r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> [l, r, id] = qry[j];</span><br><span class="line">            ans[id] = bit.<span class="built_in">que</span>(l, n), j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; q; i++)</span><br><span class="line">        cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>Educational Codeforces Round 163 (Rated for Div 2)</title>
    <url>/2024/03/15/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)Educational%20Codeforces%20Round%20163%20(Rated%20for%20Div%202)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>一定是成对出现,所以奇数不行</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt;= n; i += <span class="number">2</span>, j = (j + <span class="number">1</span>) % <span class="number">26</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">char</span>(<span class="string">&#x27;A&#x27;</span> + j);</span><br><span class="line">            cout &lt;&lt; <span class="built_in">char</span>(<span class="string">&#x27;A&#x27;</span> + j);</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>一定是对一个前缀进行操作,找到最后一个$a[i-1]&gt;a[i]$,把$1-i-1$全部操作,然后检查一下即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (a[i - <span class="number">1</span>] &gt; a[i])</span><br><span class="line">            s = i - <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; stk;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= s; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt;= <span class="number">9</span>)</span><br><span class="line">            stk.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            stk.<span class="built_in">push_back</span>(a[i] / <span class="number">10</span>), stk.<span class="built_in">push_back</span>(a[i] % <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = s + <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        stk.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; stk.<span class="built_in">size</span>(); i++)</span><br><span class="line">        <span class="keyword">if</span> (stk[i - <span class="number">1</span>] &gt; stk[i])</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>bfs</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(<span class="number">3</span>, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(n + <span class="number">1</span>));</span><br><span class="line">    vector&lt;vector&lt;<span class="type">bool</span>&gt;&gt; <span class="built_in">dis</span>(<span class="number">3</span>, <span class="built_in">vector</span>&lt;<span class="type">bool</span>&gt;(n + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    queue&lt;pii&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(&#123;<span class="number">2</span>, <span class="number">1</span>&#125;), q.<span class="built_in">push</span>(&#123;<span class="number">1</span>, <span class="number">2</span>&#125;);</span><br><span class="line">    dis[<span class="number">1</span>][<span class="number">1</span>] = dis[<span class="number">2</span>][<span class="number">1</span>] = dis[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> [x, y] = q.<span class="built_in">front</span>();</span><br><span class="line">        <span class="keyword">if</span> (a[x][y] == <span class="string">&#x27;&gt;&#x27;</span>)</span><br><span class="line">            y++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            y--;</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (y &lt; <span class="number">1</span> || y &gt; n)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        dis[x][y] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> xx = x + dx[i], yy = y + dy[i];</span><br><span class="line">            <span class="keyword">if</span> (xx &gt;= <span class="number">1</span> &amp;&amp; xx &lt;= <span class="number">2</span> &amp;&amp; yy &gt;= <span class="number">1</span> &amp;&amp; yy &lt;= n &amp;&amp; !dis[xx][yy])</span><br><span class="line">            &#123;</span><br><span class="line">                dis[xx][yy] = <span class="number">1</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(&#123;xx, yy&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; (dis[<span class="number">2</span>][n] ? <span class="string">&quot;YES&quot;</span> : <span class="string">&quot;NO&quot;</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>枚举每个长度,检查是否可行</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string str;</span><br><span class="line">    cin &gt;&gt; str;</span><br><span class="line">    <span class="type">int</span> n = str.<span class="built_in">size</span>();</span><br><span class="line">    <span class="function">vector&lt;<span class="type">char</span>&gt; <span class="title">s</span><span class="params">(str.size() + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        s[i] = str[i - <span class="number">1</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">auto</span> chk = [&amp;](<span class="type">int</span> l) -&gt; <span class="type">bool</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!l)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            a[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i + l &lt;= n; i++)</span><br><span class="line">            <span class="keyword">if</span> (s[i] == <span class="string">&#x27;?&#x27;</span> || s[i + l] == <span class="string">&#x27;?&#x27;</span> || s[i] == s[i + l])</span><br><span class="line">                a[i] = <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i + l &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span> (cnt == l)</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cnt = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n / <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">chk</span>(i))</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">2</span> * i &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>打表,发现对于限制k,每次最大可以形成一个包含k个点团</p>
<p>打表代码</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"> <span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    a[i] = i;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">next_permutation</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>()))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">auto</span> chk = [&amp;]()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">abs</span>(i - j) + <span class="built_in">abs</span>(a[i] - a[j]) &gt; n)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">chk</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后观察所有的合法情况,可以得到以下的合法构造:</p>
<p>偶数</p>
<p>5 6 7 8&#x2F;1 2 3 4</p>
<p>奇数</p>
<p>5 6 7 8 &#x2F;9&#x2F; 1 2 3 4</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k, tot = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">p</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i + k - <span class="number">1</span> &lt;= n; i += k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> st = (tot - <span class="number">1</span>) * k + (k + <span class="number">1</span>) / <span class="number">2</span> + (k % <span class="number">2</span> == <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt;= i + k - <span class="number">1</span>; j++)</span><br><span class="line">            p[j] = tot;</span><br><span class="line">        <span class="type">int</span> p = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> v = st; v &lt;= i + k - <span class="number">1</span>; p++, v++)</span><br><span class="line">            a[p] = v;</span><br><span class="line">        st = (tot - <span class="number">1</span>) * k + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> v = st; p &lt;= i + k - <span class="number">1</span>; p++, v++)</span><br><span class="line">            a[p] = v;</span><br><span class="line">        tot++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (n % k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = n % k;</span><br><span class="line">        <span class="type">int</span> st = (n / k) * k + (t + <span class="number">1</span>) / <span class="number">2</span> + (t % <span class="number">2</span> == <span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> pos = (n / k) * k + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> v = st; v &lt;= n; pos++, v++)</span><br><span class="line">            a[pos] = v;</span><br><span class="line">        st = n / k * k + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> v = st; pos &lt;= n; pos++, v++)</span><br><span class="line">            a[pos] = v;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; (n + k - <span class="number">1</span>) / k &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!p[i])</span><br><span class="line">            p[i] = tot;</span><br><span class="line">        cout &lt;&lt; p[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>设x为l,r范围内有x枚银币价值为1,y为l,r范围外有x枚银币价值为1</p>
<p>那么题目就是要求:</p>
<p>$a_{l-r}+x&gt;a_{other}+y$</p>
<p>移项得到</p>
<p>$x-y&gt;a_{other}-a_{l-r}&#x3D;const$</p>
<p>$\binom{b_{l-r}}{x}\binom{b_{other}}{y} $</p>
<p>$b_{l-r}+b_{other}&#x3D;b_{n}$</p>
<p>有点类似范德蒙卷积,于是修改原来的定义:</p>
<p>设y为l,r范围外有x枚银币价值为0</p>
<p>$a_{l-r}+x&gt;a_{other}+b_{other}-y$</p>
<p>$x+y&gt;a_{other}+a_{l-r}+b_{other}&#x3D;const$</p>
<p>$\binom{b_{l-r}}{x}\binom{b_{other}}{y} $</p>
<p>答案变成了一个范德蒙卷积前缀和的形式,预处理即可</p>
<p>注意不合法的情况</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> qmi = [&amp;](ll a, ll b) -&gt; ll</span><br><span class="line">    &#123;</span><br><span class="line">        ll res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">                res = res * a % mod;</span><br><span class="line">            b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">            a = a * a % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">fac</span><span class="params">(N, <span class="number">0</span>)</span>, <span class="title">invfac</span><span class="params">(N, <span class="number">0</span>)</span></span>;</span><br><span class="line">    fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1e6</span>; i++)</span><br><span class="line">        fac[i] = fac[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">    invfac[<span class="number">1e6</span>] = <span class="built_in">qmi</span>(fac[<span class="number">1e6</span>], mod - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1e6</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        invfac[i] = invfac[i + <span class="number">1</span>] * (i + <span class="number">1</span>) % mod;</span><br><span class="line">    <span class="keyword">auto</span> C = [&amp;](<span class="type">int</span> n, <span class="type">int</span> m) -&gt; ll</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (m &gt; n || m &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0ll</span>;</span><br><span class="line">        <span class="keyword">return</span> fac[n] * invfac[n - m] % mod * invfac[m] % mod;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">b</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i], a[i] += a[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; b[i], b[i] += b[i - <span class="number">1</span>];</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">com</span><span class="params">(b[n] + <span class="number">10</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = b[n]; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        com[i] = <span class="built_in">C</span>(b[n], i);</span><br><span class="line">        com[i] = (com[i] + com[i + <span class="number">1</span>]) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    ll g = <span class="built_in">qmi</span>(<span class="built_in">qmi</span>(<span class="number">2</span>, b[n]), mod - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        ll s = a[n] - <span class="number">2</span> * (a[r] - a[l - <span class="number">1</span>]) + b[n] - (b[r] - b[l - <span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (s &lt; <span class="number">-1</span>)</span><br><span class="line">            cout &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (s + <span class="number">1</span> &gt; b[n])</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;0 &quot;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; com[s + <span class="number">1</span>] * g % mod &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>Educational Codeforces Round 162 (Rated for Div. 2)</title>
    <url>/2024/02/23/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)Educational%20Codeforces%20Round%20162%20(Rated%20for%20Div.%202)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>答案就是最左边1到最右边1之间0的数量</p>
<p>每次1往左走都会占据一个0,所以总步数就是0的数量</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, ans = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">0</span>, r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">if</span> (a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!l)</span><br><span class="line">                l = i;</span><br><span class="line">            r = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt;= r; i++)</span><br><span class="line">        <span class="keyword">if</span> (!a[i])</span><br><span class="line">            ans++;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>模拟整个过程即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="function">vector&lt;pll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i].y;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i].x;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>(), [](pll a, pll b)</span><br><span class="line">         &#123; <span class="keyword">return</span> <span class="built_in">abs</span>(a.x) &lt; <span class="built_in">abs</span>(b.x); &#125;);</span><br><span class="line"> </span><br><span class="line">    ll t = <span class="number">0</span>;</span><br><span class="line">    ll blt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        blt += (<span class="built_in">abs</span>(a[i].x) - t) * k;</span><br><span class="line">        t = <span class="built_in">abs</span>(a[i].x);</span><br><span class="line">        ll cost = <span class="built_in">min</span>(blt, a[i].y);</span><br><span class="line">        blt -= cost, a[i].y -= cost;</span><br><span class="line">        <span class="keyword">if</span> (a[i].y &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>对于询问的区间,1必须加</p>
<p>那么就是只有两周情况是NO:</p>
<p>1.需要加的小于能减的,比如1 1 1 2</p>
<p>2.全是1</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">sub</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">add</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="number">1</span>)</span><br><span class="line">            add[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            sub[i] = a[i] - <span class="number">1</span>;</span><br><span class="line">        add[i] += add[i - <span class="number">1</span>];</span><br><span class="line">        sub[i] += sub[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        ll s = sub[r] - sub[l - <span class="number">1</span>];</span><br><span class="line">        ll ad = add[r] - add[l - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (s &lt; ad || r - l + <span class="number">1</span> == <span class="number">1</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>预处理出每个位置,左&#x2F;右的第一个不同数的位置,答案一定满足:</p>
<p>1.和大于a[i]</p>
<p>2.区间数不全相同</p>
<p>二分即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">fl</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span>, <span class="title">fr</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span>, <span class="title">a</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span>, <span class="title">s</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="comment">// a[0] = a[n + 1] = -1;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        fl[i] = (a[i] != a[i - <span class="number">1</span>]) ? i - <span class="number">1</span> : fl[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">        fr[i] = (a[i] != a[i + <span class="number">1</span>]) ? i + <span class="number">1</span> : fr[i + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    <span class="keyword">auto</span> chk = [&amp;](<span class="type">int</span> l, <span class="type">int</span> r, ll val) -&gt; <span class="type">bool</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> s[r] - s[l - <span class="number">1</span>] &gt; val;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> cal = [&amp;](<span class="type">int</span> pos) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> posl = <span class="number">0</span>, posr = n + <span class="number">1</span>, l, r;</span><br><span class="line">        <span class="keyword">for</span> (l = <span class="number">1</span>, r = pos - <span class="number">1</span>; l &lt; r;)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">chk</span>(mid, pos - <span class="number">1</span>, a[pos]))</span><br><span class="line">                posl = mid, l = mid;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                r = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">chk</span>(l, pos - <span class="number">1</span>, a[pos]))</span><br><span class="line">            posl = l;</span><br><span class="line">        <span class="keyword">if</span> (posl &amp;&amp; pos - posl &gt; <span class="number">1</span> &amp;&amp; fr[posl] &gt;= pos)</span><br><span class="line">            posl = fl[posl];</span><br><span class="line">        <span class="keyword">for</span> (l = pos + <span class="number">1</span>, r = n; l &lt; r;)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">chk</span>(pos + <span class="number">1</span>, mid, a[pos]))</span><br><span class="line">                posr = mid, r = mid;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">chk</span>(pos + <span class="number">1</span>, r, a[pos]))</span><br><span class="line">            posr = r;</span><br><span class="line">        <span class="keyword">if</span> (posr != n + <span class="number">1</span> &amp;&amp; posr - pos &gt; <span class="number">1</span> &amp;&amp; fl[posr] &lt;= pos)</span><br><span class="line">            posr = fr[posr];</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (posl == <span class="number">0</span> &amp;&amp; posr == n + <span class="number">1</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;-1 &quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (posl == <span class="number">0</span>)</span><br><span class="line">            cout &lt;&lt; posr - pos &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (posr == n + <span class="number">1</span>)</span><br><span class="line">            cout &lt;&lt; pos - posl &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="built_in">min</span>(posr - pos, pos - posl) &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="built_in">cal</span>(i);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>1.dsu on tree</p>
<p>对于以u为根的子树,对答案的贡献有两种:</p>
<p>1.u和子树</p>
<p>2.子树和子树</p>
<p>可以dsu on tree来维护以col结尾的路径数</p>
<p>记得最后把以$c[u]$结尾的更新为1</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) (a[x].sum)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> tag(x) (a[x].t)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e7</span>, M = <span class="number">25</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">c</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; c[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        e[u].<span class="built_in">push_back</span>(v), e[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    vector&lt;map&lt;ll, ll&gt;&gt; <span class="built_in">mp</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> &amp;&amp;dfs, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">dfs</span>(dfs, to, u);</span><br><span class="line">                <span class="keyword">if</span> (mp[u].<span class="built_in">size</span>() &lt; mp[to].<span class="built_in">size</span>())</span><br><span class="line">                    <span class="built_in">swap</span>(mp[u], mp[to]);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">auto</span> [col, sz] : mp[to])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (col != c[u])</span><br><span class="line">                        ans += mp[u][col] * sz;</span><br><span class="line">                    mp[u][col] += sz;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ans += mp[u][c[u]];</span><br><span class="line">        mp[u][c[u]] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>2.虚树dp</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) (a[x].sum)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> tag(x) (a[x].t)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">100</span>, M = <span class="number">25</span>;</span><br><span class="line"><span class="type">int</span> mi[<span class="number">20</span>][N];</span><br><span class="line"><span class="type">int</span> dfn[N], col[N];</span><br><span class="line">ll f[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; e[N], ne[N], c[N];</span><br><span class="line"><span class="type">int</span> n, cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mi[<span class="number">0</span>][dfn[u] = ++cnt] = fa;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">        <span class="keyword">if</span> (to != fa)</span><br><span class="line">            <span class="built_in">dfs</span>(to, u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123; <span class="keyword">return</span> dfn[x] &lt; dfn[y] ? x : y; &#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lca</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (u == v)</span><br><span class="line">        <span class="keyword">return</span> u;</span><br><span class="line">    <span class="keyword">if</span> ((u = dfn[u]) &gt; (v = dfn[v]))</span><br><span class="line">        <span class="built_in">swap</span>(u, v);</span><br><span class="line">    <span class="type">int</span> d = __lg(v - u++);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">get</span>(mi[d][u], mi[d][v - (<span class="number">1</span> &lt;&lt; d) + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; col[i];</span><br><span class="line">        c[col[i]].<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        e[u].<span class="built_in">push_back</span>(v), e[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= __lg(n); i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j + (<span class="number">1</span> &lt;&lt; i) - <span class="number">1</span> &lt;= n; j++)</span><br><span class="line">            mi[i][j] = <span class="built_in">get</span>(mi[i - <span class="number">1</span>][j], mi[i - <span class="number">1</span>][j + (<span class="number">1</span> &lt;&lt; i - <span class="number">1</span>)]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> build = [&amp;](<span class="type">int</span> u) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">sort</span>(c[u].<span class="built_in">begin</span>(), c[u].<span class="built_in">end</span>(), [&amp;](<span class="type">int</span> a, <span class="type">int</span> b)</span><br><span class="line">             &#123; <span class="keyword">return</span> dfn[a] &lt; dfn[b]; &#125;); <span class="comment">// 将关键点按照dfn排序</span></span><br><span class="line">        a.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i + <span class="number">1</span> &lt; c[u].<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            a.<span class="built_in">push_back</span>(c[u][i]);</span><br><span class="line">            a.<span class="built_in">push_back</span>(<span class="built_in">lca</span>(c[u][i], c[u][i + <span class="number">1</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">        a.<span class="built_in">push_back</span>(c[u].<span class="built_in">back</span>());</span><br><span class="line">        <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>(), [&amp;](<span class="type">int</span> a, <span class="type">int</span> b)</span><br><span class="line">             &#123; <span class="keyword">return</span> dfn[a] &lt; dfn[b]; &#125;);            <span class="comment">// 虚树上的所有点按dfn排序</span></span><br><span class="line">        a.<span class="built_in">erase</span>(<span class="built_in">unique</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>()), a.<span class="built_in">end</span>()); <span class="comment">// 去重</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i + <span class="number">1</span> &lt; a.<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ll lc = <span class="built_in">lca</span>(a[i], a[i + <span class="number">1</span>]);</span><br><span class="line">            ne[lc].<span class="built_in">push_back</span>(a[i + <span class="number">1</span>]); <span class="comment">//;连边构建虚树</span></span><br><span class="line">            ne[a[i + <span class="number">1</span>]].<span class="built_in">push_back</span>(lc);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> dp = [&amp;](<span class="keyword">auto</span> &amp;dp, <span class="type">int</span> u, <span class="type">int</span> fa, <span class="type">int</span> k) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        f[u] = (col[u] == k);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : ne[u])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (to == fa)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="built_in">dp</span>(dp, to, u, k);</span><br><span class="line">            <span class="keyword">if</span> (col[u] == k)</span><br><span class="line">                ans += f[to]; <span class="comment">// 根-儿子</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ans += f[u] * f[to];<span class="comment">//儿子-儿子</span></span><br><span class="line">                f[u] += f[to];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (col[u] == k)</span><br><span class="line">            f[u] = <span class="number">1</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (c[i].<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">build</span>(i);</span><br><span class="line">            <span class="built_in">dp</span>(dp, <span class="number">1</span>, <span class="number">0</span>, i);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> e : a)</span><br><span class="line">                f[e] = <span class="number">0</span>, ne[e].<span class="built_in">clear</span>();</span><br><span class="line">            a.<span class="built_in">clear</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        e[i].<span class="built_in">clear</span>(), c[i].<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>广州大学第十八届ACM大学生程序设计竞赛</title>
    <url>/2024/03/23/(%E5%B7%B2%E8%A1%A5%E5%AE%8C)%E5%B9%BF%E5%B7%9E%E5%A4%A7%E5%AD%A6%E7%AC%AC%E5%8D%81%E5%85%AB%E5%B1%8AACM%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AB%9E%E8%B5%9B/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>按列从左到右扫,按照2,3,1的顺序判断</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt;&gt; p = &#123;</span><br><span class="line">    &#123;&#123;<span class="number">0</span>, <span class="number">0</span>&#125;, &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, <span class="number">2</span>&#125;, &#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">1</span>, <span class="number">2</span>&#125;, &#123;<span class="number">2</span>, <span class="number">0</span>&#125;, &#123;<span class="number">2</span>, <span class="number">1</span>&#125;, &#123;<span class="number">2</span>, <span class="number">2</span>&#125;, &#123;<span class="number">3</span>, <span class="number">0</span>&#125;, &#123;<span class="number">4</span>, <span class="number">0</span>&#125;&#125;,</span><br><span class="line">    &#123;&#123;<span class="number">0</span>, <span class="number">0</span>&#125;, &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, <span class="number">2</span>&#125;, &#123;<span class="number">1</span>, <span class="number">2</span>&#125;, &#123;<span class="number">2</span>, <span class="number">1</span>&#125;, &#123;<span class="number">2</span>, <span class="number">2</span>&#125;, &#123;<span class="number">3</span>, <span class="number">2</span>&#125;, &#123;<span class="number">4</span>, <span class="number">2</span>&#125;&#125;,</span><br><span class="line">    &#123;&#123;<span class="number">0</span>, <span class="number">0</span>&#125;, &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, <span class="number">2</span>&#125;, &#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">1</span>, <span class="number">2</span>&#125;, &#123;<span class="number">2</span>, <span class="number">0</span>&#125;, &#123;<span class="number">2</span>, <span class="number">1</span>&#125;, &#123;<span class="number">2</span>, <span class="number">2</span>&#125;, &#123;<span class="number">3</span>, <span class="number">0</span>&#125;, &#123;<span class="number">3</span>, <span class="number">2</span>&#125;, &#123;<span class="number">4</span>, <span class="number">0</span>&#125;, &#123;<span class="number">4</span>, <span class="number">1</span>&#125;, &#123;<span class="number">4</span>, <span class="number">2</span>&#125;&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(m + <span class="number">1</span>, <span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(<span class="number">3</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    <span class="keyword">auto</span> clear = [&amp;](<span class="type">int</span> t, <span class="type">int</span> x, <span class="type">int</span> y) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> [dx, dy] : p[t])</span><br><span class="line">            a[x + dx][y + dy] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            <span class="keyword">if</span> (a[i][j] == <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[i + <span class="number">1</span>][j] != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans[<span class="number">1</span>]++;</span><br><span class="line">                    <span class="built_in">clear</span>(<span class="number">1</span>, i, j);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">int</span> ok = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">auto</span> [dx, dy] : p[<span class="number">2</span>])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> xx = i + dx, yy = j + dy;</span><br><span class="line">                    <span class="keyword">if</span> (a[xx][yy] != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">                        ok = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (ok)</span><br><span class="line">                    ans[<span class="number">2</span>]++, <span class="built_in">clear</span>(<span class="number">2</span>, i, j);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    ans[<span class="number">0</span>]++, <span class="built_in">clear</span>(<span class="number">0</span>, i, j);</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">        cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>题意就是找最小的x,满足$|(t-1+ax) %m|$最小</p>
<p>设$ans&#x3D;t-1+ax+ym$</p>
<p>则问题转换为求最小的ans</p>
<p>移项</p>
<p>$ans-t+1&#x3D;ax+ym$</p>
<p>根据裴蜀定理有:</p>
<p>$gcd(a,m)|(ans-t+1)$</p>
<p>即</p>
<p>$(ans-t+1)%gcd(a,m)&#x3D;0$</p>
<p>$ans%gcd(a,m)&#x3D;(t-1)%gcd(a,m)&#x3D;0$</p>
<p>$ans&#x3D;(t-1)%gcd(a,m)+k*gcd(a,m)$</p>
<p>k&#x3D;0时,ans取最小</p>
<p>$ans&#x3D;(t-1)%gcd(a,m)$</p>
<p>把上式代入$ans&#x3D;t-1+ax+ym$</p>
<p>$ax-ym&#x3D;(t-1)%gcd(a,m)-t+1$</p>
<p>接下来用exgcd求一下x的最小正整数解和最大非负数解即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">ll <span class="title">exgcd</span><span class="params">(ll a, ll b, ll &amp;x, ll &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    ll d = <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">    y -= (a / b) * x;</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll t, a, m, x, y;</span><br><span class="line">    cin &gt;&gt; t &gt;&gt; a &gt;&gt; m;</span><br><span class="line">    ll g = <span class="built_in">exgcd</span>(a, m, x, y);</span><br><span class="line">    t--;</span><br><span class="line">    t = ((t % g - t) % m + m) % m; <span class="comment">//(t-1)%gcd-t+1</span></span><br><span class="line">    x = x * t / g;                 <span class="comment">// 得到一组特解</span></span><br><span class="line">    <span class="comment">// 求最小的正整数解和最大的负解</span></span><br><span class="line">    x = (x % (m / g) + (m / g)) % (m / g);</span><br><span class="line">    cout &lt;&lt; <span class="built_in">min</span>(x, m / g - x) &lt;&lt; endl;</span><br><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>做法与题解做法有略微的不一样</p>
<p>首先还是注意到答案的上界</p>
<p>$sum\le x$</p>
<p>$mex&lt;&#x3D;\sqrt{2x}$</p>
<p>所以对于每个右端点,mex只会变化$\sqrt{2x}$次</p>
<p>枚举右端点$i$,同时计算出左端点$r$的上界,这个可以通过双指针$O(n)$解决</p>
<p>维护$i,r$所有$\le \sqrt{2x}$数最右边的位置</p>
<p>从小到大枚举mex,取端点的最大值,每次答案加上$r-p+1$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, x, mx;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">    mx = <span class="built_in">sqrt</span>(<span class="number">2</span> * x) + <span class="number">1</span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">s</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i], s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    vector&lt;vector&lt;ll&gt;&gt; <span class="built_in">pos</span>(mx + <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt;= mx)</span><br><span class="line">            pos[a[i]].<span class="built_in">push_back</span>(i);</span><br><span class="line">    ll ans = <span class="number">0</span>, r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i - <span class="number">1</span>] &lt;= mx &amp;&amp; i - <span class="number">1</span> &gt;= <span class="number">1</span>)</span><br><span class="line">            pos[a[i - <span class="number">1</span>]].<span class="built_in">pop_back</span>();</span><br><span class="line">        <span class="keyword">while</span> (r + <span class="number">1</span> &lt;= n &amp;&amp; s[r + <span class="number">1</span>] - s[i - <span class="number">1</span>] &lt;= x)</span><br><span class="line">            r++;</span><br><span class="line">        ll p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= mx; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (pos[j - <span class="number">1</span>].<span class="built_in">empty</span>())</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            p = <span class="built_in">max</span>(p, pos[j - <span class="number">1</span>].<span class="built_in">back</span>());</span><br><span class="line">            <span class="keyword">if</span> (p &lt;= r)</span><br><span class="line">                ans += r - p + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>这里写了一种非题解解法</p>
<p>对于每种颜色,它们的lca及其父亲都是不合法的,只需要求出所有不合法的lca,最后在dfs一遍即可</p>
<p>极度卡常,要快读+链式前向星</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) (a[x].sum)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> tag(x) (a[x].t)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line"><span class="type">int</span> n, x, idx, idx1;</span><br><span class="line"><span class="type">int</span> a[N], p[N], v[N], is[N], col[N];</span><br><span class="line"><span class="type">int</span> h[N], e[N], ne[N];</span><br><span class="line"><span class="type">int</span> h1[N], e1[<span class="number">2</span> * N], ne1[<span class="number">2</span> * N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">read</span><span class="params">()</span> <span class="comment">// 如果读ll全改掉ji</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="type">char</span> ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        f = (ch == <span class="string">&#x27;-&#x27;</span>) ? <span class="number">-1</span> : <span class="number">1</span>, ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>, ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> <span class="comment">// a的头结点插入b</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b, ne[idx] = h[a], h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add1</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> <span class="comment">// a的头结点插入b</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e1[idx1] = b, ne1[idx1] = h1[a], h1[a] = idx1++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (p[x] != x)</span><br><span class="line">        p[x] = <span class="built_in">find</span>(p[x]);</span><br><span class="line">    <span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (col[a[u]])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add1</span>(u, col[a[u]]);</span><br><span class="line">        <span class="built_in">add1</span>(col[a[u]], u);</span><br><span class="line">    &#125;</span><br><span class="line">    col[a[u]] = u;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h[u]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> to = e[i];</span><br><span class="line">        <span class="built_in">dfs</span>(to);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    v[u] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h[u]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> to = e[i];</span><br><span class="line">        <span class="keyword">if</span> (v[to])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">tarjan</span>(to);</span><br><span class="line">        p[to] = u;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h1[u]; i != <span class="number">-1</span>; i = ne1[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> to = e1[i];</span><br><span class="line">        <span class="keyword">if</span> (v[to] == <span class="number">2</span>)</span><br><span class="line">            is[<span class="built_in">find</span>(to)] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    v[u] = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h[u]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> to = e[i];</span><br><span class="line">        <span class="built_in">cal</span>(to);</span><br><span class="line">        is[u] &amp;= is[to];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i] = <span class="built_in">read</span>();</span><br><span class="line">        p[i] = i, is[i] = <span class="number">1</span>;</span><br><span class="line">        h[i] = h1[i] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in">add</span>(x, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">tarjan</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cal</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (is[i])</span><br><span class="line">            ans++;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(false);</span></span><br><span class="line">    <span class="comment">// cin.tie(0), cout.tie(0);</span></span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>

<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>二分答案</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">def</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">auto</span> chk = [&amp;](ll now) -&gt; <span class="type">bool</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            def[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (now &lt;= a[i] + def[i])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            now += a[i] / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (i + <span class="number">1</span> &lt;= n)</span><br><span class="line">                def[i + <span class="number">1</span>] += (a[i] + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    ll l = <span class="number">1</span>, r = <span class="number">1e14</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        ll mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">chk</span>(mid))</span><br><span class="line">            r = mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; l &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="H"><a href="#H" class="headerlink" title="H"></a>H</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    map&lt;<span class="type">char</span>, <span class="type">char</span>&gt; mp;</span><br><span class="line">    mp[<span class="string">&#x27;4&#x27;</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    mp[<span class="string">&#x27;6&#x27;</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">    mp[<span class="string">&#x27;3&#x27;</span>] = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">    mp[<span class="string">&#x27;9&#x27;</span>] = <span class="string">&#x27;g&#x27;</span>;</span><br><span class="line">    mp[<span class="string">&#x27;1&#x27;</span>] = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">    mp[<span class="string">&#x27;0&#x27;</span>] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">    mp[<span class="string">&#x27;5&#x27;</span>] = <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">    mp[<span class="string">&#x27;7&#x27;</span>] = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">    mp[<span class="string">&#x27;2&#x27;</span>] = <span class="string">&#x27;z&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    string s;</span><br><span class="line">    <span class="built_in">getline</span>(cin, s);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (mp.<span class="built_in">count</span>(i))</span><br><span class="line">            cout &lt;&lt; mp[i];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="I"><a href="#I" class="headerlink" title="I"></a>I</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>

<h1 id="J"><a href="#J" class="headerlink" title="J"></a>J</h1><p>贪心的从高到底位考虑每一位答案上能否为1</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;, dy[] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>, n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    <span class="keyword">auto</span> chk = [&amp;](<span class="type">int</span> x) -&gt; <span class="type">bool</span></span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">vis</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">        ll tar = ans | x;</span><br><span class="line">        queue&lt;pii&gt; q;</span><br><span class="line">        q.<span class="built_in">push</span>(&#123;<span class="number">1</span>, <span class="number">1</span>&#125;);</span><br><span class="line">        <span class="keyword">if</span> ((a[<span class="number">1</span>][<span class="number">1</span>] | tar) == a[<span class="number">1</span>][<span class="number">1</span>])</span><br><span class="line">            q.<span class="built_in">push</span>(&#123;<span class="number">1</span>, <span class="number">1</span>&#125;), vis[<span class="number">1</span>][<span class="number">1</span>] = a[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> xx = t.x + dx[i], yy = t.y + dy[i];</span><br><span class="line">                <span class="keyword">if</span> (xx &gt;= <span class="number">1</span> &amp;&amp; xx &lt;= n &amp;&amp; yy &gt;= <span class="number">1</span> &amp;&amp; yy &lt;= m &amp;&amp; ((vis[t.x][t.y] &amp; a[xx][yy]) | tar) == (vis[t.x][t.y] &amp; a[xx][yy]))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!vis[xx][yy])</span><br><span class="line">                    &#123;</span><br><span class="line">                        vis[xx][yy] = vis[t.x][t.y] | a[xx][yy];</span><br><span class="line">                        q.<span class="built_in">push</span>(&#123;xx, yy&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (vis[n][m] | tar) == vis[n][m];</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">29</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">chk</span>(<span class="number">1</span> &lt;&lt; i))</span><br><span class="line">            ans |= <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="K"><a href="#K" class="headerlink" title="K"></a>K</h1><p>模拟</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    map&lt;<span class="type">char</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">    <span class="type">int</span> n, p = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">char</span>&gt; <span class="title">s</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; s[i];</span><br><span class="line">        <span class="keyword">if</span> (!p)</span><br><span class="line">        &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            mp[s[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            p--;</span><br><span class="line">        <span class="keyword">if</span> (mp[<span class="string">&#x27;g&#x27;</span>] &amp;&amp; mp[<span class="string">&#x27;z&#x27;</span>] &amp;&amp; mp[<span class="string">&#x27;h&#x27;</span>] &amp;&amp; mp[<span class="string">&#x27;u&#x27;</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            p += mp[<span class="string">&#x27;g&#x27;</span>] + mp[<span class="string">&#x27;z&#x27;</span>] + mp[<span class="string">&#x27;h&#x27;</span>] + mp[<span class="string">&#x27;u&#x27;</span>];</span><br><span class="line">            mp[<span class="string">&#x27;g&#x27;</span>] = mp[<span class="string">&#x27;z&#x27;</span>] = mp[<span class="string">&#x27;h&#x27;</span>] = mp[<span class="string">&#x27;u&#x27;</span>] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="L"><a href="#L" class="headerlink" title="L"></a>L</h1><p>换根求出距离和,即$\sum_{i&#x3D;1}^{n}\sum_{j&#x3D;1}^{n}dist(i,j)$</p>
<p>然后注意到$u*v&gt;dist(u,v)$最多只有$n \ ln\  n$种,枚举判断即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, ans = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">dfn</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">sz</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">d</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">v</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">dis</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">f</span>(<span class="number">20</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">auto</span> get = [&amp;](<span class="type">int</span> u, <span class="type">int</span> v) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> dfn[u] &lt; dfn[v] ? u : v;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        e[u].<span class="built_in">push_back</span>(v), e[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> &amp;dfs, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        dis[u] = dis[fa] + <span class="number">1</span>;</span><br><span class="line">        f[<span class="number">0</span>][dfn[u] = ++cnt] = fa;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">                <span class="built_in">dfs</span>(dfs, to, u);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= __lg(n) + <span class="number">1</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j + (<span class="number">1</span> &lt;&lt; i) - <span class="number">1</span> &lt;= n; j++)</span><br><span class="line">            f[i][j] = <span class="built_in">get</span>(f[i - <span class="number">1</span>][j], f[i - <span class="number">1</span>][j + (<span class="number">1</span> &lt;&lt; i - <span class="number">1</span>)]);</span><br><span class="line">    <span class="keyword">auto</span> lca = [&amp;](<span class="type">int</span> u, <span class="type">int</span> v) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (u == v)</span><br><span class="line">            <span class="keyword">return</span> u;</span><br><span class="line">        <span class="keyword">if</span> ((u = dfn[u]) &gt; (v = dfn[v]))</span><br><span class="line">            <span class="built_in">swap</span>(u, v);</span><br><span class="line">        <span class="type">int</span> d = __lg(v - u++);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">get</span>(f[d][u], f[d][v - (<span class="number">1</span> &lt;&lt; d) + <span class="number">1</span>]);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> cal = [&amp;](<span class="keyword">auto</span> &amp;cal, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        sz[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cal</span>(cal, to, u);</span><br><span class="line">                d[u] += d[to] + sz[to];</span><br><span class="line">                sz[u] += sz[to];</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">cal</span>(cal, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">auto</span> cal2 = [&amp;](<span class="keyword">auto</span> &amp;cal2, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">            &#123;</span><br><span class="line">                v[to] = d[u] + v[u] - d[to] - sz[to] + n - sz[to];</span><br><span class="line">                <span class="built_in">cal2</span>(cal2, to, u);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">cal2</span>(cal2, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">auto</span> dist = [&amp;](<span class="type">int</span> u, <span class="type">int</span> v) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> dis[u] + dis[v] - <span class="number">2</span> * dis[<span class="built_in">lca</span>(u, v)];</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        ans += d[i] + v[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n / i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">dist</span>(i, j) &gt; i * j)</span><br><span class="line">                ans -= <span class="built_in">dist</span>(i, j), ans += i * j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="M"><a href="#M" class="headerlink" title="M"></a>M</h1><p>按x,y排序,然后去相邻点即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">P</span></span><br><span class="line">&#123;</span><br><span class="line">    ll x, y;</span><br><span class="line">    <span class="function">ll <span class="title">cross</span><span class="params">(P T)</span> </span>&#123; <span class="keyword">return</span> x * T.y - y * T.x; &#125;</span><br><span class="line">    <span class="function">ll <span class="title">quad</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; <span class="number">0</span> &amp;&amp; y &gt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (x &lt;= <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span> &amp;&amp; y &lt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">if</span> (x &gt;= <span class="number">0</span> &amp;&amp; y &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    ll qd, t;</span><br><span class="line">    P v;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> node &amp;T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (v.x != T.v.x)</span><br><span class="line">            <span class="keyword">return</span> v.x &lt; T.v.x;</span><br><span class="line">        <span class="keyword">return</span> v.y &lt; T.v.y;</span><br><span class="line">        <span class="comment">// return (qd != T.qd ? qd &lt; T.qd : v.cross(T.v) &gt; 0);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;node&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i].v.x &gt;&gt; a[i].v.y;</span><br><span class="line">        a[i].t = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">    cout &lt;&lt; n / <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i + <span class="number">1</span> &lt; n; i += <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; a[i].t &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; a[i + <span class="number">1</span>].t &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>nowcoder</category>
      </categories>
  </entry>
  <entry>
    <title>2024杭电ACM-个人PK赛（1）</title>
    <url>/2024/03/09/2024%E6%9D%AD%E7%94%B5ACM-%E4%B8%AA%E4%BA%BAPK%E8%B5%9B%EF%BC%881%EF%BC%89/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>强联通分量:极大强联通子图</p>
<p>发现题目给出的是一个内向基环树森林</p>
<p>考虑scc的可能情况:</p>
<p>1.一个环</p>
<p>2.非环上的点</p>
<p>如果环上有一个点鸽了,那么整个环都不会计算进答案,所以要减去环上点数sz</p>
<p>答案就是点数+环数-环上点数</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">p</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">d</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">q</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">vis</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        d[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; p[i];</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        ans = (ans + (<span class="number">1</span> - p[i] + mod) % mod) % mod;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> l = <span class="number">0</span>, r = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (!d[i])</span><br><span class="line">            q[++r] = i;</span><br><span class="line">    <span class="keyword">while</span> (r &gt;= l)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t = q[l++];</span><br><span class="line">        vis[t] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (--d[a[t]] == <span class="number">0</span>)</span><br><span class="line">            q[++r] = a[t];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (!vis[i])</span><br><span class="line">        &#123;</span><br><span class="line">            vector&lt;<span class="type">int</span>&gt; loop;</span><br><span class="line">            <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> &amp;dfs, <span class="type">int</span> u) -&gt; <span class="type">void</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (vis[u])</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                vis[u] = <span class="number">1</span>;</span><br><span class="line">                loop.<span class="built_in">push_back</span>(u);</span><br><span class="line">                <span class="built_in">dfs</span>(dfs, a[u]);</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="built_in">dfs</span>(dfs, i);</span><br><span class="line">            ll res = <span class="number">1</span>, sz = <span class="number">0</span>; <span class="comment">// res 期望环数</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;j : loop)</span><br><span class="line">                <span class="keyword">if</span> (d[j])</span><br><span class="line">                    res = res * (<span class="number">1</span> - p[j] + mod) % mod, sz++;</span><br><span class="line">            ans = (ans + res) % mod;</span><br><span class="line">            ans = (ans - sz * res % mod + mod) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>采用类似子序列dp的思路,考虑当前$a[i]$选与不选对答案的贡献</p>
<p>同时要把$a[i]$的贡献拆成两部分,整除部分,余数部分</p>
<p>选:</p>
<p>整除部分的贡献: $pre*a[i]&#x2F;k,pre$是前面的方案数$2^{i-1}-1$</p>
<p>余数部分的贡献:$\sum_{j&#x3D;0}^{k-1} (k \le j+mod)cnt[j],cnt[j]$表示子序列和除k余数是j的数量</p>
<p>不选:</p>
<p>整除部分的贡献:$a[i]&#x2F;k$</p>
<p>余数部分的贡献:0</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, k, p, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">auto</span> qmi = [&amp;](ll a, ll b) -&gt; ll</span><br><span class="line">    &#123;</span><br><span class="line">        ll res = <span class="number">1</span> % p;</span><br><span class="line">        <span class="keyword">while</span> (b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">                res = res * a % p;</span><br><span class="line">            a = a * a % p;</span><br><span class="line">            b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k &gt;&gt; p;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">cnt</span><span class="params">(k + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">num</span><span class="params">(k + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        ans = (ans * <span class="number">2</span>) % p;</span><br><span class="line">        ll d = (x / k) % p;</span><br><span class="line">        ll m = (x - d * k) % p;</span><br><span class="line">        ll pre = (<span class="built_in">qmi</span>(<span class="number">2</span>, i - <span class="number">1</span>) - <span class="number">1</span> + p) % p;</span><br><span class="line">        ans = (ans + (pre * d) % p) % p; <span class="comment">// 选 整</span></span><br><span class="line">        ans = (ans + d) % p;             <span class="comment">// 不选 整</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; k; j++)      <span class="comment">// 选 余</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ((j + m) &gt;= k)</span><br><span class="line">                ans = (ans + cnt[j]) % p;</span><br><span class="line">            num[(j + m) % k] = (num[(j + m) % k] + cnt[j]) % p;</span><br><span class="line">        &#125;</span><br><span class="line">        num[m] = (num[m] + <span class="number">1</span>) % p;</span><br><span class="line">        cnt = num;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>考虑当前已经计算了前i位的答案,记作$ans_i$,要计算第i+1位的答案$ans_{i+1}$</p>
<p>如果N的第i+1是1:</p>
<p>$ans_{i+1}&#x3D;3\times ans_i$</p>
<p>因为此时$x_{i+1},y_{i+1}$可以取$(0,1),(1,0),(0,0)$三种情况</p>
<p>如果N的第i+1是0:</p>
<p>此时$x_{i+1},y_{i+1}$只能取$(0,0)$</p>
<p>因为要保证$x,y\le N$,所以有些方案是取不到的</p>
<p>$x_{0-i}$在什么情况下,会产生不合法情况?</p>
<p>肯定是$x_{0-i}&#x3D;N_{0-i}$,否则前面某一位不相等,后面就可以任意取了,答案就是$2^{前i位中0的数量}\times 2$再乘2是因为x,y对称</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    ll ans = <span class="number">1</span>, qmi = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : s)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = ans * <span class="number">3</span> % mod;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            qmi = (qmi &lt;&lt; <span class="number">1</span>) % mod;</span><br><span class="line">            ans = (ans - qmi + mod) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hduoj</category>
      </categories>
  </entry>
  <entry>
    <title>2023 (ICPC) Jiangxi Provincial Contest</title>
    <url>/2024/03/29/2023%20(ICPC)%20Jiangxi%20Provincial%20Contest/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) (a[x].sum)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> tag(x) (a[x].t)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, s, v;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; s &gt;&gt; v;</span><br><span class="line">    cout &lt;&lt; (s * v &gt;= n ? <span class="number">1</span> : <span class="number">0</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>发现求$\le$的不好求,考虑求$&gt;$的数量,然后用总数减去即可</p>
<p>要满足$b[i]&gt;b[i+1]$需要满足$b[i]+a[k]\bmod m&gt;&#x3D;m$</p>
<p>也就是$\left \lfloor \frac{b[i]}{m} \right \rfloor &lt;\left \lfloor \frac{b[i+1]}{m} \right \rfloor $</p>
<p>$\left \lfloor \frac{b[n]}{m} \right \rfloor$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll k, n, m, x, res;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(k + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; x;</span><br><span class="line">    ll sum = x % m;</span><br><span class="line">    res = n % k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i] %= m;</span><br><span class="line">        res += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sum += n / k * res;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n % k; i++)</span><br><span class="line">        sum += a[i];</span><br><span class="line">    cout &lt;&lt; n - sum / m &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(5);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>sg打表,发现以下规律:</p>
<p>奇数堆: 1010</p>
<p>偶数堆:</p>
<p>2 :110</p>
<p>4:10110</p>
<p>6:1010110</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, p, ans = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; p;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span>, <span class="title">sg</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">if</span> (p % <span class="number">2</span>)</span><br><span class="line">            sg[i] = a[i] % <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            a[i] %= (p + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (a[i] == <span class="number">0</span>)</span><br><span class="line">                sg[i] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == p)</span><br><span class="line">                sg[i] = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sg[i] = a[i] % <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        sg[<span class="number">1</span>] ^= sg[i];</span><br><span class="line">    cout &lt;&lt; (sg[<span class="number">1</span>] ? <span class="string">&quot;GOOD&quot;</span> : <span class="string">&quot;BAD&quot;</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>类似的,发现正着求不好求,考虑求总方案-不存在连续k次删除操作的方案数</p>
<p>总方案数:合法的括号序列数,也就是卡特兰数</p>
<p>不存在连续k次删除操作的方案数,dp</p>
<p>设$f[i][j]$表示第i次操作,s里有k个数,且不存在连续删除k次的方案数</p>
<p>转移有两种情况:</p>
<p>1.直接从i-1转移</p>
<p>2.恰好删除k次转移过来,也就是,先入栈一次,然后出栈k次</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">PC</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;ll&gt;fac, invfac;</span><br><span class="line">    <span class="function">ll <span class="title">qmi</span><span class="params">(ll a, ll b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ll res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">                res = res * a % mod;</span><br><span class="line">            b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">            a = a * a % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">PC</span>(<span class="type">int</span> n): <span class="built_in">n</span>(n), <span class="built_in">invfac</span>(n + <span class="number">10</span>), <span class="built_in">fac</span>(n + <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            fac[i] = fac[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">        invfac[n] = <span class="built_in">qmi</span>(fac[n], mod - <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">            invfac[i] = invfac[i + <span class="number">1</span>] * (i + <span class="number">1</span>) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">C</span><span class="params">(<span class="type">int</span>, <span class="type">int</span> m)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fac[n] * invfac[n - m] % mod * invfac[m] % mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="function">PC <span class="title">pc</span><span class="params">(<span class="number">2</span> * n)</span></span>;</span><br><span class="line"></span><br><span class="line">    ll ans = (pc.<span class="built_in">C</span>(<span class="number">2</span> * n, n) - pc.<span class="built_in">C</span>(<span class="number">2</span> * n, n - <span class="number">1</span>) + mod) % mod;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; ans &lt;&lt; endl;</span></span><br><span class="line">    vector&lt;vector&lt;ll&gt;&gt;<span class="built_in">f</span>(<span class="number">2</span> * n + <span class="number">10</span>, std::<span class="built_in">vector</span>&lt;ll&gt; (n + <span class="number">10</span>, <span class="number">0</span>)); <span class="comment">//第i次操作,还有j个在栈里</span></span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//从前一次操作转移过来</span></span><br><span class="line">            f[i][j] = f[i - <span class="number">1</span>][j + <span class="number">1</span>] ;</span><br><span class="line">            <span class="keyword">if</span> (j)</span><br><span class="line">                f[i][j] = (f[i][j] + f[i - <span class="number">1</span>][j - <span class="number">1</span>]) % mod;</span><br><span class="line">            <span class="comment">//减去恰好删去k个的情况,也就是,先入栈一次,在连删k个,总共k+1次操作</span></span><br><span class="line">            <span class="keyword">if</span> ( i &gt;= k + <span class="number">1</span> &amp;&amp; j + k - <span class="number">1</span>  &lt;= n )</span><br><span class="line">                f[i][j] = ( f[i][j] - f[i - (k + <span class="number">1</span>)][j + k - <span class="number">1</span>] + mod) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">    cout &lt;&lt; (ans - f[<span class="number">2</span> * n][<span class="number">0</span>] + mod) % mod &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(5);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>

<h1 id="H"><a href="#H" class="headerlink" title="H"></a>H</h1><p>注意到前缀max相等的一定是在同一个中的</p>
<p>这样就把n个物品变成了一个多重背包,要求是否存在正好取$\frac{n}{2}$</p>
<p>变成多重背包后,本质不同的最多只有$\sqrt{n}$种了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, t = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">mx</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        mx[i] = <span class="built_in">max</span>(mx[i - <span class="number">1</span>], a[i]);</span><br><span class="line">    vector&lt;pii&gt;b;</span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">int</span>&gt;mp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (mx[i] == mx[i - <span class="number">1</span>])</span><br><span class="line">            t++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            mp[t]++, t = <span class="number">1</span>;</span><br><span class="line">    mp[t]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> [x, y] : mp)</span><br><span class="line">        b.<span class="built_in">push_back</span>(&#123;x, y&#125;);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">f</span>(n + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> [v, num] : b)<span class="comment">//sqrt n</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> k = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (k = <span class="number">1</span>; k &lt;= num; k *= <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            num -= k;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = n / <span class="number">2</span>; j &gt;= k * v; j--)</span><br><span class="line">                f[j] = <span class="built_in">max</span>(f[j], f[j - k * v] + k * v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (num)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = n / <span class="number">2</span>; j &gt;= num * v; j--)</span><br><span class="line">                f[j] = <span class="built_in">max</span>(f[j], f[j - num * v] + num * v);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; (f[n / <span class="number">2</span>] == n / <span class="number">2</span> ? <span class="string">&quot;Yes&quot;</span> : <span class="string">&quot;No&quot;</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(5);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="K"><a href="#K" class="headerlink" title="K"></a>K</h1><p>写一下式子发现操作一实际上只是把左右两边的差交换了,并且并不会改变原数组非递增的性质</p>
<p>操作二实际上是删除前x-1个大的差</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, q, sum = <span class="number">0</span>, p;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, s</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    s.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        s.<span class="built_in">push_back</span>(a[i - <span class="number">1</span>] - a[i]);</span><br><span class="line">    <span class="built_in">sort</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">        s[i] += s[i - <span class="number">1</span>];</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="type">int</span> opt, x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; opt &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span> (!opt)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            x--;</span><br><span class="line">            ll ans = s[n - <span class="number">1</span> - x];</span><br><span class="line"></span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="I"><a href="#I" class="headerlink" title="I"></a>I</h1><p>对路径上所有边异或实际上只会影响起点和终点,直接操作即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) (a[x].sum)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> tag(x) (a[x].t)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">BIT</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">    <span class="built_in">BIT</span>(<span class="type">int</span> n) : <span class="built_in">n</span>(n), <span class="built_in">a</span>(n + <span class="number">10</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lb</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123; <span class="keyword">return</span> x &amp; -x; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (; x &lt;= n; x += <span class="built_in">lb</span>(x))</span><br><span class="line">            a[x] ^= y;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; x; x ^= <span class="built_in">lb</span>(x))</span><br><span class="line">            res ^= a[x];</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">add</span>(l, y);</span><br><span class="line">        <span class="built_in">add</span>(r + <span class="number">1</span>, y);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line">    vector&lt;vector&lt;pii&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u, v, w;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">        e[u].<span class="built_in">push_back</span>(&#123;v, w&#125;), e[v].<span class="built_in">push_back</span>(&#123;u, w&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> &amp;dfs, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> [to, w] : e[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">dfs</span>(dfs, to, u);</span><br><span class="line">                ans[u] ^= w, ans[to] ^= w;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> opt, x, y, z;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; opt;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line">            ans[x] ^= z, ans[y] ^= z;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            cout &lt;&lt; ans[x] &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="J"><a href="#J" class="headerlink" title="J"></a>J</h1><p>在值附近暴力即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) (a[x].sum)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> tag(x) (a[x].t)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, q, opt, x, y;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">b</span><span class="params">(n + <span class="number">1</span>, <span class="number">1e18</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; opt;</span><br><span class="line">        <span class="keyword">if</span> (!opt)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">            b[x] = <span class="built_in">min</span>(b[x], y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            ll ans = <span class="number">1e18</span>;</span><br><span class="line">            <span class="keyword">for</span> (ll i = <span class="built_in">max</span>(<span class="number">1ll</span>, x - <span class="number">100</span>); i &lt;= <span class="built_in">min</span>(n, x + <span class="number">100</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (b[i] == <span class="number">1e18</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                ans = <span class="built_in">min</span>((i - x) * (i - x) + b[i], ans);</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="L"><a href="#L" class="headerlink" title="L"></a>L</h1><p>输出n-1</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) (a[x].sum)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> tag(x) (a[x].t)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; n - <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>XCPC</category>
      </categories>
  </entry>
  <entry>
    <title>2024杭电ACM个人PK赛（2）</title>
    <url>/2024/03/16/2024%E6%9D%AD%E7%94%B5ACM%E4%B8%AA%E4%BA%BAPK%E8%B5%9B%EF%BC%882%EF%BC%89/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>枚举$r-l$,根据k是否为0,分类计数</p>
<p>k不为0:</p>
<p>$num&#x3D;mx-mi&#x3D;r-l+k$</p>
<p>答案就是在$mx-mi$之间选$r-l-1$个数$\times r-l+1$的全排列$\times$这种方案的位置$\times$mi的种类$\times$其他位置的全排列</p>
<p>k为0:</p>
<p>一定是$mi,mi+1,mi+2,…,mx$</p>
<p>类似上面</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> GCC optimize(2)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> stop cout &lt;&lt; <span class="string">&quot;?&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e7</span> + <span class="number">10</span>, M = <span class="number">7e5</span>;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> pi = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line">ll fac[N], invfac[N];</span><br><span class="line"><span class="function">ll <span class="title">qmi</span><span class="params">(ll a, ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">            res = res * a % mod;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        a = a * a % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">1e7</span>;</span><br><span class="line">    fac[<span class="number">0</span>] = <span class="number">1</span>; <span class="comment">// fac[i]表示i的阶乘，invfac[i]表示i的阶乘的逆元</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        fac[i] = fac[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">    invfac[n] = <span class="built_in">qmi</span>(fac[n], mod - <span class="number">2</span>); <span class="comment">// 快速幂</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        invfac[i] = invfac[i + <span class="number">1</span>] * (i + <span class="number">1</span>) % mod;</span><br><span class="line">    <span class="comment">// C(n,m)=fac[n] * invfac[m] % mod * invfac[n - m] % mod;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">C</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; m || m &lt; <span class="number">0</span>) <span class="comment">// 注意判断是否合法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> fac[n] * invfac[m] % mod * invfac[n - m] % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ll res = (n - i + <span class="number">1</span>) * (n - i + <span class="number">1</span>) % mod * fac[n - i] % mod * fac[i] % mod;</span><br><span class="line">            ans = (ans + res) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">0</span>; l &lt; n; l++) <span class="comment">// r-l</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> num = l + k;</span><br><span class="line">        <span class="comment">// mx!=mi</span></span><br><span class="line">        <span class="keyword">if</span> (num &lt; n)</span><br><span class="line">        &#123;</span><br><span class="line">            ans += (n - num) * <span class="built_in">C</span>(num - <span class="number">1</span>, l - <span class="number">1</span>) % mod * fac[l + <span class="number">1</span>] % mod * fac[n - (l + <span class="number">1</span>)] % mod * (n - l) % mod;</span><br><span class="line">            ans %= mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>考虑lcm的性质:</p>
<p>如果n的某个质因数(p)的数量(cnt)&gt;1,那么至少要有一个数含有$p^{cnt}$,方案数为${(cnt+1)}^m-cnt^m$</p>
<p>如果n的某个质因数(p)的数量(cnt)&#x3D;1,那么至少要有一个数含有$p^{cnt}$,方案数为$2^m-1$</p>
<p>不同质因子之间互不影响,所以最后相乘即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">100</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; pr;</span><br><span class="line">ll fac[N], invfac[N];</span><br><span class="line"><span class="function">ll <span class="title">qmi</span><span class="params">(ll a, ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">            res = res * a % mod;</span><br><span class="line">        a = a * a % mod;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    ll n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    ll mul = (<span class="built_in">qmi</span>(<span class="number">2</span>, m) - <span class="number">1</span> + mod) % mod;</span><br><span class="line">    ll ans = <span class="number">1</span>, rec = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;p : pr)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (p &gt; n)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (n % p == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (n % p == <span class="number">0</span>)</span><br><span class="line">                n /= p, cnt++;</span><br><span class="line">            <span class="keyword">if</span> (cnt == <span class="number">1</span>)</span><br><span class="line">                ans = ans * mul % mod;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                ll t = (<span class="built_in">qmi</span>(cnt + <span class="number">1</span>, m) - <span class="built_in">qmi</span>(cnt, m) + mod) % mod;</span><br><span class="line">                ans = ans * t % mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">1</span>)</span><br><span class="line">        ans = ans * mul % mod;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> getpr = [&amp;](<span class="type">int</span> n)</span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;<span class="type">bool</span>&gt; <span class="built_in">not_pr</span>(n + <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!not_pr[i])</span><br><span class="line">                pr.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> p : pr)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i * p &gt; n)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                not_pr[i * p] = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (i % p == <span class="number">0</span>) <span class="comment">// 说明i*p已经被一个更小的i判断过了</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">getpr</span>(<span class="number">32000</span>);</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(10);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>hduoj</category>
      </categories>
  </entry>
  <entry>
    <title>2024牛客寒假算法基础集训营6</title>
    <url>/2024/03/01/2024%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A5%206/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; pr;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">not_pr</span><span class="params">(N)</span></span>;</span><br><span class="line">    <span class="keyword">auto</span> getpr = [&amp;](<span class="type">int</span> n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!not_pr[i])</span><br><span class="line">                pr.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> p : pr)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i * p &gt; n)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                not_pr[i * p] = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (i % p == <span class="number">0</span>) <span class="comment">// 说明i*p已经被一个更小的i判断过了</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">getpr</span>(<span class="number">100</span>);</span><br><span class="line">    ll l, r;</span><br><span class="line">    cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; pr.<span class="built_in">size</span>(); i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; pr.<span class="built_in">size</span>(); j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = j + <span class="number">1</span>; k &lt; pr.<span class="built_in">size</span>(); k++)</span><br><span class="line">            &#123;</span><br><span class="line">                ll res = pr[i] * pr[j] * pr[k];</span><br><span class="line">                <span class="keyword">if</span> (res &gt;= l &amp;&amp; res &lt;= r)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>对b数组的每个数找最接近的a</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n, <span class="number">0</span>)</span>, <span class="title">b</span><span class="params">(n, <span class="number">0</span>)</span>, <span class="title">c</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">    c = a;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">int</span> p1 = <span class="number">0</span>, p2 = <span class="number">0</span>, mi = <span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> pos = <span class="built_in">lower_bound</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>(), b[i]) - a.<span class="built_in">begin</span>();</span><br><span class="line">        <span class="keyword">if</span> (pos &lt; n)</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">abs</span>(b[i] - a[pos]) &lt; mi)</span><br><span class="line">                mi = <span class="built_in">abs</span>(b[i] - a[pos]), p1 = i, p2 = a[pos];</span><br><span class="line">        <span class="keyword">if</span> (pos - <span class="number">1</span> &gt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">abs</span>(b[i] - a[pos - <span class="number">1</span>]) &lt; mi)</span><br><span class="line">                mi = <span class="built_in">abs</span>(b[i] - a[pos - <span class="number">1</span>]), p1 = i, p2 = a[pos - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">if</span> (c[i] == p2)</span><br><span class="line">        &#123;</span><br><span class="line">            p2 = i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">swap</span>(c[p1], c[p2]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : c)</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>类似二进制,从大到小组合即可</p>
<p>证明类似二进制背包  <del>显然</del></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">100</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line">ll f[<span class="number">50</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">45</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (n &gt;= f[i] &amp;&amp; ans.<span class="built_in">size</span>() &lt; <span class="number">3</span>)</span><br><span class="line">            n -= f[i], ans.<span class="built_in">push_back</span>(f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> i : ans)</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    f[<span class="number">1</span>] = <span class="number">1</span>, f[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">45</span>; i++)</span><br><span class="line">        f[i] = f[i - <span class="number">1</span>] + f[i - <span class="number">2</span>];</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(5);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">     cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>两种情况,自己让二追三,对面让二追三</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    db p;</span><br><span class="line">    cin &gt;&gt; p;</span><br><span class="line">    db res = (<span class="number">1</span> - p) * (<span class="number">1</span> - p) * p * p * p;</span><br><span class="line">    res += p * p * (<span class="number">1</span> - p) * (<span class="number">1</span> - p) * (<span class="number">1</span> - p);</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>模拟</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1, s2;</span><br><span class="line">    cin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : s1)</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= <span class="string">&#x27;9&#x27;</span> &amp;&amp; i &gt;= <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">            x = x * <span class="number">10</span> + i - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">   </span><br><span class="line">    x=x/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : s2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="string">&#x27;R&#x27;</span>)</span><br><span class="line">            k++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            y++;</span><br><span class="line">        <span class="keyword">if</span> (k == x)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;kou!&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; k + y &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (y == x)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;yukari!&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; k + y &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;to be continued.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; s2.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>有相同质因子的数一定是要放在一起,感觉难点在于怎样实现</p>
<p>预处理$10^3$以内的所有质数(大于$\sqrt n$的质因数只有一个)</p>
<p>对每个数分解质因数,然后bfs每个质因数能拓展到哪些数</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">100</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; pr;</span><br><span class="line"><span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">not_pr</span><span class="params">(N, <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getpr</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!not_pr[i])</span><br><span class="line">            pr.<span class="built_in">push_back</span>(i);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> p : pr)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i * p &gt; n)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            not_pr[i * p] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % p == <span class="number">0</span>) <span class="comment">// 说明i*p已经被一个更小的i判断过了</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> cal = [&amp;](<span class="type">int</span> x) -&gt; vector&lt;<span class="type">int</span>&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> p : pr)</span><br><span class="line">            <span class="keyword">if</span> (x % p == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                res.<span class="built_in">push_back</span>(p);</span><br><span class="line">                <span class="keyword">while</span> (x % p == <span class="number">0</span>)</span><br><span class="line">                    x /= p;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; <span class="number">1</span>)</span><br><span class="line">            res.<span class="built_in">push_back</span>(x);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">int</span> n, t;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;ll&gt; ans1, ans2;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; fac;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">bel</span><span class="params">(n, <span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        a.<span class="built_in">push_back</span>(x);</span><br><span class="line">        fac.<span class="built_in">push_back</span>(<span class="built_in">cal</span>(x));</span><br><span class="line">    &#125;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; st;</span><br><span class="line">    bel[<span class="number">0</span>] = <span class="number">1</span>, t = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> x : fac[<span class="number">0</span>])</span><br><span class="line">        st.<span class="built_in">insert</span>(x);</span><br><span class="line">    <span class="keyword">while</span> (t)</span><br><span class="line">    &#123;</span><br><span class="line">        t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">if</span> (!bel[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">auto</span> x : fac[i])</span><br><span class="line">                    <span class="keyword">if</span> (st.<span class="built_in">count</span>(x))</span><br><span class="line">                    &#123;</span><br><span class="line">                        bel[i] = <span class="number">1</span>, t = <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">auto</span> e : fac[i])</span><br><span class="line">                            st.<span class="built_in">insert</span>(e);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">if</span> (bel[i])</span><br><span class="line">            ans1.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans2.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">    <span class="keyword">if</span> (ans1.<span class="built_in">empty</span>() || ans2.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-1 -1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans1.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ans2.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : ans1)</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : ans2)</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">getpr</span>(<span class="number">1e3</span>);</span><br><span class="line">    cout &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">10</span>);</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>构造类似2,1,2,1,2,1,2</p>
<p>最少需要2k+1个空,数组和至少需要n+k+1(2,1,2,1,1,1)</p>
<p>如果k为0要特判,否则如果s&#x3D;n,会有n+0+1&gt;s,但实际上只需要n(1,1,1,1)</p>
<p>接下来考虑怎样构造</p>
<p>先构造k个三元组,奇数位取尽可能大,偶数位取1</p>
<p>如果2k+1&lt;n,直接全部放到后面</p>
<p>如果2k+1&#x3D;n,均匀的放在偶数位</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, s, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; s &gt;&gt; k;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">2</span> * k + <span class="number">1</span> &gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (k &amp;&amp; n + k + <span class="number">1</span> &gt; s)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="type">int</span> add = s - (n - (k + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k + <span class="number">1</span>; i++)</span><br><span class="line">        ans[<span class="number">2</span> * i - <span class="number">1</span>] = add / (k + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; i++)</span><br><span class="line">        ans[<span class="number">2</span> * i] = <span class="number">1</span>;</span><br><span class="line">    s -= ((add / (k + <span class="number">1</span>)) * (k + <span class="number">1</span>)) + k;</span><br><span class="line">    <span class="keyword">if</span> (s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &gt; <span class="number">2</span> * k + <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> num = n - (<span class="number">2</span> * k + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span> * k + <span class="number">2</span>, mo = s % num; i &lt;= n; i++, mo--)</span><br><span class="line">                ans[i] = s / num + (mo &gt; <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>, mo = s % k; i &lt;= k; i++, mo--)</span><br><span class="line">            &#123;</span><br><span class="line">                ans[<span class="number">2</span> * i] += s / k + (mo &gt; <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">if</span> (ans[<span class="number">2</span> * i] &gt;= ans[<span class="number">2</span> * i - <span class="number">1</span>])</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="H"><a href="#H" class="headerlink" title="H"></a>H</h1><p>首先要会求直线与圆的交点个数</p>
<p>设直线的与圆的交点数量为x</p>
<p>那么这条直线对答案的贡献是$x*\frac{n-2}{C(n,3)}$</p>
<p>但是有种特别情况,点恰好在圆上,这样他会多贡献$C(n,m)$,需要减去</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">P</span></span><br><span class="line">&#123;</span><br><span class="line">    ll x, y;</span><br><span class="line">    <span class="built_in">P</span>() &#123;&#125;</span><br><span class="line">    <span class="built_in">P</span>(ll _x, ll _y) : <span class="built_in">x</span>(_x), <span class="built_in">y</span>(_y) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">C</span></span><br><span class="line">&#123;</span><br><span class="line">    ll r, x, y;</span><br><span class="line">    <span class="built_in">C</span>() &#123;&#125;</span><br><span class="line">    <span class="built_in">C</span>(ll r, ll x, ll y) : <span class="built_in">r</span>(r), <span class="built_in">x</span>(x), <span class="built_in">y</span>(y) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cl</span><span class="params">(P p1,P p2,C c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res1=(p1.x-c.x)*(p1.x-c.x)+(p1.y-c.y)*(p1.y-c.y);</span><br><span class="line">    ll res2=(p2.x-c.x)*(p2.x-c.x)+(p2.y-c.y)*(p2.y-c.y);</span><br><span class="line">    <span class="type">bool</span> flag1=res1&lt;c.r*c.r;</span><br><span class="line">    <span class="type">bool</span> flag2=res2&lt;c.r*c.r;</span><br><span class="line">    <span class="keyword">if</span>(flag1&amp;&amp;flag2)    <span class="comment">//情况一、两点都在圆内 :一定不相交 </span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(flag1||flag2) <span class="comment">//情况二、一个点在圆内，一个点在圆外：一定相交 </span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="comment">//情况三、两个点都在圆外 </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">__int128_t</span> A,B,C,dist1,dist2,angle1,angle2;</span><br><span class="line">        <span class="comment">//将直线p1p2化为一般式：Ax+By+C=0的形式。先化为两点式，然后由两点式得出一般式 </span></span><br><span class="line">        A=p1.y-p2.y;</span><br><span class="line">        B=p2.x-p1.x;</span><br><span class="line">        C=p1.x*p2.y-p2.x*p1.y;</span><br><span class="line">        <span class="comment">//使用距离公式判断圆心到直线ax+by+c=0的距离是否大于半径 </span></span><br><span class="line">        dist1=A*c.x+B*c.y+C;</span><br><span class="line">        dist1*=dist1;</span><br><span class="line">        dist2=(A*A+B*B)*c.r*c.r;</span><br><span class="line">        <span class="keyword">if</span>(dist1&gt;dist2)<span class="comment">//圆心到直线p1p2的距离大于半径，不相交 </span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//角cp1p2和cp2p1余弦正负性，余弦定理一通化简</span></span><br><span class="line">        angle1=(c.x-p1.x)*(p2.x-p1.x)+(c.y-p1.y)*(p2.y-p1.y);</span><br><span class="line">        angle2=(c.x-p2.x)*(p1.x-p2.x)+(c.y-p2.y)*(p1.y-p2.y);</span><br><span class="line">        <span class="keyword">if</span>(angle1&gt;<span class="number">0</span>&amp;&amp;angle2&gt;<span class="number">0</span>)<span class="comment">//余弦为正，则是锐角，一定相交 </span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dist1==dist2) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(res1==c.r*c.r||res2==c.r*c.r) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    C c;</span><br><span class="line">    cin &gt;&gt; c.x &gt;&gt; c.y &gt;&gt; c.r;</span><br><span class="line"></span><br><span class="line">    ll n, cnt = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;P&gt; <span class="title">p</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[x, y] : p)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        ll dx=c.x-x,dy=c.y-y;</span><br><span class="line">        <span class="keyword">if</span> (dx * dx + dy * dy == c.r * c.r)</span><br><span class="line">            cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    db ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i+<span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">                ans += <span class="built_in">cl</span>(p[i], p[j], c);</span><br><span class="line">    ans = ans * <span class="number">6.</span> / (n * (n - <span class="number">1</span>));</span><br><span class="line">    ans -= cnt * <span class="number">3.</span> / n;<span class="comment">//num*C(n,2)*((n-2)/C(n,3))</span></span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="I"><a href="#I" class="headerlink" title="I"></a>I</h1><p>答案只有几种情况</p>
<p>最大字段和mx,最小字段和mi</p>
<p>mx(+)*mx(+)</p>
<p>mi(-)*mi(-)</p>
<p>mx(-)*mi(+)</p>
<p>求出a,b的最大最小字段和,然后暴力枚举四种情况求max</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">ll t1[<span class="number">2</span>], t2[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">b</span><span class="params">(m + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">    <span class="keyword">auto</span> dpmx = [&amp;](vector&lt;ll&gt; &amp;s, <span class="type">int</span> n) -&gt; ll</span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;ll&gt; <span class="built_in">f</span>(n + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            f[i] = <span class="built_in">max</span>(s[i], f[i - <span class="number">1</span>] + s[i]);</span><br><span class="line">        <span class="keyword">return</span> *<span class="built_in">max_element</span>(f.<span class="built_in">begin</span>() + <span class="number">1</span>, f.<span class="built_in">end</span>());</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> dpmi = [&amp;](vector&lt;ll&gt; &amp;s, <span class="type">int</span> n) -&gt; ll</span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;ll&gt; <span class="built_in">f</span>(n + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            f[i] = <span class="built_in">min</span>(s[i], f[i - <span class="number">1</span>] + s[i]);</span><br><span class="line">        <span class="keyword">return</span> *<span class="built_in">min_element</span>(f.<span class="built_in">begin</span>() + <span class="number">1</span>, f.<span class="built_in">end</span>());</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    t1[<span class="number">0</span>] = <span class="built_in">dpmi</span>(a, n);</span><br><span class="line">    t1[<span class="number">1</span>] = <span class="built_in">dpmx</span>(a, n);</span><br><span class="line">    t2[<span class="number">0</span>] = <span class="built_in">dpmi</span>(b, m);</span><br><span class="line">    t2[<span class="number">1</span>] = <span class="built_in">dpmx</span>(b, m);</span><br><span class="line">    ll ans = <span class="number">-1e18</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">1</span>; j++)</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, t1[i] * t2[j]);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="J"><a href="#J" class="headerlink" title="J"></a>J</h1><p>dp做法:</p>
<p>记$f_{u,i}$为以u为根的子树,权值和%3为i,的方案(选的是1&#x2F;2)</p>
<p>暴力转移即可</p>
<p>如何求方案?</p>
<p>对于每个节点u,用一个pre数组记录子树和为i的方案(类似背包求方案)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">100</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line">ll t1[<span class="number">2</span>], t2[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">char</span>&gt; <span class="title">c</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; c[i];</span><br><span class="line">    vector&lt;vector&lt;ll&gt;&gt; <span class="built_in">f</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;ll&gt;(<span class="number">3</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">ans</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        e[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> dfs, <span class="type">int</span> u) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;ll&gt; <span class="built_in">f1</span>(<span class="number">3</span>, <span class="number">0</span>), <span class="built_in">f2</span>(<span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line">        f1[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">dfs</span>(dfs, to);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">                f2[i] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">2</span>; j++)</span><br><span class="line">                    <span class="keyword">if</span> (f1[i] &amp;&amp; f[to][j])</span><br><span class="line">                        f2[(i + j) % <span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">swap</span>(f1, f2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span>; j++)</span><br><span class="line">                <span class="keyword">if</span> (f1[i])</span><br><span class="line">                    f[u][(i + j) % <span class="number">3</span>] = j;</span><br><span class="line">        <span class="keyword">if</span> (c[u] == <span class="string">&#x27;R&#x27;</span>)</span><br><span class="line">            f[u][<span class="number">1</span>] = f[u][<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> cal = [&amp;](<span class="keyword">auto</span> cal, <span class="type">int</span> u, <span class="type">int</span> s) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans[u] = f[u][s];</span><br><span class="line">        s = (s - f[u][s] + <span class="number">3</span>) % <span class="number">3</span>;</span><br><span class="line">        <span class="function">vector&lt;ll&gt; <span class="title">opt</span><span class="params">(e[u].size())</span></span>;</span><br><span class="line">        <span class="type">int</span> now = <span class="number">0</span>;</span><br><span class="line">        vector&lt;vector&lt;ll&gt;&gt; <span class="built_in">pre</span>(e[u].<span class="built_in">size</span>(), <span class="built_in">vector</span>&lt;ll&gt;(<span class="number">3</span>, <span class="number">-1</span>));</span><br><span class="line">        <span class="function">vector&lt;ll&gt; <span class="title">f1</span><span class="params">(<span class="number">3</span>, <span class="number">0</span>)</span>, <span class="title">f2</span><span class="params">(<span class="number">3</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">        f1[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">                f2[i] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">2</span>; j++)</span><br><span class="line">                    <span class="keyword">if</span> (f1[i] &amp;&amp; f[to][j])</span><br><span class="line">                    &#123;</span><br><span class="line">                        f2[(i + j) % <span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">                        pre[now][(i + j) % <span class="number">3</span>] = j;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">            now++;</span><br><span class="line">            <span class="built_in">swap</span>(f1, f2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = now - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            opt[i] = pre[i][s];</span><br><span class="line">            s = (s - opt[i] + <span class="number">3</span>) % <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        now = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="built_in">cal</span>(cal, to, opt[now++]);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (c[<span class="number">1</span>] == <span class="string">&#x27;R&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (f[<span class="number">1</span>][<span class="number">0</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cal</span>(cal, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">                cout &lt;&lt; ans[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">            <span class="keyword">if</span> (f[<span class="number">1</span>][i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cal</span>(cal, <span class="number">1</span>, i);</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">                    cout &lt;&lt; ans[i];</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(5);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>贪心做法:</p>
<p>先暴力把所有白色节点设置为1</p>
<p>对于以u为根的子树,</p>
<p>如果该节点为红色,且此时权值和为0:</p>
<p>如果有白色子节点,就修改为2</p>
<p>没有说明无解</p>
<p>如果权值和不为0,则可以根据权值和设置u的值</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; rev_dfn, <span class="built_in">ans</span>(n + <span class="number">1</span>, <span class="number">0</span>), <span class="built_in">s</span>(n + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">w</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">char</span>&gt; <span class="title">c</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; c[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        e[x].<span class="built_in">push_back</span>(i);</span><br><span class="line">        <span class="keyword">if</span> (c[i] == <span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">            w[x] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (c[i] == <span class="string">&#x27;R&#x27;</span> &amp;&amp; !w[i])</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> dfs, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">                <span class="built_in">dfs</span>(dfs, to, u);</span><br><span class="line">        rev_dfn.<span class="built_in">push_back</span>(u);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> u : rev_dfn)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            s[u] += s[to];</span><br><span class="line">        <span class="keyword">if</span> (c[u] == <span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">            ans[u] = <span class="number">1</span>, s[u]++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[u] % <span class="number">3</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ans[u] = <span class="number">2</span>, s[u] += <span class="number">3</span>;</span><br><span class="line">                ans[w[u]] = <span class="number">2</span>, s[w[u]]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (s[u] % <span class="number">3</span> == <span class="number">1</span>)</span><br><span class="line">                ans[u] = <span class="number">2</span>, s[u] += <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ans[u] = <span class="number">1</span>, s[u]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; ans[i];</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="K"><a href="#K" class="headerlink" title="K"></a>K</h1><p>考虑1*m的情况,暴力打表发现只有derder..</p>
<p>拓展到n*m,发现只有每行向左&#x2F;右偏移一位</p>
<p>所有一共有$A(3,3)*2$种情况,计算每种情况需要修改的次数,查询时用二维前缀和优化</p>
<p>注意2*2还有类似一下情况</p>
<p>re</p>
<p>er</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;string&gt; list_s = &#123;<span class="string">&quot;red&quot;</span>, <span class="string">&quot;edr&quot;</span>, <span class="string">&quot;dre&quot;</span>, <span class="string">&quot;der&quot;</span>, <span class="string">&quot;erd&quot;</span>, <span class="string">&quot;rde&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(m + <span class="number">1</span>, <span class="string">&#x27;#&#x27;</span>));</span><br><span class="line">    vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt; v;</span><br><span class="line">    string s = <span class="string">&quot;der&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> cal = [&amp;](<span class="type">int</span> d) -&gt; vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">c</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>, st = p; j &lt;= m; j++, st = (st + <span class="number">1</span>) % <span class="number">3</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                c[i][j] = c[i - <span class="number">1</span>][j] + c[i][j - <span class="number">1</span>] - c[i - <span class="number">1</span>][j - <span class="number">1</span>] + (a[i][j] != s[st]);</span><br><span class="line">            &#125;</span><br><span class="line">            p = (p + d + <span class="number">3</span>) % <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;;</span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="built_in">cal</span>(<span class="number">1</span>)), v.<span class="built_in">push_back</span>(<span class="built_in">cal</span>(<span class="number">-1</span>));</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">next_permutation</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>()))</span><br><span class="line">        v.<span class="built_in">push_back</span>(<span class="built_in">cal</span>(<span class="number">1</span>)), v.<span class="built_in">push_back</span>(<span class="built_in">cal</span>(<span class="number">-1</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> cal = [&amp;](<span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> x2, <span class="type">int</span> y2, vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; &amp;s) -&gt; <span class="type">int</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> s[x2][y2] - s[x1 - <span class="number">1</span>][y2] - s[x2][y1 - <span class="number">1</span>] + s[x1 - <span class="number">1</span>][y1 - <span class="number">1</span>];</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> x1, y1, x2, y2;</span><br><span class="line">        cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">1e9</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;c : v)</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">cal</span>(x1, y1, x2, y2, c));</span><br><span class="line">        <span class="keyword">if</span> (x2 - x1 + <span class="number">1</span> == <span class="number">2</span> &amp;&amp; y2 - y1 + <span class="number">1</span> == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;s : list_s)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">char</span> c1 = s[<span class="number">0</span>], c2 = s[<span class="number">1</span>];</span><br><span class="line">                <span class="type">int</span> now = <span class="number">0</span>;</span><br><span class="line">                now += (a[x1][y1] != c1);</span><br><span class="line">                now += (a[x1][y2] != c2);</span><br><span class="line">                now += (a[x2][y1] != c2);</span><br><span class="line">                now += (a[x2][y2] != c1);</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, now);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>nowcoder</category>
      </categories>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 339</title>
    <url>/2024/03/01/AtCoder%20Beginner%20Contest%20339/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>模拟即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = s.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; s.<span class="built_in">substr</span>(i + <span class="number">1</span>) &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>模拟，可以让下标从0开始，这样可以在%n下满足题意</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, opt;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; opt;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(n, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(m, <span class="string">&#x27;.&#x27;</span>));</span><br><span class="line">    <span class="type">int</span> d = <span class="number">0</span>, x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (opt--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[x][y] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[x][y] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">            d = (d + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            a[x][y] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">            d = (d - <span class="number">1</span> + <span class="number">4</span>) % <span class="number">4</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        x = (x + dx[d] + n) % n;</span><br><span class="line">        y = (y + dy[d] + m) % m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">            cout &lt;&lt; a[i][j];</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>从后往前吗模拟：<br>设当前最少有x人<br>如果是$a[i]&lt;0$，则在到达该站前至少$abs(a[i])$人<br>如果是$a[i]&gt;0$，则在到达该站前可以少$abs(a[i])$人<br>最后再顺着模拟一遍得到答案</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans -= a[i];</span><br><span class="line">            ans = <span class="built_in">max</span>(<span class="number">0ll</span>, ans);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans -= a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        ans += a[i];</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>同时维护两人的坐标，进行bfs</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">ll dist[<span class="number">70</span>][<span class="number">70</span>][<span class="number">70</span>][<span class="number">70</span>];</span><br><span class="line"><span class="type">int</span> d[<span class="number">4</span>][<span class="number">4</span>] = &#123;&#123;<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>&#125;, &#123;<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>&#125;&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, cnt = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    array&lt;<span class="type">int</span>, 4&gt; st;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(n + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">            <span class="keyword">if</span> (a[i][j] == <span class="string">&#x27;P&#x27;</span>)</span><br><span class="line">                st[cnt++] = i, st[cnt++] = j;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">1</span>; l &lt;= n; l++)</span><br><span class="line">                    dist[i][j][k][l] = <span class="number">1e9</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> bfs = [&amp;](array&lt;<span class="type">int</span>, <span class="number">4</span>&gt; x) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        queue&lt;array&lt;<span class="type">int</span>, <span class="number">4</span>&gt;&gt; q;</span><br><span class="line">        q.<span class="built_in">push</span>(x);</span><br><span class="line">        dist[x[<span class="number">0</span>]][x[<span class="number">1</span>]][x[<span class="number">2</span>]][x[<span class="number">3</span>]] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) <span class="comment">// 方向</span></span><br><span class="line">            &#123;</span><br><span class="line">                array&lt;<span class="type">int</span>, 4&gt; tmp;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    tmp[j] = t[j] + d[j][i];</span><br><span class="line">                    tmp[j] = <span class="built_in">min</span>(n, tmp[j]);</span><br><span class="line">                    tmp[j] = <span class="built_in">max</span>(<span class="number">1</span>, tmp[j]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (a[tmp[<span class="number">0</span>]][tmp[<span class="number">1</span>]] == <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">                    tmp[<span class="number">0</span>] = t[<span class="number">0</span>], tmp[<span class="number">1</span>] = t[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (a[tmp[<span class="number">2</span>]][tmp[<span class="number">3</span>]] == <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">                    tmp[<span class="number">2</span>] = t[<span class="number">2</span>], tmp[<span class="number">3</span>] = t[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (dist[tmp[<span class="number">0</span>]][tmp[<span class="number">1</span>]][tmp[<span class="number">2</span>]][tmp[<span class="number">3</span>]] &gt; dist[t[<span class="number">0</span>]][t[<span class="number">1</span>]][t[<span class="number">2</span>]][t[<span class="number">3</span>]] + <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    dist[tmp[<span class="number">0</span>]][tmp[<span class="number">1</span>]][tmp[<span class="number">2</span>]][tmp[<span class="number">3</span>]] = dist[t[<span class="number">0</span>]][t[<span class="number">1</span>]][t[<span class="number">2</span>]][t[<span class="number">3</span>]] + <span class="number">1</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(tmp);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">bfs</span>(st);</span><br><span class="line">    ll ans = <span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">if</span> (a[i][j] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, dist[i][j][i][j]);</span><br><span class="line">    <span class="keyword">if</span> (ans == <span class="number">1e9</span>)</span><br><span class="line">        ans = <span class="number">-1</span>;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>线段树优化dp,维护转移范围内的最大值</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    ll val;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">segtree</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;node&gt; a;</span><br><span class="line">    <span class="built_in">segtree</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n * <span class="number">4</span> + <span class="number">10</span>), <span class="built_in">a</span>(n + <span class="number">1</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> id)</span> </span>&#123; a[id].val = <span class="built_in">max</span>(a[id * <span class="number">2</span>].val, a[id * <span class="number">2</span> + <span class="number">1</span>].val); &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, vector&lt;<span class="type">int</span>&gt; &amp;arr)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == r)</span><br><span class="line">            a[id].val = arr[l];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">build</span>(id * <span class="number">2</span>, l, mid, arr);</span><br><span class="line">            <span class="built_in">build</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, arr);</span><br><span class="line">            <span class="built_in">update</span>(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> pos, <span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == r) <span class="comment">// 叶子节点</span></span><br><span class="line">            a[id].val = val;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (pos &lt;= mid)</span><br><span class="line">                <span class="built_in">change</span>(id * <span class="number">2</span>, l, mid, pos, val);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">change</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, pos, val);</span><br><span class="line">            <span class="built_in">update</span>(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == ql &amp;&amp; r == qr)</span><br><span class="line">            <span class="keyword">return</span> a[id].val;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (qr &lt;= mid)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(id * <span class="number">2</span>, l, mid, ql, qr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ql &gt; mid)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, ql, qr);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">max</span>(<span class="built_in">query</span>(id * <span class="number">2</span>, l, mid, ql, mid), <span class="built_in">query</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, mid + <span class="number">1</span>, qr));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, d;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; d;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">rec</span><span class="params">(N, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="function">segtree <span class="title">seg</span><span class="params">(N)</span></span>;</span><br><span class="line">    seg.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n, rec);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l = <span class="built_in">max</span>(<span class="number">1</span>, a[i] - d), r = <span class="built_in">min</span>((<span class="type">int</span>)<span class="number">5e5</span>, a[i] + d);</span><br><span class="line">        <span class="type">int</span> res = seg.<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, N, l, r) + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> now = <span class="built_in">max</span>(seg.<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, N, a[i], a[i]), <span class="number">1ll</span>);</span><br><span class="line">        now = <span class="built_in">max</span>(now, res);</span><br><span class="line">        seg.<span class="built_in">change</span>(<span class="number">1</span>, <span class="number">1</span>, N, a[i], now);</span><br><span class="line">    &#125;</span><br><span class="line">    ll res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        res = <span class="built_in">max</span>(res, seg.<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, N, a[i], a[i]));</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>如果模数够大，够多，那么就可以保证$a<em>b&#x3D;c$与$a%mod</em>b%mod&#x3D;c%mod$等效<br>可以双哈希，三哈希，或者模数开到ll<br>正经比赛的话，建议还是双哈希（</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    map&lt;ll, ll&gt; mp;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">auto</span> cal = [&amp;](string s) -&gt; ll</span><br><span class="line">    &#123;</span><br><span class="line">        ll res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">            res = (res * <span class="number">10</span> + (s[i] - <span class="string">&#x27;0&#x27;</span>)) % mod;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        a[i] = <span class="built_in">cal</span>(s);</span><br><span class="line">        mp[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            ll tmp = <span class="type">__int128_t</span>(a[i]) * a[j] % mod;</span><br><span class="line">            ans += mp[tmp];</span><br><span class="line">        &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>主席树模板题</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">7e7</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    ll sum, l, r;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">segtree</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;node&gt; a;</span><br><span class="line">    <span class="built_in">segtree</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(<span class="number">1</span>) &#123; a.<span class="built_in">reserve</span>(_n); &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">sum</span>(id) = <span class="built_in">sum</span>(<span class="built_in">ls</span>(id)) + <span class="built_in">sum</span>(<span class="built_in">rs</span>(id));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == r)</span><br><span class="line">            <span class="built_in">sum</span>(id) = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">ls</span>(id) = ++n, <span class="built_in">rs</span>(id) = ++n;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">build</span>(<span class="built_in">ls</span>(id), l, mid);</span><br><span class="line">            <span class="built_in">build</span>(<span class="built_in">rs</span>(id), mid + <span class="number">1</span>, r);</span><br><span class="line">            <span class="built_in">update</span>(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> pos, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> id, <span class="type">int</span> nxt, <span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">sum</span>(nxt) = <span class="built_in">sum</span>(id) + val;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">ls</span>(nxt) = <span class="built_in">ls</span>(id), <span class="built_in">rs</span>(nxt) = <span class="built_in">rs</span>(id);</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (pos &lt;= mid)</span><br><span class="line">            <span class="built_in">ls</span>(nxt) = ++n, <span class="built_in">change</span>(pos, l, mid, <span class="built_in">ls</span>(id), <span class="built_in">ls</span>(nxt), val);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">rs</span>(nxt) = ++n, <span class="built_in">change</span>(pos, mid + <span class="number">1</span>, r, <span class="built_in">rs</span>(id), <span class="built_in">rs</span>(nxt), val);</span><br><span class="line">        <span class="built_in">update</span>(nxt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr)</span> <span class="comment">// 查询某个版本的区间和</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == ql &amp;&amp; r == qr)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">sum</span>(id);</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (qr &lt;= mid)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(<span class="built_in">ls</span>(id), l, mid, ql, qr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ql &gt; mid)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(<span class="built_in">rs</span>(id), mid + <span class="number">1</span>, r, ql, qr);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(<span class="built_in">ls</span>(id), l, mid, ql, mid) + <span class="built_in">query</span>(<span class="built_in">rs</span>(id), mid + <span class="number">1</span>, r, mid + <span class="number">1</span>, qr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> nxt, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr)</span> <span class="comment">// 在id-nxt版本之间查询值域在ql-qr的和</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ql &gt; qr)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (l == ql &amp;&amp; r == qr)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">sum</span>(nxt) - <span class="built_in">sum</span>(id);</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (qr &lt;= mid)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(<span class="built_in">ls</span>(id), <span class="built_in">ls</span>(nxt), l, mid, ql, qr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ql &gt; mid)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(<span class="built_in">rs</span>(id), <span class="built_in">rs</span>(nxt), mid + <span class="number">1</span>, r, ql, qr);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(<span class="built_in">ls</span>(id), <span class="built_in">ls</span>(nxt), l, mid, ql, mid) + <span class="built_in">query</span>(<span class="built_in">rs</span>(id), <span class="built_in">rs</span>(nxt), mid + <span class="number">1</span>, r, mid + <span class="number">1</span>, qr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, q, mx = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, b</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i], b.<span class="built_in">push_back</span>(a[i]), mx = <span class="built_in">max</span>(mx, a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>());</span><br><span class="line">    b.<span class="built_in">erase</span>(<span class="built_in">unique</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>()), b.<span class="built_in">end</span>());</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">root</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    ll pre = <span class="number">0</span>;</span><br><span class="line">    root[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="function">segtree <span class="title">seg</span><span class="params">(<span class="number">2e7</span>)</span></span>;</span><br><span class="line">    seg.<span class="built_in">build</span>(root[<span class="number">0</span>], <span class="number">1</span>, n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        root[i] = ++seg.n;</span><br><span class="line">        <span class="type">int</span> pos = (<span class="built_in">lower_bound</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>(), a[i]) - b.<span class="built_in">begin</span>()) + <span class="number">1</span>;</span><br><span class="line">        seg.<span class="built_in">change</span>(pos, <span class="number">1</span>, n, root[i - <span class="number">1</span>], root[i], a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll l, r, val;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r &gt;&gt; val;</span><br><span class="line">        l ^= pre, r ^= pre, val ^= pre;</span><br><span class="line">        <span class="type">int</span> pos = (<span class="built_in">upper_bound</span>(b.<span class="built_in">begin</span>(), b.<span class="built_in">end</span>(), val) - b.<span class="built_in">begin</span>());</span><br><span class="line">        pre = seg.<span class="built_in">query</span>(root[l - <span class="number">1</span>], root[r], <span class="number">1</span>, n, <span class="number">1</span>, pos);</span><br><span class="line">        cout &lt;&lt; pre &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(5);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Atcoder</category>
      </categories>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 340</title>
    <url>/2024/03/01/AtCoder%20Beginner%20Contest%20340/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>按照等差数列直接模拟即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b, d;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; d;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = a; i &lt;= b; i += d)</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>模拟</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> q;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> opt, x;</span><br><span class="line">    <span class="keyword">while</span> (q--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; opt &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>)</span><br><span class="line">            a.<span class="built_in">push_back</span>(x);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; a[a.<span class="built_in">size</span>() - x] &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>如果直接模拟肯定会超时，考虑用set维护种类，map维护数量，这样可以保证每种数只会被操作一次</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    map&lt;ll, ll&gt; mp;</span><br><span class="line">    mp[n] = <span class="number">1</span>;</span><br><span class="line">    set&lt;ll&gt; s;</span><br><span class="line">    s.<span class="built_in">insert</span>(n);</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (s.<span class="built_in">size</span>() &amp;&amp; *s.<span class="built_in">rbegin</span>() &gt;= <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ll t = *s.<span class="built_in">rbegin</span>();</span><br><span class="line">        ll num = mp[t];</span><br><span class="line">        s.<span class="built_in">erase</span>(*s.<span class="built_in">rbegin</span>());</span><br><span class="line">        res += t * num;</span><br><span class="line">        <span class="keyword">if</span> (t % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            s.<span class="built_in">insert</span>(t / <span class="number">2</span>);</span><br><span class="line">            mp[t / <span class="number">2</span>] += num * <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ll lo = t / <span class="number">2</span>, hi = (t - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (lo &gt;= <span class="number">2</span>)</span><br><span class="line">                s.<span class="built_in">insert</span>(lo), mp[lo] += num;</span><br><span class="line">            <span class="keyword">if</span> (hi &gt;= <span class="number">2</span>)</span><br><span class="line">                s.<span class="built_in">insert</span>(hi), mp[hi] += num;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>dijkstra板子</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;vector&lt;pll&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a, b, x;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; x;</span><br><span class="line">        e[i].<span class="built_in">push_back</span>(&#123;i + <span class="number">1</span>, a&#125;);</span><br><span class="line">        e[i].<span class="built_in">push_back</span>(&#123;x, b&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> dij = [&amp;](<span class="type">int</span> s) -&gt; ll</span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;ll&gt; <span class="built_in">dist</span>(n + <span class="number">1</span>, <span class="number">1e18</span>);</span><br><span class="line">        <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">st</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">        priority_queue&lt;pll, vector&lt;pll&gt;, greater&lt;pll&gt;&gt; q;</span><br><span class="line">        dist[s] = <span class="number">0</span>;</span><br><span class="line">        q.<span class="built_in">push</span>(&#123;<span class="number">0</span>, s&#125;);</span><br><span class="line">        <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> t = q.<span class="built_in">top</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span> (st[t.y])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            st[t.y] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> [to, w] : e[t.y])</span><br><span class="line">                <span class="keyword">if</span> (dist[t.y] + w &lt; dist[to])</span><br><span class="line">                    dist[to] = dist[t.y] + w, q.<span class="built_in">push</span>(&#123;dist[to], to&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dist[n];</span><br><span class="line">    &#125;;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">dij</span>(<span class="number">1</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>模拟，用树状数组维护差分数组，就可以实现区间加，单点查询</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">BIT</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;ll&gt; a;</span><br><span class="line">    <span class="built_in">BIT</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n + <span class="number">3</span>), <span class="built_in">a</span>(n + <span class="number">1</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lb</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123; <span class="keyword">return</span> x &amp; -x; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> n, vector&lt;ll&gt; &amp;s)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i] += s[i];</span><br><span class="line">            <span class="type">int</span> fa = i + <span class="built_in">lb</span>(i);</span><br><span class="line">            <span class="keyword">if</span> (fa &lt;= n)</span><br><span class="line">                a[fa] += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, ll y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (; x &lt; n; x += <span class="built_in">lb</span>(x))</span><br><span class="line">            a[x] += y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ll res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; x; x ^= <span class="built_in">lb</span>(x))</span><br><span class="line">            res += a[x];</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">b</span><span class="params">(m + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">    <span class="function">BIT <span class="title">bit</span><span class="params">(n + <span class="number">10</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        bit.<span class="built_in">add</span>(i, a[i]), bit.<span class="built_in">add</span>(i + <span class="number">1</span>, -a[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u = b[i] + <span class="number">1</span>;</span><br><span class="line">        ll num = bit.<span class="built_in">query</span>(u);</span><br><span class="line">        bit.<span class="built_in">add</span>(u, -num), bit.<span class="built_in">add</span>(u + <span class="number">1</span>, num);</span><br><span class="line">        ll add = num / n;</span><br><span class="line">        bit.<span class="built_in">add</span>(<span class="number">1</span>, add), bit.<span class="built_in">add</span>(n + <span class="number">1</span>, -add);</span><br><span class="line">        num %= n;</span><br><span class="line">        <span class="keyword">if</span> (u + num &lt;= n)</span><br><span class="line">            bit.<span class="built_in">add</span>(u + <span class="number">1</span>, <span class="number">1</span>), bit.<span class="built_in">add</span>(u + num + <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            bit.<span class="built_in">add</span>(u + <span class="number">1</span>, <span class="number">1</span>), bit.<span class="built_in">add</span>(n + <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">            num -= n - u;</span><br><span class="line">            bit.<span class="built_in">add</span>(<span class="number">1</span>, <span class="number">1</span>), bit.<span class="built_in">add</span>(num + <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">        cout &lt;&lt; bit.<span class="built_in">query</span>(j) &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>考虑用向量来计算面积，类似22桂林的E题，设未知点为$(ax,ay)$,那么可以得到：<br>$ax<em>y-ay</em>x&#x3D;2$<br>用exgcd计算即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">```<span class="function">cpp</span></span><br><span class="line"><span class="function">ll <span class="title">exgcd</span><span class="params">(ll a, ll b, ll &amp;x, ll &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    ll d = <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">    y -= (a / b) * x;</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll x, y;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    pll t = &#123;x, y&#125;;</span><br><span class="line">    ll ansx, ansy;</span><br><span class="line">    ll g = <span class="built_in">exgcd</span>(-t.y, t.x, ansx, ansy);</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">2</span> % g)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        ll mul = <span class="number">2</span> / g;</span><br><span class="line">        cout &lt;&lt; ansx * mul &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ansy * mul &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>1.虚树dp<br>存一下同种颜色的点,对每种颜色建虚树<br>在虚树上dp答案<br>dp[u]表示以u为根的树,所有叶子节点是同种颜色(设为k)的方案数<br>$dp_u&#x3D; {\textstyle \prod_{to \in son(i)} (f[to]+1)} $加一是因为可以不选<br>但是这样是不对的,因为如果当前点u的颜色与k不同:</p>
<p>1.它自己一个点肯定是不对的,要减去一(87,88行)<br>2.u和某一个儿子构成的树也是不对的,这样u成叶子了,要减去$f[to]$(90,91)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, tot = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">dfn</span><span class="params">(n + <span class="number">1</span>, <span class="number">1</span>)</span>, <span class="title">dist</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    vector&lt;vector&lt;ll&gt;&gt; <span class="built_in">to</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;ll&gt;(<span class="number">20</span>, <span class="number">0</span>));</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>), <span class="built_in">col</span>(n + <span class="number">1</span>), <span class="built_in">ne</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">f</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; c;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i], col[a[i]].<span class="built_in">push_back</span>(i);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        e[u].<span class="built_in">push_back</span>(v), e[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> dfs, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        dfn[u] = ++tot;</span><br><span class="line">        to[u][<span class="number">0</span>] = fa;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">            &#123;</span><br><span class="line">                dist[to] = dist[u] + <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">dfs</span>(dfs, to, u);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; <span class="number">20</span>; j++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (to[i][j - <span class="number">1</span>])</span><br><span class="line">                to[i][j] = to[to[i][j - <span class="number">1</span>]][j - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">auto</span> lca = [&amp;](<span class="type">int</span> u, <span class="type">int</span> v) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (dist[u] &lt; dist[v])</span><br><span class="line">            <span class="built_in">swap</span>(u, v);</span><br><span class="line">        <span class="type">int</span> cha = dist[u] - dist[v];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">20</span> &amp;&amp; cha; j++, cha /= <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span> (cha &amp; <span class="number">1</span>)</span><br><span class="line">                u = to[u][j];</span><br><span class="line">        <span class="keyword">if</span> (u != v)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">19</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">                <span class="keyword">if</span> (to[u][j] != to[v][j])</span><br><span class="line">                    u = to[u][j], v = to[v][j];</span><br><span class="line">            <span class="keyword">return</span> to[u][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> u;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> build = [&amp;](<span class="type">int</span> i) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">sort</span>(col[i].<span class="built_in">begin</span>(), col[i].<span class="built_in">end</span>(), [&amp;](<span class="type">int</span> a, <span class="type">int</span> b)</span><br><span class="line">             &#123; <span class="keyword">return</span> dfn[a] &lt; dfn[b]; &#125;);</span><br><span class="line">        c.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j + <span class="number">1</span> &lt; col[i].<span class="built_in">size</span>(); j++)</span><br><span class="line">        &#123;</span><br><span class="line">            c.<span class="built_in">push_back</span>(col[i][j]);</span><br><span class="line">            c.<span class="built_in">push_back</span>(<span class="built_in">lca</span>(col[i][j], col[i][j + <span class="number">1</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">        c.<span class="built_in">push_back</span>(col[i].<span class="built_in">back</span>());</span><br><span class="line">        <span class="built_in">sort</span>(c.<span class="built_in">begin</span>(), c.<span class="built_in">end</span>(), [&amp;](<span class="type">int</span> a, <span class="type">int</span> b)</span><br><span class="line">             &#123; <span class="keyword">return</span> dfn[a] &lt; dfn[b]; &#125;);</span><br><span class="line">        c.<span class="built_in">erase</span>(<span class="built_in">unique</span>(c.<span class="built_in">begin</span>(), c.<span class="built_in">end</span>()), c.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i + <span class="number">1</span> &lt; c.<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ll lc = <span class="built_in">lca</span>(c[i], c[i + <span class="number">1</span>]);</span><br><span class="line">            ne[lc].<span class="built_in">push_back</span>(c[i + <span class="number">1</span>]);</span><br><span class="line">            ne[c[i + <span class="number">1</span>]].<span class="built_in">push_back</span>(lc);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> dp = [&amp;](<span class="keyword">auto</span> dp, <span class="type">int</span> u, <span class="type">int</span> fa, <span class="type">int</span> k) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        f[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : ne[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">dp</span>(dp, to, u, k);</span><br><span class="line">                f[u] = f[u] * (f[to] + <span class="number">1</span>) % mod;</span><br><span class="line">            &#125;</span><br><span class="line">        ll res = f[u];</span><br><span class="line">        <span class="keyword">if</span> (a[u] != k)</span><br><span class="line">        &#123;</span><br><span class="line">            res = (res - <span class="number">1</span> + mod) % mod;</span><br><span class="line">            f[u] = (f[u] - <span class="number">1</span> + mod) % mod;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> to : ne[u])</span><br><span class="line">                <span class="keyword">if</span> (to != fa)</span><br><span class="line">                    res = (res - f[to] + mod) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = (ans + res) % mod;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (col[i].<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">build</span>(i);</span><br><span class="line">            <span class="built_in">dp</span>(dp, <span class="number">1</span>, <span class="number">0</span>, i);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> t : c)</span><br><span class="line">                f[t] = <span class="number">0</span>, ne[t].<span class="built_in">clear</span>();</span><br><span class="line">            c.<span class="built_in">clear</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.启发式合并</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        e[u].<span class="built_in">push_back</span>(v), e[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> dfs, <span class="type">int</span> u, <span class="type">int</span> fa) -&gt; map&lt;ll, ll&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        map&lt;ll, ll&gt; fmp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="keyword">if</span> (to != fa)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">auto</span> smp = <span class="built_in">dfs</span>(dfs, to, u);</span><br><span class="line">                ans = (ans + smp[a[u]]) % mod; <span class="comment">// u 与to 组成树</span></span><br><span class="line">                <span class="keyword">if</span> (fmp.<span class="built_in">size</span>() &lt; smp.<span class="built_in">size</span>())</span><br><span class="line">                    <span class="built_in">swap</span>(fmp, smp);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">auto</span> [col, sz] : smp)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans = (ans + fmp[col] * sz % mod) % mod;</span><br><span class="line">                    fmp[col] = ((fmp[col] + <span class="number">1</span>) * (sz + <span class="number">1</span>) % mod - <span class="number">1</span> + mod) % mod;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        fmp[a[u]] = (fmp[a[u]] + <span class="number">1</span>) % mod;</span><br><span class="line">        ans = (ans + <span class="number">1</span>) % mod; <span class="comment">// u自己作为树</span></span><br><span class="line">        <span class="keyword">return</span> fmp;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Atcoder</category>
      </categories>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 342</title>
    <url>/2024/03/01/AtCoder%20Beginner%20Contest%20342/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s, s1;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    s1 = s;</span><br><span class="line">    <span class="built_in">sort</span>(s1.<span class="built_in">begin</span>(), s1.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">char</span> ans;</span><br><span class="line">    <span class="keyword">if</span> (s1[<span class="number">0</span>] == s1[<span class="number">1</span>])</span><br><span class="line">        ans = s1.<span class="built_in">back</span>();</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ans = s1[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">        <span class="keyword">if</span> (s[i] == ans)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        mp[x] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> q;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a, b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        cout &lt;&lt; (mp[a] &gt; mp[b] ? b : a) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>暴力合并即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(<span class="number">100</span>);</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">        a[(s[i] - <span class="string">&#x27;a&#x27;</span>)].<span class="built_in">push_back</span>(i);</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> u, v;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        <span class="type">int</span> x = u - <span class="string">&#x27;a&#x27;</span>, y = v - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (x == y)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (a[x].<span class="built_in">empty</span>())</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[y].<span class="built_in">size</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">auto</span> e : a[x])</span><br><span class="line">                    a[y].<span class="built_in">push_back</span>(e);</span><br><span class="line">                a[x].<span class="built_in">clear</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">swap</span>(a[x], a[y]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">char</span>&gt; <span class="title">ans</span><span class="params">(n + <span class="number">1</span>, <span class="string">&#x27;#&#x27;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> p : a[i])</span><br><span class="line">            ans[p] = <span class="built_in">char</span>(<span class="string">&#x27;a&#x27;</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cout &lt;&lt; ans[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>答案只有以下几种情况:</p>
<p>假设0既不是平方数,也不是非平凡数</p>
<p>1.平方数*平方数</p>
<p>2.非平方数*非平方数</p>
<p>3.0*非零</p>
<p>4.非零*0</p>
<p>1.3.4可以直接计数,接下来考虑怎么算2对答案的贡献</p>
<p>考虑平方数的性质,每个质因子的指数都是偶数,所以两个非平方数相乘也要满足</p>
<p>记录一下非平方数中指数是奇数的数的乘积,这个乘积是唯一的,用map计数即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> getpr = [&amp;](<span class="type">int</span> n)</span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;<span class="type">bool</span>&gt; <span class="built_in">not_pr</span>(n + <span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!not_pr[i])</span><br><span class="line">                pr.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> p : pr)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i * p &gt; n)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                not_pr[i * p] = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (i % p == <span class="number">0</span>) <span class="comment">// 说明i*p已经被一个更小的i判断过了</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">getpr</span>(<span class="number">450</span>);</span><br><span class="line">    ll n, cnt = <span class="number">0</span>, ans = <span class="number">0</span>, zero = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span> (!x)</span><br><span class="line">        &#123;</span><br><span class="line">            ans += i - <span class="number">1</span>;</span><br><span class="line">            zero++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans += zero;</span><br><span class="line">        ll fac = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">auto</span> chk = [&amp;]() -&gt; <span class="type">void</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> p : pr)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (p &gt; x)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">if</span> (x % p == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    ll num = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">while</span> (x % p == <span class="number">0</span>)</span><br><span class="line">                        x /= p, num++;</span><br><span class="line">                    <span class="keyword">if</span> (num &amp; <span class="number">1</span>)</span><br><span class="line">                        fac *= p;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (x &gt; <span class="number">1</span>)</span><br><span class="line">                fac *= x;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="built_in">chk</span>();</span><br><span class="line">        ans += mp[fac];</span><br><span class="line">        mp[fac]++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>建反图跑最短路</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;array&lt;ll, 5&gt;&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll l, d, k, c, a, b;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; d &gt;&gt; k &gt;&gt; c &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        e[b].<span class="built_in">push_back</span>(&#123;l, d, k, c, a&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    priority_queue&lt;pll&gt; pq;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">dis</span><span class="params">(n + <span class="number">1</span>, <span class="number">-1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">vis</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    dis[n] = <span class="number">2e18</span>;</span><br><span class="line">    pq.<span class="built_in">push</span>(&#123;dis[n], n&#125;);</span><br><span class="line">    <span class="keyword">while</span> (pq.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> [dist, u] = pq.<span class="built_in">top</span>();</span><br><span class="line">        pq.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (vis[u])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> [l, d, k, c, a] : e[u])</span><br><span class="line">        &#123;</span><br><span class="line">            ll lst = (dis[u] - l - c) / d;</span><br><span class="line">            lst = <span class="built_in">min</span>(lst, k - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (l + lst * d &gt; dis[a])</span><br><span class="line">            &#123;</span><br><span class="line">                dis[a] = l + lst * d;</span><br><span class="line">                pq.<span class="built_in">push</span>(&#123;dis[a], a&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">if</span> (dis[i] == <span class="number">-1</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Unreachable&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; dis[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>概率dp</p>
<p>f[i]表示点数为i是,采取最优策略的获胜概率</p>
<p>每个当前位置有两种情况:</p>
<p>掷色子,$f[i]&#x3D;\sum_{j&#x3D;i+1}^{i+d}f[j]$</p>
<p>不掷骰子,$loss(i)$表示点数为i时,获胜的概率</p>
<p>这个dp明显要倒着处理</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">100</span>, M = <span class="number">2</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">BIT</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;db&gt; a;</span><br><span class="line">    <span class="built_in">BIT</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n), <span class="built_in">a</span>(n + <span class="number">10</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lb</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123; <span class="keyword">return</span> x &amp; -x; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, db y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        x++;</span><br><span class="line">        <span class="keyword">for</span> (; x &lt;= n; x += <span class="built_in">lb</span>(x))</span><br><span class="line">            a[x] += y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, db x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">add</span>(l, x);</span><br><span class="line">        <span class="built_in">add</span>(r + <span class="number">1</span>, -x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">db <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        x++;</span><br><span class="line">        db res = <span class="number">0.</span>;</span><br><span class="line">        <span class="keyword">for</span> (; x; x ^= <span class="built_in">lb</span>(x))</span><br><span class="line">            res += a[x];</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, l, d;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; l &gt;&gt; d;</span><br><span class="line">    <span class="function">vector&lt;db&gt; <span class="title">g</span><span class="params">(<span class="number">2</span> * n + <span class="number">10</span>, <span class="number">0.</span>)</span>, <span class="title">f</span><span class="params">(<span class="number">2</span> * n + <span class="number">10</span>, <span class="number">0.</span>)</span></span>;</span><br><span class="line">    <span class="keyword">auto</span> lose = [&amp;](<span class="type">int</span> x) -&gt; db</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; n)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0.</span>;</span><br><span class="line">        db res = <span class="number">1</span> - g[n];</span><br><span class="line">        <span class="keyword">if</span> (x &gt; l)</span><br><span class="line">            res += g[x - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> cal_g = [&amp;]() -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        BIT <span class="built_in">bit</span>(<span class="number">2</span> * n);</span><br><span class="line">        bit.<span class="built_in">modify</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1.0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2</span> * n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            g[i] = bit.<span class="built_in">query</span>(i);</span><br><span class="line">            <span class="keyword">if</span> (i &lt; l)</span><br><span class="line">            &#123;</span><br><span class="line">                bit.<span class="built_in">modify</span>(i + <span class="number">1</span>, i + d, g[i] / d);</span><br><span class="line">                g[i] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i++)</span><br><span class="line">            g[i] += g[i - <span class="number">1</span>];</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> cal_f = [&amp;]() -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        db sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span> * n; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; n)</span><br><span class="line">                f[i] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                f[i] = <span class="built_in">max</span>(sum / d, <span class="built_in">lose</span>(i));</span><br><span class="line">            &#125;</span><br><span class="line">            sum += f[i];</span><br><span class="line">            <span class="keyword">if</span> (i + d &lt;= <span class="number">2</span> * n)</span><br><span class="line">                sum -= f[i + d];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">cal_g</span>();</span><br><span class="line">    <span class="built_in">cal_f</span>();</span><br><span class="line">    cout &lt;&lt; f[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">10</span>);</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>建一棵以mulitset作为节点的线段树</p>
<p>操作1就是对节点打标记(不下传)</p>
<p>操作2就是删除标记(暴力删)</p>
<p>操作3从叶子往上走,不断取max即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">segtree</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;multiset&lt;<span class="type">int</span>&gt;&gt; a;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; leaf;</span><br><span class="line">    <span class="built_in">segtree</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n * <span class="number">4</span> + <span class="number">10</span>), <span class="built_in">a</span>(n + <span class="number">1</span>), <span class="built_in">leaf</span>(_n + <span class="number">10</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == r)</span><br><span class="line">            leaf[l] = id;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">build</span>(id * <span class="number">2</span>, l, mid);</span><br><span class="line">            <span class="built_in">build</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr, <span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (r &lt; ql || l &gt; qr)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (l &gt;= ql &amp;&amp; r &lt;= qr)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (t &gt; <span class="number">0</span>)</span><br><span class="line">                a[id].<span class="built_in">insert</span>(t);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                a[id].<span class="built_in">extract</span>(-t);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ql &lt;= mid)</span><br><span class="line">            <span class="built_in">modify</span>(id * <span class="number">2</span>, l, mid, ql, qr, t);</span><br><span class="line">        <span class="keyword">if</span> (qr &gt; mid)</span><br><span class="line">            <span class="built_in">modify</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, ql, qr, t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> id = leaf[x];</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (id &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[id].<span class="built_in">size</span>())</span><br><span class="line">                ans = <span class="built_in">max</span>(ans, *a[id].<span class="built_in">rbegin</span>());</span><br><span class="line">            id /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="function">segtree <span class="title">seg</span><span class="params">(n)</span></span>;</span><br><span class="line">    seg.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="type">int</span> opt, l, r, x;</span><br><span class="line">    vector&lt;array&lt;<span class="type">int</span>, 3&gt;&gt; <span class="built_in">op</span>(q + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; opt;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; l &gt;&gt; r &gt;&gt; x;</span><br><span class="line">            seg.<span class="built_in">modify</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r, x);</span><br><span class="line">            op[i] = &#123;l, r, x&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            <span class="keyword">auto</span> [l, r, t] = op[x];</span><br><span class="line">            seg.<span class="built_in">modify</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r, -t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">max</span>(a[x], seg.<span class="built_in">query</span>(x)) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>进一步优化时间,可以将mulitset优化成一个带修堆</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">segtree</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">heap</span></span><br><span class="line">    &#123;</span><br><span class="line">        priority_queue&lt;<span class="type">int</span>&gt; p, q;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            p.<span class="built_in">push</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="type">int</span> <span class="title">top</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">while</span> (p.<span class="built_in">size</span>() &amp;&amp; q.<span class="built_in">size</span>() &amp;&amp; p.<span class="built_in">top</span>() == q.<span class="built_in">top</span>())</span><br><span class="line">                p.<span class="built_in">pop</span>(), q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span> (p.<span class="built_in">size</span>())</span><br><span class="line">                <span class="keyword">return</span> p.<span class="built_in">top</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="type">void</span> <span class="title">del</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            q.<span class="built_in">push</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;heap&gt; a;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; leaf;</span><br><span class="line">    <span class="built_in">segtree</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n * <span class="number">4</span> + <span class="number">10</span>), <span class="built_in">a</span>(n + <span class="number">1</span>), <span class="built_in">leaf</span>(_n + <span class="number">10</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == r)</span><br><span class="line">            leaf[l] = id;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">build</span>(id * <span class="number">2</span>, l, mid);</span><br><span class="line">            <span class="built_in">build</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr, <span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (r &lt; ql || l &gt; qr)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (l &gt;= ql &amp;&amp; r &lt;= qr)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (t &gt; <span class="number">0</span>)</span><br><span class="line">                a[id].<span class="built_in">push</span>(t);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                a[id].<span class="built_in">del</span>(-t);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ql &lt;= mid)</span><br><span class="line">            <span class="built_in">modify</span>(id * <span class="number">2</span>, l, mid, ql, qr, t);</span><br><span class="line">        <span class="keyword">if</span> (qr &gt; mid)</span><br><span class="line">            <span class="built_in">modify</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, ql, qr, t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> id = leaf[x];</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (id &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, a[id].<span class="built_in">top</span>());</span><br><span class="line">            id /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="function">segtree <span class="title">seg</span><span class="params">(n)</span></span>;</span><br><span class="line">    seg.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="type">int</span> opt, l, r, x;</span><br><span class="line">    vector&lt;array&lt;<span class="type">int</span>, 3&gt;&gt; <span class="built_in">op</span>(q + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; opt;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; l &gt;&gt; r &gt;&gt; x;</span><br><span class="line">            seg.<span class="built_in">modify</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r, x);</span><br><span class="line">            op[i] = &#123;l, r, x&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (opt == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            <span class="keyword">auto</span> [l, r, t] = op[x];</span><br><span class="line">            seg.<span class="built_in">modify</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r, -t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">max</span>(a[x], seg.<span class="built_in">query</span>(x)) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Atcoder</category>
      </categories>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 341</title>
    <url>/2024/03/01/AtCoder%20Beginner%20Contest%20341/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;10&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">t</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">s</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; s[i] &gt;&gt; t[i];</span><br><span class="line">        ll add = a[i] / s[i];</span><br><span class="line">        a[i + <span class="number">1</span>] += add * t[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; a[n] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>暴力检查每个点</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, k, ans = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(m + <span class="number">1</span>));</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    <span class="keyword">auto</span> chk = [&amp;](<span class="type">int</span> x, <span class="type">int</span> y) -&gt; <span class="type">bool</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> i : s)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">                y--;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="string">&#x27;R&#x27;</span>)</span><br><span class="line">                y++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="string">&#x27;U&#x27;</span>)</span><br><span class="line">                x--;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                x++;</span><br><span class="line">            <span class="keyword">if</span> (x &lt; <span class="number">1</span> || x &gt; n || y &lt; <span class="number">1</span> || y &gt; m || a[x][y] == <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="keyword">if</span> (a[i][j] == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                ans += <span class="built_in">chk</span>(i, j);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>二分答案,check时容斥一下即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, m, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    ll l = <span class="number">1</span>, r = <span class="number">2e18</span>, g = n / __gcd(n, m) * m;</span><br><span class="line">    <span class="keyword">auto</span> check = [&amp;](ll x) -&gt; <span class="type">bool</span></span><br><span class="line">    &#123;</span><br><span class="line">        ll num = x / n + x / m - <span class="number">2</span> * (x / g);</span><br><span class="line">        <span class="keyword">return</span> num &gt;= k;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        ll mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">            r = mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; l &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>发现每次反转对答案的影响只有$l-,l$和$r,r+1$,用树状数组维护答案,线段树维护原数组</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    ll t, val, sz;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">segtree</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;node&gt; a;</span><br><span class="line">    <span class="built_in">segtree</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n * <span class="number">4</span> + <span class="number">10</span>), <span class="built_in">a</span>(n + <span class="number">1</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> id)</span> </span>&#123; a[id].val = (a[id * <span class="number">2</span>].val + a[id * <span class="number">2</span> + <span class="number">1</span>].val) % <span class="number">2</span>; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">settag</span><span class="params">(<span class="type">int</span> id, ll t)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        a[id].val = (a[id].val + t * (a[id].sz)) % <span class="number">2</span>;</span><br><span class="line">        a[id].t = (a[id].t + t) % <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[id].t)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">settag</span>(id * <span class="number">2</span>, a[id].t);</span><br><span class="line">            <span class="built_in">settag</span>(id * <span class="number">2</span> + <span class="number">1</span>, a[id].t);</span><br><span class="line">            a[id].t = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, vector&lt;<span class="type">int</span>&gt; &amp;arr)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        a[id].t = <span class="number">0</span>;</span><br><span class="line">        a[id].sz = r - l + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (l == r)</span><br><span class="line">            a[id].val = arr[l];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">build</span>(id * <span class="number">2</span>, l, mid, arr);</span><br><span class="line">            <span class="built_in">build</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, arr);</span><br><span class="line">            <span class="built_in">update</span>(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr, ll t)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == ql &amp;&amp; r == qr)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">settag</span>(id, t);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">pushdown</span>(id);</span><br><span class="line">        <span class="keyword">if</span> (qr &lt;= mid)</span><br><span class="line">            <span class="built_in">modify</span>(id * <span class="number">2</span>, l, mid, ql, qr, t);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ql &gt; mid)</span><br><span class="line">            <span class="built_in">modify</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, ql, qr, t);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">modify</span>(id * <span class="number">2</span>, l, mid, ql, mid, t);</span><br><span class="line">            <span class="built_in">modify</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, mid + <span class="number">1</span>, qr, t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">update</span>(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == ql &amp;&amp; r == qr)</span><br><span class="line">            <span class="keyword">return</span> a[id].val;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">pushdown</span>(id);</span><br><span class="line">        <span class="keyword">if</span> (qr &lt;= mid)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(id * <span class="number">2</span>, l, mid, ql, qr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ql &gt; mid)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, ql, qr);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> (<span class="built_in">query</span>(id * <span class="number">2</span>, l, mid, ql, mid) + <span class="built_in">query</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, mid + <span class="number">1</span>, qr)) % <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">BIT</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;ll&gt; a;</span><br><span class="line">    <span class="built_in">BIT</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n), <span class="built_in">a</span>(n + <span class="number">1</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lb</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123; <span class="keyword">return</span> x &amp; -x; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> n, vector&lt;<span class="type">int</span>&gt; &amp;s)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i] += s[i];</span><br><span class="line">            <span class="type">int</span> fa = i + <span class="built_in">lb</span>(i);</span><br><span class="line">            <span class="keyword">if</span> (fa &lt;= n)</span><br><span class="line">                a[fa] += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, ll y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (; x &lt;= n; x += <span class="built_in">lb</span>(x))</span><br><span class="line">            a[x] += y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ll res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; x; x ^= <span class="built_in">lb</span>(x))</span><br><span class="line">            res += a[x];</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">search</span><span class="params">(ll s)</span> <span class="comment">// 第一个小于等于s的位置</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> pos = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">20</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">            <span class="keyword">if</span> (pos + (<span class="number">1</span> &lt;&lt; j) &lt;= n &amp;&amp; a[pos + (<span class="number">1</span> &lt;&lt; j)] &lt;= s)</span><br><span class="line">            &#123;</span><br><span class="line">                pos += (<span class="number">1</span> &lt;&lt; j);</span><br><span class="line">                s -= a[pos];</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> pos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q &gt;&gt; s;</span><br><span class="line">    s = <span class="string">&#x27;#&#x27;</span> + s;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        a[i] = s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="function">BIT <span class="title">bit</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="function">segtree <span class="title">seg</span><span class="params">(n)</span></span>;</span><br><span class="line">    seg.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n, a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (a[i] == a[i - <span class="number">1</span>])</span><br><span class="line">            bit.<span class="built_in">add</span>(i - <span class="number">1</span>, <span class="number">1</span>), bit.<span class="built_in">add</span>(i, <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> opt, l, r;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; opt &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            seg.<span class="built_in">modify</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (l &gt; <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> fi = seg.<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, l - <span class="number">1</span>, l - <span class="number">1</span>);</span><br><span class="line">                <span class="type">int</span> se = seg.<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, l);</span><br><span class="line">                <span class="keyword">if</span> (fi != se)</span><br><span class="line">                    bit.<span class="built_in">add</span>(l - <span class="number">1</span>, <span class="number">-1</span>), bit.<span class="built_in">add</span>(l, <span class="number">-1</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    bit.<span class="built_in">add</span>(l - <span class="number">1</span>, <span class="number">1</span>), bit.<span class="built_in">add</span>(l, <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (r &lt; n)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> fi = seg.<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, r, r);</span><br><span class="line">                <span class="type">int</span> se = seg.<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, r + <span class="number">1</span>, r + <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (fi != se)</span><br><span class="line">                    bit.<span class="built_in">add</span>(r, <span class="number">-1</span>), bit.<span class="built_in">add</span>(r + <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    bit.<span class="built_in">add</span>(r, <span class="number">1</span>), bit.<span class="built_in">add</span>(r + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (r - l &gt; <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> chk = bit.<span class="built_in">query</span>(r - <span class="number">1</span>) - bit.<span class="built_in">query</span>(l);</span><br><span class="line">                cout &lt;&lt; (chk ? <span class="string">&quot;No&quot;</span> : <span class="string">&quot;Yes&quot;</span>) &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (l == r)</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; (seg.<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, l) != seg.<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, r, r) ? <span class="string">&quot;Yes&quot;</span> : <span class="string">&quot;No&quot;</span>) &lt;&lt; endl;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>发现点只会从w大的到w小的,这样原图就变成了一个DAG,在这个图上对每个点跑一边01背包即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">v</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">d</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">f</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">dp</span><span class="params">(N, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;pii&gt; <span class="title">edge</span><span class="params">(m)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[u, v] : edge)</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; v[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> [x, y] : edge)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (v[x] &gt; v[y])</span><br><span class="line">            e[x].<span class="built_in">push_back</span>(y), d[y]++;</span><br><span class="line">        <span class="keyword">if</span> (v[x] &lt; v[y])</span><br><span class="line">            e[y].<span class="built_in">push_back</span>(x), d[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ord;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (!d[i])</span><br><span class="line">            q.<span class="built_in">push</span>(i);</span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        ord.<span class="built_in">push_back</span>(t);</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[t])</span><br><span class="line">            <span class="keyword">if</span> (--d[to] == <span class="number">0</span>)</span><br><span class="line">                q.<span class="built_in">push</span>(to);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">reverse</span>(ord.<span class="built_in">begin</span>(), ord.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> u : ord)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= v[u]; i++)</span><br><span class="line">            dp[i] = <span class="number">0</span>;</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[u])</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = v[u] - <span class="number">1</span>; i &gt;= v[to]; i--)</span><br><span class="line">                dp[i] = <span class="built_in">max</span>(dp[i], dp[i - v[to]] + f[to]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; v[u]; i++)</span><br><span class="line">            f[u] = <span class="built_in">max</span>(f[u], dp[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        ans += f[i] * a[i];</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>设s为a的前缀和,那么有:</p>
<p>$ ave&#x3D;\frac{s[r]-s[k]}{r-k+1} $</p>
<p>发现这个式子的数学含义表示斜率,也就是说,要求出一个r,使得斜率最大</p>
<p>将数组反转,题目转化为:</p>
<p>$ ave&#x3D;\frac{s[k]-s[r]}{k-r+1} $</p>
<p>用单调栈维护每个位置</p>
<p>只要当前i与q[r]的斜率小于等于i与q[r-1]的斜率,那么就可以删除r(上凸壳)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">s</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">reverse</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">q</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="type">int</span> r = <span class="number">-1</span>;</span><br><span class="line">    q[++r] = <span class="number">0</span>;</span><br><span class="line">    vector&lt;<span class="type">double</span>&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (r &gt; <span class="number">0</span> &amp;&amp; (s[i] - s[q[r]]) * (q[r] - q[r - <span class="number">1</span>]) &lt;= (s[q[r]] - s[q[r - <span class="number">1</span>]]) * (i - q[r]))</span><br><span class="line">            r--;</span><br><span class="line">        ans.<span class="built_in">push_back</span>(<span class="number">1.0</span> * (s[i] - s[q[r]]) / (i - q[r]));</span><br><span class="line">        q[++r] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : ans)</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Atcoder</category>
      </categories>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 344</title>
    <url>/2024/03/09/AtCoder%20Beginner%20Contest%20344/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">-1</span>, r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;|&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (l == <span class="number">-1</span>)</span><br><span class="line">                l = i;</span><br><span class="line">            r = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= r &amp;&amp; i &gt;= l)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        cout &lt;&lt; s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; x)</span><br><span class="line">        a.<span class="built_in">push_back</span>(x);</span><br><span class="line">    <span class="built_in">reverse</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : a)</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> x;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            a[i].<span class="built_in">push_back</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">bool</span>&gt; mp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : a[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;j : a[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;k : a[<span class="number">2</span>])</span><br><span class="line">                mp[i + j + k] = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> q;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        cout &lt;&lt; (mp[x] ? <span class="string">&quot;Yes&quot;</span> : <span class="string">&quot;No&quot;</span>) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>暴力dp</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    string t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    t = <span class="string">&#x27;#&#x27;</span> + t;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">f</span><span class="params">(t.size() + <span class="number">10</span>, <span class="number">1e9</span>)</span>, <span class="title">dp</span><span class="params">(t.size() + <span class="number">10</span>, <span class="number">1e9</span>)</span>, <span class="title">mi</span><span class="params">(t.size() + <span class="number">10</span>, <span class="number">1e9</span>)</span></span>;</span><br><span class="line">    f[<span class="number">0</span>] = dp[<span class="number">0</span>] = mi[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; t.<span class="built_in">size</span>(); j++)</span><br><span class="line">            mi[j] = f[j];</span><br><span class="line">        <span class="type">int</span> m;</span><br><span class="line">        cin &gt;&gt; m;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            string s;</span><br><span class="line">            cin &gt;&gt; s;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt; t.<span class="built_in">size</span>(); k++)</span><br><span class="line">                dp[k] = f[k];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = t.<span class="built_in">size</span>() - <span class="number">1</span>; k &gt;= <span class="number">0</span>; k--)</span><br><span class="line">                <span class="keyword">if</span> (k + s.<span class="built_in">size</span>() - <span class="number">1</span> &lt; t.<span class="built_in">size</span>() &amp;&amp; t.<span class="built_in">substr</span>(k, s.<span class="built_in">size</span>()) == s)</span><br><span class="line">                    dp[k + s.<span class="built_in">size</span>() - <span class="number">1</span>] = <span class="built_in">min</span>(dp[k + s.<span class="built_in">size</span>() - <span class="number">1</span>], dp[k - <span class="number">1</span>] + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt; t.<span class="built_in">size</span>(); k++)</span><br><span class="line">                mi[k] = <span class="built_in">min</span>(mi[k], dp[k]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">swap</span>(mi, f);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; (f[t.<span class="built_in">size</span>() - <span class="number">1</span>] == <span class="number">1e9</span> ? <span class="number">-1</span> : f[t.<span class="built_in">size</span>() - <span class="number">1</span>]) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>用map模拟双链表</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    map&lt;ll, pll&gt; mp;</span><br><span class="line">    set&lt;pll&gt; s;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    a[<span class="number">0</span>] = <span class="number">-1</span>, a[n + <span class="number">1</span>] = <span class="number">-2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        mp[a[i]] = &#123;a[i - <span class="number">1</span>], a[i + <span class="number">1</span>]&#125;;</span><br><span class="line">    mp[<span class="number">-1</span>] = &#123;<span class="number">0</span>, a[<span class="number">1</span>]&#125;;</span><br><span class="line">    mp[<span class="number">-2</span>] = &#123;a[n], <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> q;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    ll opt, x, y;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; opt &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; y;</span><br><span class="line">            mp[y] = &#123;x, mp[x].r&#125;;</span><br><span class="line">            mp[mp[x].r].l = y;</span><br><span class="line">            mp[x].r = y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ll pre = mp[x].l;</span><br><span class="line">            ll suf = mp[x].r;</span><br><span class="line">            mp[pre].r = suf;</span><br><span class="line">            mp[suf].l = pre;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;ll&gt; all;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = mp[<span class="number">-1</span>].r; i &gt;= <span class="number">0</span>; i = mp[i].r)</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Atcoder</category>
      </categories>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 343</title>
    <url>/2024/03/02/AtCoder%20Beginner%20Contest%20343/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (i != a + b)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">e</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> x;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            <span class="keyword">if</span> (x)</span><br><span class="line">                e[i].<span class="built_in">push_back</span>(j);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">sort</span>(e[i].<span class="built_in">begin</span>(), e[i].<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> to : e[i])</span><br><span class="line">            cout &lt;&lt; to &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, ans = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">auto</span> chk = [&amp;](ll x) -&gt; <span class="type">bool</span></span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">        <span class="keyword">while</span> (x)</span><br><span class="line">            a.<span class="built_in">push_back</span>(x % <span class="number">10</span>), x /= <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = a.<span class="built_in">size</span>() - <span class="number">1</span>; i &lt; j; i++, j--)</span><br><span class="line">            <span class="keyword">if</span> (a[i] != a[j])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i * i * i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">chk</span>(i * i * i))</span><br><span class="line">            ans = i * i * i;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, t;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; t;</span><br><span class="line">    multiset&lt;ll&gt; s;</span><br><span class="line">    map&lt;ll, ll&gt; mp;</span><br><span class="line">    mp[<span class="number">0</span>] = n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">sc</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    s.<span class="built_in">insert</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a, b;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        mp[sc[a]]--;</span><br><span class="line">        <span class="keyword">if</span> (mp[sc[a]] == <span class="number">0</span>)</span><br><span class="line">            s.<span class="built_in">erase</span>(sc[a]);</span><br><span class="line">        sc[a] += b;</span><br><span class="line">        mp[sc[a]]++;</span><br><span class="line">        <span class="keyword">if</span> (mp[sc[a]] == <span class="number">1</span>)</span><br><span class="line">            s.<span class="built_in">insert</span>(sc[a]);</span><br><span class="line">        cout &lt;&lt; s.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>先假设第一个点在(0,0,0)</p>
<p>那么其余两个的范围一定在(-7,7),更大或更小都是一样的</p>
<p>然后暴力枚举计算即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(<span class="number">4</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">        cin &gt;&gt; v[i];</span><br><span class="line">    <span class="keyword">auto</span> f2 = [&amp;](<span class="type">int</span> a1, <span class="type">int</span> b1, <span class="type">int</span> c1, <span class="type">int</span> a2, <span class="type">int</span> b2, <span class="type">int</span> c2) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = <span class="built_in">max</span>(<span class="number">0</span>, <span class="built_in">min</span>(a1 + <span class="number">7</span>, a2 + <span class="number">7</span>) - <span class="built_in">max</span>(a1, a2));</span><br><span class="line">        <span class="type">int</span> y = <span class="built_in">max</span>(<span class="number">0</span>, <span class="built_in">min</span>(b1 + <span class="number">7</span>, b2 + <span class="number">7</span>) - <span class="built_in">max</span>(b1, b2));</span><br><span class="line">        <span class="type">int</span> z = <span class="built_in">max</span>(<span class="number">0</span>, <span class="built_in">min</span>(c1 + <span class="number">7</span>, c2 + <span class="number">7</span>) - <span class="built_in">max</span>(c1, c2));</span><br><span class="line">        <span class="keyword">return</span> x * y * z;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> f3 = [&amp;](<span class="type">int</span> a1, <span class="type">int</span> b1, <span class="type">int</span> c1, <span class="type">int</span> a2, <span class="type">int</span> b2, <span class="type">int</span> c2, <span class="type">int</span> a3, <span class="type">int</span> b3, <span class="type">int</span> c3) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = <span class="built_in">max</span>(<span class="number">0</span>, <span class="built_in">min</span>(&#123;a1 + <span class="number">7</span>, a2 + <span class="number">7</span>, a3 + <span class="number">7</span>&#125;) - <span class="built_in">max</span>(&#123;a1, a2, a3&#125;));</span><br><span class="line">        <span class="type">int</span> y = <span class="built_in">max</span>(<span class="number">0</span>, <span class="built_in">min</span>(&#123;b1 + <span class="number">7</span>, b2 + <span class="number">7</span>, b3 + <span class="number">7</span>&#125;) - <span class="built_in">max</span>(&#123;b1, b2, b3&#125;));</span><br><span class="line">        <span class="type">int</span> z = <span class="built_in">max</span>(<span class="number">0</span>, <span class="built_in">min</span>(&#123;c1 + <span class="number">7</span>, c2 + <span class="number">7</span>, c3 + <span class="number">7</span>&#125;) - <span class="built_in">max</span>(&#123;c1, c2, c3&#125;));</span><br><span class="line">        <span class="keyword">return</span> x * y * z;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> a2 = <span class="number">-7</span>; a2 &lt;= <span class="number">7</span>; a2++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> b2 = <span class="number">-7</span>; b2 &lt;= <span class="number">7</span>; b2++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> c2 = <span class="number">-7</span>; c2 &lt;= <span class="number">7</span>; c2++)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> a3 = <span class="number">-7</span>; a3 &lt;= <span class="number">7</span>; a3++)</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> b3 = <span class="number">-7</span>; b3 &lt;= <span class="number">7</span>; b3++)</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">int</span> c3 = <span class="number">-7</span>; c3 &lt;= <span class="number">7</span>; c3++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="type">int</span> or3 = <span class="built_in">f3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, a2, b2, c2, a3, b3, c3);</span><br><span class="line">                            <span class="type">int</span> or2 = <span class="built_in">f2</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, a2, b2, c2) + <span class="built_in">f2</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, a3, b3, c3) + <span class="built_in">f2</span>(a3, b3, c3, a2, b2, c2) - <span class="number">3</span> * or3;</span><br><span class="line">                            <span class="type">int</span> or1 = <span class="number">7</span> * <span class="number">7</span> * <span class="number">7</span> * <span class="number">3</span> - <span class="number">2</span> * or2 - <span class="number">3</span> * or3;</span><br><span class="line">                            <span class="keyword">if</span> (v[<span class="number">1</span>] == or1 &amp;&amp; v[<span class="number">2</span>] == or2 &amp;&amp; v[<span class="number">3</span>] == or3)</span><br><span class="line">                            &#123;</span><br><span class="line">                                cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">                                cout &lt;&lt; <span class="string">&quot;0 0 0 &quot;</span> &lt;&lt; a2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; c2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; a3 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b3 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; c3 &lt;&lt; endl;</span><br><span class="line">                                <span class="keyword">return</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>用线段树维护最大值和次大值以及它们的数量这四个值,只需要单点修改+区间查询</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">7e7</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">segtree</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">    &#123;</span><br><span class="line">        array&lt;<span class="type">int</span>, 4&gt; val;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;node&gt; a;</span><br><span class="line">    <span class="built_in">segtree</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n * <span class="number">4</span> + <span class="number">10</span>), <span class="built_in">a</span>(n + <span class="number">1</span>) &#123;&#125;</span><br><span class="line">    <span class="function">array&lt;<span class="type">int</span>, 4&gt; <span class="title">merge</span><span class="params">(array&lt;<span class="type">int</span>, <span class="number">4</span>&gt; x, array&lt;<span class="type">int</span>, <span class="number">4</span>&gt; y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        array&lt;<span class="type">int</span>, 4&gt; ans = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">if</span> (x[<span class="number">0</span>] &gt; y[<span class="number">0</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            ans[<span class="number">0</span>] = x[<span class="number">0</span>], ans[<span class="number">1</span>] = x[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (x[<span class="number">2</span>] &gt; y[<span class="number">0</span>])</span><br><span class="line">                ans[<span class="number">2</span>] = x[<span class="number">2</span>], ans[<span class="number">3</span>] = x[<span class="number">3</span>];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (x[<span class="number">2</span>] == y[<span class="number">0</span>])</span><br><span class="line">                ans[<span class="number">2</span>] = x[<span class="number">2</span>], ans[<span class="number">3</span>] = x[<span class="number">3</span>] + y[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ans[<span class="number">2</span>] = y[<span class="number">0</span>], ans[<span class="number">3</span>] = y[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (x[<span class="number">0</span>] == y[<span class="number">0</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            ans[<span class="number">0</span>] = x[<span class="number">0</span>], ans[<span class="number">1</span>] = x[<span class="number">1</span>] + y[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (x[<span class="number">2</span>] &gt; y[<span class="number">2</span>])</span><br><span class="line">                ans[<span class="number">2</span>] = x[<span class="number">2</span>], ans[<span class="number">3</span>] = x[<span class="number">3</span>];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (x[<span class="number">2</span>] == y[<span class="number">2</span>])</span><br><span class="line">                ans[<span class="number">2</span>] = x[<span class="number">2</span>], ans[<span class="number">3</span>] = x[<span class="number">3</span>] + y[<span class="number">3</span>];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ans[<span class="number">2</span>] = y[<span class="number">2</span>], ans[<span class="number">3</span>] = y[<span class="number">3</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans[<span class="number">0</span>] = y[<span class="number">0</span>], ans[<span class="number">1</span>] = y[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (x[<span class="number">0</span>] &gt; y[<span class="number">2</span>])</span><br><span class="line">                ans[<span class="number">2</span>] = x[<span class="number">0</span>], ans[<span class="number">3</span>] = x[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (x[<span class="number">0</span>] == y[<span class="number">2</span>])</span><br><span class="line">                ans[<span class="number">2</span>] = x[<span class="number">0</span>], ans[<span class="number">3</span>] = x[<span class="number">1</span>] + y[<span class="number">3</span>];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ans[<span class="number">2</span>] = y[<span class="number">2</span>], ans[<span class="number">3</span>] = y[<span class="number">3</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        a[id].val = <span class="built_in">merge</span>(a[id * <span class="number">2</span>].val, a[id * <span class="number">2</span> + <span class="number">1</span>].val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, vector&lt;<span class="type">int</span>&gt; &amp;arr)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == r)</span><br><span class="line">        &#123;</span><br><span class="line">            a[id].val = &#123;arr[l], <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">build</span>(id * <span class="number">2</span>, l, mid, arr);</span><br><span class="line">            <span class="built_in">build</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, arr);</span><br><span class="line">            <span class="built_in">update</span>(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> pos, <span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == r) <span class="comment">// 叶子节点</span></span><br><span class="line">            a[id].val[<span class="number">0</span>] = t;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (pos &lt;= mid)</span><br><span class="line">                <span class="built_in">change</span>(id * <span class="number">2</span>, l, mid, pos, t);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">change</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, pos, t);</span><br><span class="line">            <span class="built_in">update</span>(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">array&lt;<span class="type">int</span>, 4&gt; <span class="title">query</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (r &lt; ql || l &gt; qr)</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">if</span> (l &gt;= ql &amp;&amp; r &lt;= qr)</span><br><span class="line">            <span class="keyword">return</span> a[id].val;</span><br><span class="line">        array&lt;<span class="type">int</span>, 4&gt; ans = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ql &lt;= mid)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> res = <span class="built_in">query</span>(id * <span class="number">2</span>, l, mid, ql, qr);</span><br><span class="line">            ans = <span class="built_in">merge</span>(ans, res);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (qr &gt; mid)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> res = <span class="built_in">query</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, ql, qr);</span><br><span class="line">            ans = <span class="built_in">merge</span>(ans, res);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="function">segtree <span class="title">seg</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    seg.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n, a);</span><br><span class="line">    <span class="type">int</span> opt, l, r;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; opt &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>)</span><br><span class="line">            seg.<span class="built_in">change</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> res = seg.<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r);</span><br><span class="line">            cout &lt;&lt; res[<span class="number">3</span>] &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(5);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Atcoder</category>
      </categories>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 345</title>
    <url>/2024/03/16/AtCoder%20Beginner%20Contest%20345/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">&#x27;&lt;&#x27;</span> &amp;&amp; s.<span class="built_in">back</span>() == <span class="string">&#x27;&gt;&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : s)</span><br><span class="line">            cnt += i == <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (cnt == s.<span class="built_in">size</span>() - <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll x;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ll ans = x / <span class="number">10</span>;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; (x - <span class="number">1</span>) / <span class="number">10</span> + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>如果存在两个一样的,就可以维持原状</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    map&lt;<span class="type">char</span>, ll&gt; mp;</span><br><span class="line">    ll ans = <span class="number">0</span>, sum = <span class="number">0</span>, add = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (mp[i])</span><br><span class="line">            add = <span class="number">1</span>;</span><br><span class="line">        ans += sum - mp[i];</span><br><span class="line">        mp[i]++, sum++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; ans + add &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Atcoder</category>
      </categories>
  </entry>
  <entry>
    <title>AtCoder Beginner Contest 346</title>
    <url>/2024/03/23/AtCoder%20Beginner%20Contest%20346/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">        cout &lt;&lt; a[i] * a[i + <span class="number">1</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s = <span class="string">&quot;wbwbwwbwbwbw&quot;</span>;</span><br><span class="line">    <span class="keyword">while</span> (s.<span class="built_in">size</span>() &lt;= <span class="number">200</span>)</span><br><span class="line">        s += s;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">cnt</span>(s.<span class="built_in">size</span>() + <span class="number">10</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">2</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)</span><br><span class="line">            cnt[i + <span class="number">1</span>][j] += cnt[i][j];</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">            cnt[i + <span class="number">1</span>][<span class="number">0</span>]++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cnt[i + <span class="number">1</span>][<span class="number">1</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    map&lt;pii, <span class="type">bool</span>&gt; mp;</span><br><span class="line">    mp[&#123;<span class="number">0</span>, <span class="number">0</span>&#125;] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= s.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (mp.<span class="built_in">count</span>(&#123;cnt[i][<span class="number">0</span>] - a, cnt[i][<span class="number">1</span>] - b&#125;))</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mp[&#123;cnt[i][<span class="number">0</span>], cnt[i][<span class="number">1</span>]&#125;] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    ll sum = k * (<span class="number">1</span> + k) / <span class="number">2</span>;</span><br><span class="line">    map&lt;ll, <span class="type">bool</span>&gt; mp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt;= k)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!mp[a[i]])</span><br><span class="line">                mp[a[i]] = <span class="number">1</span>, sum -= a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>dp分别计算前缀后缀两两不同的最小代价</p>
<p>然后枚举位置</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">char</span>&gt; <span class="title">s</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">c</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    vector&lt;vector&lt;ll&gt;&gt; <span class="built_in">pre</span>(n + <span class="number">10</span>, <span class="built_in">vector</span>&lt;ll&gt;(<span class="number">2</span>, <span class="number">1e18</span>));</span><br><span class="line">    vector&lt;vector&lt;ll&gt;&gt; <span class="built_in">suf</span>(n + <span class="number">10</span>, <span class="built_in">vector</span>&lt;ll&gt;(<span class="number">2</span>, <span class="number">1e18</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; s[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; c[i];</span><br><span class="line"></span><br><span class="line">    pre[<span class="number">0</span>][<span class="number">0</span>] = pre[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        pre[i][<span class="number">0</span>] = pre[i - <span class="number">1</span>][<span class="number">1</span>] + c[i] * (s[i] == <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        pre[i][<span class="number">1</span>] = pre[i - <span class="number">1</span>][<span class="number">0</span>] + c[i] * (s[i] == <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    suf[n + <span class="number">1</span>][<span class="number">0</span>] = suf[n + <span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        suf[i][<span class="number">0</span>] = suf[i + <span class="number">1</span>][<span class="number">1</span>] + c[i] * (s[i] == <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        suf[i][<span class="number">1</span>] = suf[i + <span class="number">1</span>][<span class="number">0</span>] + c[i] * (s[i] == <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">1e18</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, pre[i][<span class="number">0</span>] + suf[i + <span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, pre[i][<span class="number">1</span>] + suf[i + <span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>先把所有操作存下来,从后往前模拟,因为后涂的会覆盖先涂的</p>
<p>用树状数组维护每行&#x2F;列此时有多少个格子是未被染色的</p>
<p>涂行&#x2F;列时只需要对列&#x2F;行进行一个区间-1,然后再把自己清0</p>
<p>注意可能会出现负数,要判一下</p>
<p>有个类似的题:<a href="https://www.luogu.com.cn/problem/P9715">P9715 「QFOI R1」头</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">BIT</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;ll&gt; a;</span><br><span class="line">    <span class="built_in">BIT</span>(<span class="type">int</span> n) : <span class="built_in">n</span>(n + <span class="number">10</span>), <span class="built_in">a</span>(n + <span class="number">100</span>, <span class="number">0</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lb</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123; <span class="keyword">return</span> x &amp; -x; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, ll y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (; x &lt;= n; x += <span class="built_in">lb</span>(x))</span><br><span class="line">            a[x] += y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!x)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0ll</span>;</span><br><span class="line">        ll res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; x; x ^= <span class="built_in">lb</span>(x))</span><br><span class="line">            res += a[x];</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll h, w, m;</span><br><span class="line">    cin &gt;&gt; h &gt;&gt; w &gt;&gt; m;</span><br><span class="line">    vector&lt;array&lt;<span class="type">int</span>, 3&gt;&gt; <span class="built_in">opt</span>(m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[t, a, x] : opt)</span><br><span class="line">        cin &gt;&gt; t &gt;&gt; a &gt;&gt; x;</span><br><span class="line">    <span class="built_in">reverse</span>(opt.<span class="built_in">begin</span>(), opt.<span class="built_in">end</span>());</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">mp</span><span class="params">(N, <span class="number">0</span>)</span></span>;</span><br><span class="line">    mp[<span class="number">0</span>] = h * w;</span><br><span class="line">    <span class="function">BIT <span class="title">row</span><span class="params">(h)</span>, <span class="title">col</span><span class="params">(w)</span></span>;</span><br><span class="line">    row.<span class="built_in">add</span>(<span class="number">1</span>, w), row.<span class="built_in">add</span>(h + <span class="number">1</span>, -w);</span><br><span class="line">    col.<span class="built_in">add</span>(<span class="number">1</span>, h), col.<span class="built_in">add</span>(w + <span class="number">1</span>, -h);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> [t, p, x] : opt)</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ll num = row.<span class="built_in">query</span>(p);</span><br><span class="line">            <span class="keyword">if</span> (num &lt;= <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                mp[x] += num;</span><br><span class="line">                mp[<span class="number">0</span>] -= num;</span><br><span class="line">                col.<span class="built_in">add</span>(<span class="number">1</span>, <span class="number">-1</span>), col.<span class="built_in">add</span>(w + <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">                row.<span class="built_in">add</span>(p, -num), row.<span class="built_in">add</span>(p + <span class="number">1</span>, num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ll num = col.<span class="built_in">query</span>(p);</span><br><span class="line">            <span class="keyword">if</span> (num &lt;= <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                mp[x] += num;</span><br><span class="line">                mp[<span class="number">0</span>] -= num;</span><br><span class="line">                row.<span class="built_in">add</span>(<span class="number">1</span>, <span class="number">-1</span>), row.<span class="built_in">add</span>(h + <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">                col.<span class="built_in">add</span>(p, -num), col.<span class="built_in">add</span>(p + <span class="number">1</span>, num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    vector&lt;pll&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2e5</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (mp[i])</span><br><span class="line">            ans.<span class="built_in">push_back</span>(&#123;i, mp[i]&#125;);</span><br><span class="line">    cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> [x, y] : ans)</span><br><span class="line">        cout &lt;&lt; x &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; y &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Atcoder</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 922 (Div 2)</title>
    <url>/2024/01/01/Codeforces%20Round%20922%20(Div%202)/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>注意到,只有a,b某一位上不相等是,才可能对答案有贡献</p>
<p>设a&gt;b</p>
<p>所以考虑从高往低位贪心</p>
<p>但是有一种情况,在能操作的最高位操作后,a&lt;b了,此时有可能</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, m, r;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; r;</span><br><span class="line">    <span class="keyword">auto</span> cal = [&amp;](<span class="type">int</span> st) -&gt; ll</span><br><span class="line">    &#123;</span><br><span class="line">        ll a = n, b = m, ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = st; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (((a &gt;&gt; i) &amp; <span class="number">1</span>) != ((b &gt;&gt; i) &amp; <span class="number">1</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                ll pre = <span class="built_in">abs</span>(a - b);</span><br><span class="line">                ll now = <span class="built_in">abs</span>((a ^ (<span class="number">1ll</span> &lt;&lt; i)) - (b ^ (<span class="number">1ll</span> &lt;&lt; i)));</span><br><span class="line">                <span class="keyword">if</span> ((ans | <span class="number">1ll</span> &lt;&lt; i) &lt;= r &amp;&amp; now &lt; pre)</span><br><span class="line">                &#123;</span><br><span class="line">                    ans |= (<span class="number">1ll</span> &lt;&lt; i);</span><br><span class="line">                    a ^= (<span class="number">1ll</span> &lt;&lt; i), b ^= (<span class="number">1ll</span> &lt;&lt; i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">abs</span>(a - b);</span><br><span class="line">    &#125;;</span><br><span class="line">    ll ans = <span class="built_in">abs</span>(n - m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">62</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (((n &gt;&gt; i) &amp; <span class="number">1</span>) != ((m &gt;&gt; i) &amp; <span class="number">1</span>) &amp;&amp; (<span class="number">1ll</span> &lt;&lt; i) &lt;= r)</span><br><span class="line">        &#123;</span><br><span class="line">            ans = <span class="built_in">min</span>(<span class="built_in">cal</span>(i - <span class="number">1</span>), <span class="built_in">cal</span>(i));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>The 13th Shandong ICPC Provincial Collegiate Programming Contest</title>
    <url>/2024/03/29/The%2013th%20Shandong%20ICPC%20Provincial%20Collegiate%20Programming%20Contest/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>模拟</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">long</span> <span class="type">long</span>, <span class="type">long</span> <span class="type">long</span>&gt; pll;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="function">std::vector&lt;pll&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[x, y] : a)</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">    ll got = <span class="number">0</span>, lst = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[x, y] : a)</span><br><span class="line">    &#123;</span><br><span class="line">        got += (x - lst) * k;</span><br><span class="line">        <span class="keyword">if</span> (got &gt;= y)</span><br><span class="line">            got -= y;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        lst = x;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; _;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;to be update</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>模拟</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">long</span> <span class="type">long</span>, <span class="type">long</span> <span class="type">long</span>&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line">set&lt;pii&gt; ne[N];</span><br><span class="line">vector&lt;pii&gt; a[N];</span><br><span class="line"><span class="type">int</span> fob[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> g, n, req, add, cnt = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">	cin &gt;&gt; g;</span><br><span class="line">	map&lt;ll, ll&gt; got;</span><br><span class="line">	map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">	vector&lt;<span class="type">int</span>&gt;s;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= g; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> x, y;</span><br><span class="line">		cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">		<span class="keyword">if</span> (!mp.<span class="built_in">count</span>(x))</span><br><span class="line">			mp[x] = ++cnt;</span><br><span class="line">		x = mp[x];</span><br><span class="line">		got[x] = y;</span><br><span class="line">	&#125;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cin &gt;&gt; req;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= req; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> x, y;</span><br><span class="line">			cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">			<span class="keyword">if</span> (!mp.<span class="built_in">count</span>(x))</span><br><span class="line">				mp[x] = ++cnt;</span><br><span class="line">			x = mp[x];</span><br><span class="line">			<span class="keyword">if</span> (got[x] &lt; y)</span><br><span class="line">				ne[x].<span class="built_in">insert</span>(&#123;y, i&#125;), fob[i]++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (!fob[i])</span><br><span class="line">			s.<span class="built_in">push_back</span>(i);</span><br><span class="line">		cin &gt;&gt; add;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= add; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> x, y;</span><br><span class="line">			cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">			<span class="keyword">if</span> (!mp.<span class="built_in">count</span>(x))</span><br><span class="line">				mp[x] = ++cnt;</span><br><span class="line">			x = mp[x];</span><br><span class="line">			a[i].<span class="built_in">push_back</span>(&#123;x, y&#125;);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (s.<span class="built_in">size</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">auto</span> t = s.<span class="built_in">back</span>();</span><br><span class="line">		s.<span class="built_in">pop_back</span>();</span><br><span class="line">		ans++;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[v, w] : a[t])</span><br><span class="line">		&#123;</span><br><span class="line">			got[v] += w;</span><br><span class="line">			<span class="keyword">while</span> (ne[v].<span class="built_in">size</span>() &amp;&amp; got[v] &gt;= (*ne[v].<span class="built_in">begin</span>()).x)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">auto</span> tmp = *ne[v].<span class="built_in">begin</span>();</span><br><span class="line">				ne[v].<span class="built_in">erase</span>(tmp);</span><br><span class="line">				fob[tmp.y]--;</span><br><span class="line">				<span class="keyword">if</span> (!fob[tmp.y])</span><br><span class="line">					s.<span class="built_in">push_back</span>(tmp.y);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">	<span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">	<span class="keyword">while</span> (_--)</span><br><span class="line">		<span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;to be update</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>二分答案</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">long</span> <span class="type">long</span>, <span class="type">long</span> <span class="type">long</span>&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="function">std::vector&lt;pii&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[v, w] : a)</span><br><span class="line">		cin &gt;&gt; v &gt;&gt; w;</span><br><span class="line">	<span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;pii&gt;());</span><br><span class="line">	<span class="keyword">auto</span> chk = [&amp;](<span class="type">int</span> x)-&gt;<span class="type">bool</span></span><br><span class="line">	&#123;</span><br><span class="line">		multiset&lt;ll&gt;s;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">auto</span> [v, w] : a)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (v &gt;= x)</span><br><span class="line">				s.<span class="built_in">insert</span>(w + v - x);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (s.<span class="built_in">lower_bound</span>(w) != s.<span class="built_in">end</span>())</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">auto</span> it = *s.<span class="built_in">lower_bound</span>(w) ;</span><br><span class="line">					s.<span class="built_in">extract</span>(it);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;;</span><br><span class="line">	<span class="type">int</span> l = <span class="number">1</span>, r = <span class="number">1e9</span> + <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">while</span> (l &lt; r)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">chk</span>(mid))</span><br><span class="line">			l = mid;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			r = mid - <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; l &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">	cin &gt;&gt; _;</span><br><span class="line">	<span class="keyword">while</span> (_--)</span><br><span class="line">		<span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>

<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>注意到能够连边的两个点一定满足$i-j&#x3D;a[i]-a[j]$</p>
<p>移项得到:</p>
<p>$a[i]-i&#x3D;a[j]-j$</p>
<p>将相等的分到一组,然后贪心取大的即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">long</span> <span class="type">long</span>, <span class="type">long</span> <span class="type">long</span>&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ll n, ans = <span class="number">0</span>;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="function">std::vector&lt;pll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, &#123;<span class="number">0</span>, <span class="number">0</span>&#125;)</span></span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cin &gt;&gt; a[i].y;</span><br><span class="line">		a[i].x = a[i].y - i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">	vector&lt;ll&gt;now;</span><br><span class="line">	ll f = a[<span class="number">1</span>].x;</span><br><span class="line">	now.<span class="built_in">push_back</span>(a[<span class="number">1</span>].y);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (a[i].x == f)</span><br><span class="line">			now.<span class="built_in">push_back</span>(a[i].y);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">sort</span>(now.<span class="built_in">begin</span>(), now.<span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;ll&gt;());</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i + <span class="number">1</span> &lt; now.<span class="built_in">size</span>(); i += <span class="number">2</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (now[i] + now[i + <span class="number">1</span>] &gt;= <span class="number">0</span>)</span><br><span class="line">					ans += now[i] + now[i + <span class="number">1</span>] ;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			now.<span class="built_in">clear</span>();</span><br><span class="line">			now.<span class="built_in">push_back</span>(a[i].y);</span><br><span class="line">			f = a[i].x;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(now.<span class="built_in">begin</span>(), now.<span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;ll&gt;());</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i + <span class="number">1</span> &lt; now.<span class="built_in">size</span>(); i += <span class="number">2</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (now[i] + now[i + <span class="number">1</span>] &gt;= <span class="number">0</span>)</span><br><span class="line">			ans += now[i] + now[i + <span class="number">1</span>] ;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">	cin &gt;&gt; _;</span><br><span class="line">	<span class="keyword">while</span> (_--)</span><br><span class="line">		<span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="I"><a href="#I" class="headerlink" title="I"></a>I</h1><p>暴力所有情况,检查是否合法即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">long</span> <span class="type">long</span>, <span class="type">long</span> <span class="type">long</span>&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    std::vector&lt;pii&gt; res;</span><br><span class="line">    res.<span class="built_in">push_back</span>(&#123;<span class="number">1</span>, <span class="number">1</span>&#125;);</span><br><span class="line">    res.<span class="built_in">push_back</span>(&#123;<span class="number">1</span>, <span class="number">4</span>&#125;);</span><br><span class="line">    res.<span class="built_in">push_back</span>(&#123;<span class="number">0</span>, <span class="number">2</span>&#125;);</span><br><span class="line">    res.<span class="built_in">push_back</span>(&#123;<span class="number">0</span>, <span class="number">3</span>&#125;);</span><br><span class="line">    res.<span class="built_in">push_back</span>(&#123;<span class="number">0</span>, <span class="number">5</span>&#125;);</span><br><span class="line">    res.<span class="built_in">push_back</span>(&#123;<span class="number">0</span>, <span class="number">6</span>&#125;);</span><br><span class="line">    <span class="type">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> &amp;dfs, <span class="type">int</span> u, <span class="type">int</span> s1, <span class="type">int</span> s2) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (f)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (u == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s1 == a &amp;&amp; s2 == b)</span><br><span class="line">                f = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[x, y] : res)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (x)</span><br><span class="line">                <span class="built_in">dfs</span>(dfs, u + <span class="number">1</span>, s1 + y, s2);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">dfs</span>(dfs, u + <span class="number">1</span>, s1, s2 + y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">dfs</span>(dfs, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; (f ? <span class="string">&quot; Yes&quot;</span> : <span class="string">&quot;No&quot;</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="L"><a href="#L" class="headerlink" title="L"></a>L</h1><p>因为题目给的是一个正方形网格,所以考虑每次构造都满足正方形</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">long</span> <span class="type">long</span>, <span class="type">long</span> <span class="type">long</span>&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;, dy[] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, x, y;</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; x &gt;&gt; y;</span><br><span class="line">	std::vector&lt;array&lt;<span class="type">int</span>, 4&gt;&gt; ans;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> len = <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> l = y, r = y, u = x, d = x;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> re = len;</span><br><span class="line">		<span class="keyword">if</span> (u - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; l - <span class="number">1</span> &gt;= <span class="number">1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			ans.<span class="built_in">push_back</span>(&#123;u - <span class="number">1</span> , l - <span class="number">1</span>, len, len&#125;), len++;</span><br><span class="line">			u--, l--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (u - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; r + <span class="number">1</span> &lt;= n)</span><br><span class="line">		&#123;</span><br><span class="line">			ans.<span class="built_in">push_back</span>(&#123;u - <span class="number">1</span>, r + <span class="number">1</span>, len, -len&#125;), len++;</span><br><span class="line">			u--, r++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (d + <span class="number">1</span> &lt;= n &amp;&amp; l - <span class="number">1</span> &gt;= <span class="number">1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			ans.<span class="built_in">push_back</span>(&#123;d + <span class="number">1</span>, l - <span class="number">1</span>, -len, len&#125;), len++;</span><br><span class="line">			d++, l--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (d + <span class="number">1</span> &lt;= n &amp;&amp; r + <span class="number">1</span> &lt;= n)</span><br><span class="line">		&#123;</span><br><span class="line">			ans.<span class="built_in">push_back</span>(&#123;d + <span class="number">1</span>, r + <span class="number">1</span>, -len, -len&#125;), len++;</span><br><span class="line">			d++, r++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (re == len)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">auto</span> [a, b, c, d] : ans)</span><br><span class="line">		cout &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; c &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; d &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">	<span class="comment">//cin &gt;&gt; _;</span></span><br><span class="line">	<span class="keyword">while</span> (_--)</span><br><span class="line">		<span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>XCPC</category>
      </categories>
  </entry>
  <entry>
    <title>thinkcell Round 1</title>
    <url>/2024/02/17/thinkcell%20Round%201/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(<span class="number">2</span> * n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i += <span class="number">2</span>)</span><br><span class="line">        ans += <span class="built_in">min</span>(a[i], a[i + <span class="number">1</span>]);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>打表找规律</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, st = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i += <span class="number">2</span>)</span><br><span class="line">        a[i] = ++st;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i += <span class="number">2</span>)</span><br><span class="line">        a[i] = ++st;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>把所有数按照${(a[i]+i,i)}$排序,如果相同就保留第一个,后面相同的–</p>
<p>证明:</p>
<p>对于相同数,实际上把下表最小的数拿走,这样其他相等的数一定被减一了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i], a[i] += i;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;ll&gt;());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        a[i] = <span class="built_in">min</span>(a[i], a[i - <span class="number">1</span>] - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D1"><a href="#D1" class="headerlink" title="D1"></a>D1</h1><p>n不大,所以考虑枚举左右端点进行构造</p>
<p>在q中一个1可以使得对应p中三个位置为1</p>
<p>设q中设为1的位置是i,那么p中[i-1,i+1]的1都被覆盖了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, ans = <span class="number">0</span>;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line">    <span class="keyword">auto</span> cal = [&amp;](<span class="type">int</span> l, <span class="type">int</span> r) -&gt; <span class="type">int</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>, lst = l - <span class="number">1</span>; <span class="comment">// lst为最右边,能被1覆盖的位置</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt;= r; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[i] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i &gt; lst)</span><br><span class="line">                    res++, lst = i + <span class="number">2</span>; <span class="comment">// 把1放在i+1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; s.<span class="built_in">size</span>(); j++)</span><br><span class="line">            ans += <span class="built_in">cal</span>(i, j);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>牛客周赛 Round 35</title>
    <url>/2024/03/03/%E7%89%9B%E5%AE%A2%E5%91%A8%E8%B5%9B%20Round%2035/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == s.<span class="built_in">size</span>() / <span class="number">2</span>)</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; s[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        mp[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a, b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : mp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i.y % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i.y / <span class="number">2</span>; j++)</span><br><span class="line">                a.<span class="built_in">push_back</span>(i.x);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i.y / <span class="number">2</span>; j++)</span><br><span class="line">                b.<span class="built_in">push_back</span>(i.x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : a)</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : b)</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">to be updatevoid <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> r = <span class="built_in">lower_bound</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>(), a[i] + k) - a.<span class="built_in">begin</span>();</span><br><span class="line">        <span class="keyword">if</span> (a[r] &gt; a[i] + k || r &gt; n)</span><br><span class="line">            r--;</span><br><span class="line">        ans = <span class="built_in">max</span>(ans, r - i + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans*<span class="number">1.0</span>/n &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mp</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">ans</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt;= n)</span><br><span class="line">            mp[a[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (mp[i])</span><br><span class="line">            ans[mp[i]] = i;</span><br><span class="line">    <span class="type">int</span> st = <span class="number">1</span>;</span><br><span class="line">    vector&lt;pii&gt; res;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (!ans[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (mp[st])</span><br><span class="line">                st++;</span><br><span class="line">            ans[i] = st, mp[st] = i;</span><br><span class="line">            res.<span class="built_in">push_back</span>(&#123;i, st&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    cout &lt;&lt; res.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> [p, x] : res)</span><br><span class="line">        cout &lt;&lt; p &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>设当前点i距离1号的点的最短路是x</p>
<p>那么i只能和距离大于等于x-1的点连边</p>
<p>先按距离排序,然后连边即可,因为距离从小到大,所以实际上只能连x-1和x</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    m -= n - <span class="number">1</span>;</span><br><span class="line">    <span class="function">vector&lt;pii&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i].x;</span><br><span class="line">        a[i].y = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">d</span>(n + <span class="number">1</span>);</span><br><span class="line">    d[<span class="number">0</span>].<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    vector&lt;pii&gt; ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> [dis, u] = a[i];</span><br><span class="line">        <span class="keyword">if</span> (d[dis - <span class="number">1</span>].<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(&#123;d[dis - <span class="number">1</span>][<span class="number">0</span>], u&#125;);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; d[dis - <span class="number">1</span>].<span class="built_in">size</span>() &amp;&amp; m; j++, m--)</span><br><span class="line">                ans.<span class="built_in">push_back</span>(&#123;d[dis - <span class="number">1</span>][j], u&#125;);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; d[dis].<span class="built_in">size</span>() &amp;&amp; m; j++, m--)</span><br><span class="line">                ans.<span class="built_in">push_back</span>(&#123;d[dis][j], u&#125;);</span><br><span class="line">            d[dis].<span class="built_in">push_back</span>(u);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> [x, y] : ans)</span><br><span class="line">            cout &lt;&lt; x &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; y &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F-G"><a href="#F-G" class="headerlink" title="F&#x2F;G"></a>F&#x2F;G</h1><p>设1,2,3的数量分别为cnt1,cnt2,cnt3</p>
<p>先考虑一个暴力做法</p>
<p>答案就是枚举有多少个2,多少个3,多少个1,计算答案,再乘一个方案数</p>
<p>然后发现1,2,3之间是互不影响的,就可以独立算,这样就从$O(n^3)$变成$O(n)$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">7e7</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> qmi = [&amp;](ll a, ll b) -&gt; ll</span><br><span class="line">    &#123;</span><br><span class="line">        ll res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">                res = res * a % mod;</span><br><span class="line">            b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">            a = a * a % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">fac</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span>, <span class="title">invfac</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        fac[i] = fac[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">    invfac[n] = <span class="built_in">qmi</span>(fac[n], mod - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        invfac[i] = invfac[i + <span class="number">1</span>] * (i + <span class="number">1</span>) % mod;</span><br><span class="line">    <span class="keyword">auto</span> C = [&amp;](<span class="type">int</span> n, <span class="type">int</span> m) -&gt; ll</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> fac[n] * invfac[m] % mod * invfac[n - m] % mod;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">cnt</span><span class="params">(<span class="number">4</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        cnt[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    ll sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= cnt[<span class="number">2</span>]; i++)</span><br><span class="line">        sum = (sum + (i + <span class="number">1</span>) * <span class="built_in">C</span>(cnt[<span class="number">2</span>], i) % mod) % mod;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= cnt[<span class="number">3</span>]; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans += sum * (i + <span class="number">1</span>) % mod * <span class="built_in">C</span>(cnt[<span class="number">3</span>], i) % mod;</span><br><span class="line">        ans %= mod;</span><br><span class="line">    &#125;</span><br><span class="line">    ans = ans * <span class="built_in">qmi</span>(<span class="number">2</span>, cnt[<span class="number">1</span>]) % mod;</span><br><span class="line">    cout &lt;&lt; (ans - <span class="number">1</span> + mod) % mod &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(5);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>nowcoder</category>
      </categories>
  </entry>
  <entry>
    <title>牛客周赛 Round 36</title>
    <url>/2024/03/10/%E7%89%9B%E5%AE%A2%E5%91%A8%E8%B5%9B%20Round%2036/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">        s.<span class="built_in">pop_back</span>();</span><br><span class="line">        cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, x;</span><br><span class="line"></span><br><span class="line">    set&lt;ll&gt; s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; x;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j], x -= a[i][j];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            sum ^= a[i][j];</span><br><span class="line">        s.<span class="built_in">insert</span>(sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            sum ^= a[j][i];</span><br><span class="line">        s.<span class="built_in">insert</span>(sum);</span><br><span class="line">  </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x == <span class="number">0</span> &amp;&amp; s.<span class="built_in">size</span>() == <span class="number">1</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;accepted&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;wrong answer&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>贪心,每次考虑找一个最长的单词</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= <span class="string">&#x27;Z&#x27;</span> &amp;&amp; i &gt;= <span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">            cnt++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (cnt)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (f)</span><br><span class="line">                    ans += (cnt - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (cnt &gt; <span class="number">1</span>)</span><br><span class="line">                        ans += (cnt - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cnt = <span class="number">0</span>;</span><br><span class="line">            f = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cnt)</span><br><span class="line">        ans += (cnt - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>dijkstra板子</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(m + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dist</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m + <span class="number">1</span>, <span class="number">1e9</span>));</span><br><span class="line">    vector&lt;vector&lt;<span class="type">bool</span>&gt;&gt; <span class="built_in">vis</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">bool</span>&gt;(m + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> dij = [&amp;](<span class="type">int</span> x, <span class="type">int</span> y) -&gt; ll</span><br><span class="line">    &#123;</span><br><span class="line">        priority_queue&lt;array&lt;ll, <span class="number">3</span>&gt;, vector&lt;array&lt;ll, <span class="number">3</span>&gt;&gt;, greater&lt;array&lt;ll, <span class="number">3</span>&gt;&gt;&gt; q;</span><br><span class="line">        dist[x][y] = <span class="number">0</span>;</span><br><span class="line">        q.<span class="built_in">push</span>(&#123;<span class="number">0</span>, x, y&#125;);</span><br><span class="line">        <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> [d, x, y] = q.<span class="built_in">top</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span> (vis[x][y])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            vis[x][y] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> xx = x + dx[i], yy = y + dy[i];</span><br><span class="line">                <span class="keyword">if</span> (xx &gt;= <span class="number">1</span> &amp;&amp; xx &lt;= n &amp;&amp; yy &gt;= <span class="number">1</span> &amp;&amp; yy &lt;= m &amp;&amp; a[xx][yy] != a[x][y])</span><br><span class="line">                    <span class="keyword">if</span> (dist[xx][yy] &gt; dist[x][y] + <span class="number">1</span>)</span><br><span class="line">                        dist[xx][yy] = dist[x][y] + <span class="number">1</span>, q.<span class="built_in">push</span>(&#123;dist[xx][yy], xx, yy&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dist[n][m] == <span class="number">1e9</span> ? <span class="number">-1</span> : dist[n][m];</span><br><span class="line">    &#125;;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">dij</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">&#125;to be update</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>1.为了满足不存在绝对众数,所以至少要用三个字符</p>
<p>2.考虑先构造一个跑满n*m-1的情况,然后在某个接近终点的地方设置一条捷径,这样一定符合题意</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(m + <span class="number">1</span>, <span class="string">&#x27;#&#x27;</span>));</span><br><span class="line">    string s = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[j][<span class="number">1</span>] = s[p], p = p + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="number">3</span>)</span><br><span class="line">            p = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= m; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt; n; j++)</span><br><span class="line">            a[j][i] = a[j][i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[<span class="number">1</span>][i] = a[<span class="number">1</span>][i - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">                <span class="keyword">if</span> (s[j] != a[n][i - <span class="number">1</span>] &amp;&amp; s[j] != a[n - <span class="number">1</span>][i])</span><br><span class="line">                    a[n][i] = s[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">                <span class="keyword">if</span> (s[j] != a[<span class="number">1</span>][i - <span class="number">1</span>] &amp;&amp; s[j] != a[<span class="number">2</span>][i])</span><br><span class="line">                    a[<span class="number">1</span>][i] = s[j];</span><br><span class="line"></span><br><span class="line">            a[n][i] = a[n][i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m % <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">            <span class="keyword">if</span> (s[j] != a[n][m] &amp;&amp; s[j] != a[n - <span class="number">1</span>][m - <span class="number">1</span>])</span><br><span class="line">                a[n - <span class="number">1</span>][m] = s[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            cout &lt;&lt; a[i][j];</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>类似寒假营第六场的k,打表发现只有六种情况</p>
<p>用线段树维护每种情况需要的次数,询问时取最小即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;string&gt; s;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    array&lt;<span class="type">int</span>, 6&gt; val;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">segtree</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;node&gt; a;</span><br><span class="line">    <span class="built_in">segtree</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n * <span class="number">4</span> + <span class="number">10</span>), <span class="built_in">a</span>(n + <span class="number">1</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">            a[id].val[i] = a[id * <span class="number">2</span>].val[i] + a[id * <span class="number">2</span> + <span class="number">1</span>].val[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, vector&lt;<span class="type">char</span>&gt; &amp;arr)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == r)</span><br><span class="line">        &#123;</span><br><span class="line">            a[id].c = arr[l];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">                <span class="keyword">if</span> (s[i][l] != a[id].c)</span><br><span class="line">                    a[id].val[i] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    a[id].val[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">build</span>(id * <span class="number">2</span>, l, mid, arr);</span><br><span class="line">            <span class="built_in">build</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, arr);</span><br><span class="line">            <span class="built_in">update</span>(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> pos, <span class="type">char</span> t)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == r) <span class="comment">// 叶子节点</span></span><br><span class="line">        &#123;</span><br><span class="line">            a[id].c = t;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">                <span class="keyword">if</span> (s[i][l] != a[id].c)</span><br><span class="line">                    a[id].val[i] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    a[id].val[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (pos &lt;= mid)</span><br><span class="line">                <span class="built_in">change</span>(id * <span class="number">2</span>, l, mid, pos, t);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">change</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, pos, t);</span><br><span class="line">            <span class="built_in">update</span>(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">array&lt;<span class="type">int</span>, 6&gt; <span class="title">query</span><span class="params">(<span class="type">int</span> id, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ql, <span class="type">int</span> qr)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l == ql &amp;&amp; r == qr)</span><br><span class="line">            <span class="keyword">return</span> a[id].val;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (qr &lt;= mid)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(id * <span class="number">2</span>, l, mid, ql, qr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ql &gt; mid)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">query</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, ql, qr);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> t1 = <span class="built_in">query</span>(id * <span class="number">2</span>, l, mid, ql, mid);</span><br><span class="line">            <span class="keyword">auto</span> t2 = <span class="built_in">query</span>(id * <span class="number">2</span> + <span class="number">1</span>, mid + <span class="number">1</span>, r, mid + <span class="number">1</span>, qr);</span><br><span class="line">            array&lt;<span class="type">int</span>, 6&gt; res;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">                res[i] = t1[i] + t2[i];</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q;</span><br><span class="line">    string st = <span class="string">&quot;red&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">3</span>; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        string tmp = <span class="string">&quot;#&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>, j = k; i &lt;= n; i++, j = (j + <span class="number">1</span>) % <span class="number">3</span>)</span><br><span class="line">            tmp += st[j];</span><br><span class="line">        s.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    st = <span class="string">&quot;der&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">3</span>; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        string tmp = <span class="string">&quot;#&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>, j = k; i &lt;= n; i++, j = (j + <span class="number">1</span>) % <span class="number">3</span>)</span><br><span class="line">            tmp += st[j];</span><br><span class="line">        s.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">char</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line"></span><br><span class="line">    <span class="function">segtree <span class="title">seg</span><span class="params">(n)</span></span>;</span><br><span class="line">    seg.<span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n, a);</span><br><span class="line">    <span class="type">int</span> opt, l, r, x;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; opt;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x &gt;&gt; c;</span><br><span class="line">            seg.<span class="built_in">change</span>(<span class="number">1</span>, <span class="number">1</span>, n, x, c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">            <span class="keyword">auto</span> res = seg.<span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r);</span><br><span class="line">            <span class="type">int</span> ans = <span class="number">1e9</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, res[j]);</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>nowcoder</category>
      </categories>
  </entry>
  <entry>
    <title>牛客周赛 Round 37</title>
    <url>/2024/03/17/%E7%89%9B%E5%AE%A2%E5%91%A8%E8%B5%9B%20Round%2037/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    cout &lt;&lt; (a + b &gt; <span class="number">9</span> ? <span class="string">&quot;No&quot;</span> : <span class="string">&quot;Yes&quot;</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, x, ans = <span class="number">0</span>,still;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">    still=n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &gt;= a[i])</span><br><span class="line">           still=x-a[i], ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;still&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>bfs所有情况,上界直觉上不是很大,最多三层,一定可以得到一个答案</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll x;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    x %= <span class="number">495</span>;</span><br><span class="line">    <span class="keyword">if</span> (!x)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;pair&lt;ll, string&gt;&gt; ans, res;</span><br><span class="line">    ans.<span class="built_in">push_back</span>(&#123;x, <span class="string">&quot;&quot;</span>&#125;);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : ans)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!i.x)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; i.y &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">9</span>; j++)</span><br><span class="line">                res.<span class="built_in">push_back</span>(&#123;(i.x * <span class="number">10</span> + j) % <span class="number">495</span>, i.y + <span class="built_in">char</span>(<span class="string">&#x27;0&#x27;</span> + j)&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">swap</span>(ans, res);</span><br><span class="line">        res.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>删到最后一定只剩一个字符</p>
<p>首先注意到答案的下界是max(s[0],s[-1])</p>
<p>假设可以在中间取一个更大的答案</p>
<p>那么到了后手一定可以把他删去,所以上界也是一样的</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">max</span>(s[<span class="number">0</span>], s.<span class="built_in">back</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>bfs</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> dis[N][N][<span class="number">4</span>];</span><br><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++)</span><br><span class="line">                dis[i][j][k] = <span class="number">1e9</span>;</span><br><span class="line"> </span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(m + <span class="number">1</span>, <span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">    pii st, ed;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">            <span class="keyword">if</span> (a[i][j] == <span class="string">&#x27;S&#x27;</span>)</span><br><span class="line">                st = &#123;i, j&#125;;</span><br><span class="line">            <span class="keyword">if</span> (a[i][j] == <span class="string">&#x27;T&#x27;</span>)</span><br><span class="line">                ed = &#123;i, j&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    queue&lt;array&lt;<span class="type">int</span>, 3&gt;&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dis[st.x][st.y][i] = <span class="number">0</span>;</span><br><span class="line">        q.<span class="built_in">push</span>(&#123;st.x, st.y, i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> [x, y, d] = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="type">int</span> xx = x + dx[d], yy = y + dy[d];</span><br><span class="line">        <span class="keyword">if</span> (xx &gt;= <span class="number">1</span> &amp;&amp; xx &lt;= n &amp;&amp; yy &gt;= <span class="number">1</span> &amp;&amp; yy &lt;= m)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[xx][yy] == <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (a[xx][yy] == <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (dis[xx][yy][(d + <span class="number">1</span>) % <span class="number">4</span>] &gt; dis[x][y][d] + <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    dis[xx][yy][(d + <span class="number">1</span>) % <span class="number">4</span>] = dis[x][y][d] + <span class="number">1</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(&#123;xx, yy, (d + <span class="number">1</span>) % <span class="number">4</span>&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (dis[xx][yy][(d - <span class="number">1</span> + <span class="number">4</span>) % <span class="number">4</span>] &gt; dis[x][y][d] + <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    dis[xx][yy][(d - <span class="number">1</span> + <span class="number">4</span>) % <span class="number">4</span>] = dis[x][y][d] + <span class="number">1</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(&#123;xx, yy, (d - <span class="number">1</span> + <span class="number">4</span>) % <span class="number">4</span>&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (dis[xx][yy][d] &gt; dis[x][y][d] + <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                dis[xx][yy][d] = dis[x][y][d] + <span class="number">1</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(&#123;xx, yy, d&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        ans = <span class="built_in">min</span>(ans, dis[ed.x][ed.y][i]);</span><br><span class="line">    <span class="keyword">if</span> (ans == <span class="number">1e9</span>)</span><br><span class="line">        ans = <span class="number">-1</span>;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>滚动数组dp</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">f</span><span class="params">(<span class="number">220</span>, <span class="number">1e9</span>)</span>, <span class="title">dp</span><span class="params">(<span class="number">220</span>, <span class="number">1e9</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">200</span>; j++)</span><br><span class="line">            dp[j] = f[j];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">200</span>; j++)</span><br><span class="line">            dp[(j &amp; x)] = <span class="built_in">min</span>(dp[(j &amp; x)], f[j] + <span class="number">1</span>);</span><br><span class="line">        dp[x] = <span class="built_in">min</span>(dp[x], <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">swap</span>(dp, f);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (f[<span class="number">0</span>] == <span class="number">1e9</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; n - f[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>nowcoder</category>
      </categories>
  </entry>
  <entry>
    <title>牛客小白月赛88</title>
    <url>/2024/03/08/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B88/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x, n;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; n;</span><br><span class="line">    <span class="type">char</span> mxc = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    <span class="type">int</span> mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; c &gt;&gt; x;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; mx)</span><br><span class="line">            mx = x, mxc = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mx * <span class="number">1000</span> &lt; x)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000</span>; i++)</span><br><span class="line">            cout &lt;&lt; mxc;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">s</span><span class="params">(<span class="number">5</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">        <span class="built_in">getline</span>(cin, s[i]);</span><br><span class="line">    <span class="type">int</span> a = <span class="number">-1</span>, b = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (s[<span class="number">1</span>][<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">        a = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (s[<span class="number">1</span>][<span class="number">0</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">        a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (s[<span class="number">3</span>][<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">        b = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (s[<span class="number">3</span>][<span class="number">0</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">        b = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">-1</span> || b == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[<span class="number">2</span>][<span class="number">0</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;0&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[<span class="number">2</span>].<span class="built_in">find</span>(<span class="string">&#x27;&amp;&#x27;</span>) != <span class="number">-1</span>)</span><br><span class="line">            cout &lt;&lt; (a &amp; b) &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; (a | b) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;ll&gt; a;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll x, y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        a.<span class="built_in">push_back</span>((x * <span class="number">3600</span> + y * <span class="number">60</span> - <span class="number">60</span> + <span class="number">86400</span>) % <span class="number">86400</span>);</span><br><span class="line">        a.<span class="built_in">push_back</span>((x * <span class="number">3600</span> + y * <span class="number">60</span> - <span class="number">180</span> + <span class="number">86400</span>) % <span class="number">86400</span>);</span><br><span class="line">        a.<span class="built_in">push_back</span>((x * <span class="number">3600</span> + y * <span class="number">60</span> - <span class="number">300</span> + <span class="number">86400</span>) % <span class="number">86400</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">    a.<span class="built_in">erase</span>(<span class="built_in">unique</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>()), a.<span class="built_in">end</span>());</span><br><span class="line">    cout &lt;&lt; a.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> h = i / <span class="number">3600</span>, m = i % <span class="number">3600</span> / <span class="number">60</span>;</span><br><span class="line">        cout&lt;&lt;h&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;m&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>滚动数组dp</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">f</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span>, <span class="title">dp</span><span class="params">(n + <span class="number">10</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    f[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        x %= n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            dp[j] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            <span class="keyword">if</span> (f[j])</span><br><span class="line">            &#123;</span><br><span class="line">                dp[(j + x) % n] = <span class="number">1</span>;</span><br><span class="line">                dp[(j - x + n) % n] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="built_in">swap</span>(dp, f);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; (f[<span class="number">0</span>] ? <span class="string">&quot;YES&quot;</span> : <span class="string">&quot;NO&quot;</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><p>启发式合并板子</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; a[M];</span><br><span class="line"><span class="type">int</span> ans[N];</span><br><span class="line"><span class="type">int</span> b[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; b[i], s.<span class="built_in">insert</span>(b[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        a[b[i]].<span class="built_in">push_back</span>(i);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        s.<span class="built_in">insert</span>(x), s.<span class="built_in">insert</span>(y);</span><br><span class="line">        <span class="keyword">if</span> (x == y)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (a[x].<span class="built_in">empty</span>())</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[y].<span class="built_in">size</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[x].<span class="built_in">size</span>() &gt; a[y].<span class="built_in">size</span>())</span><br><span class="line">                    <span class="built_in">swap</span>(a[x], a[y]);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;t : a[x])</span><br><span class="line">                    a[y].<span class="built_in">push_back</span>(t);</span><br><span class="line">                a[x].<span class="built_in">clear</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">swap</span>(a[x], a[y]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> e : s)</span><br><span class="line">        <span class="keyword">if</span> (a[e].<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : a[e])</span><br><span class="line">                ans[i] = e;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        a[ans[i]].<span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>nowcoder</category>
      </categories>
  </entry>
  <entry>
    <title>牛客练习赛122</title>
    <url>/2024/03/03/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B122/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t, n;</span><br><span class="line">    cin &gt;&gt; t &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> x;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            ans += (x == <span class="number">1</span> ? <span class="number">1</span> : <span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="built_in">abs</span>(ans) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>模拟</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">b</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">p</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!p[a[i]])</span><br><span class="line">            p[a[i]] = b[i];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p[a[i]] != b[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>特判1,2,小范围暴力,大范围打表一定是n*m</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span> || m == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">2</span> || m == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; (<span class="built_in">max</span>(n, m) - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">10</span> &amp;&amp; m &lt;= <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">        queue&lt;pii&gt; q;</span><br><span class="line">        q.<span class="built_in">push</span>(&#123;<span class="number">1</span>, <span class="number">1</span>&#125;);</span><br><span class="line">        a[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> xx = t.x + dx[i], yy = t.y + dy[i];</span><br><span class="line">                <span class="keyword">if</span> (xx &gt;= <span class="number">1</span> &amp;&amp; xx &lt;= n &amp;&amp; yy &gt;= <span class="number">1</span> &amp;&amp; yy &lt;= m &amp;&amp; !a[xx][yy])</span><br><span class="line">                    a[xx][yy] = <span class="number">1</span>, q.<span class="built_in">push</span>(&#123;xx, yy&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">                ans += a[i][j];</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; n * m &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>nowcoder</category>
      </categories>
  </entry>
  <entry>
    <title>第十一届图灵杯NEUQACM程序设计竞赛</title>
    <url>/2024/03/10/%E7%AC%AC%E5%8D%81%E4%B8%80%E5%B1%8A%E5%9B%BE%E7%81%B5%E6%9D%AFNEUQACM%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AB%9E%E8%B5%9B/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, p, p1, p2, ans = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; p &gt;&gt; p1 &gt;&gt; p2 &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; p2 &amp;&amp; a[i] &gt; p1)</span><br><span class="line">            ans++;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    n -= <span class="number">5</span>;</span><br><span class="line">    db res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">2</span>)</span><br><span class="line">        res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> cnt = n / <span class="number">2</span>;</span><br><span class="line">        db lose = <span class="number">1</span> - <span class="number">0.03</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= cnt; i++)</span><br><span class="line">            res *= lose;</span><br><span class="line">        res = <span class="number">1.0</span> - res;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    ll ans = <span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i - <span class="number">1</span>] &gt; a[i])</span><br><span class="line">              ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans = <span class="built_in">min</span>(ans, (a[i ] - a[i<span class="number">-1</span>]) / <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line">           </span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>ICPC 19南京 H</p>
<p>考虑询问的人需要满足a&gt;b+c,这样询问哪个是答案,得到的最多的就是正确的</p>
<p>需要询问多少次才能满足a&gt;b+c</p>
<p>考虑最坏的情况,前面询问的全是b&#x2F;c,那么我们需要2*(b+c)</p>
<p>最后需要特判a&#x3D;1,b&#x3D;c&#x3D;0的情况</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">1</span> &amp;&amp; b == <span class="number">0</span> &amp;&amp; c == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;0&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a &gt; b + c)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; (b + c &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;NO&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">char</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">cnt</span><span class="params">(<span class="number">500</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i], cnt[a[i]]++;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> u = <span class="string">&#x27;a&#x27;</span> + i, v = <span class="string">&#x27;A&#x27;</span> + i;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(cnt[u] - cnt[v]) &gt;= <span class="number">2</span> &amp;&amp; k)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> sub = <span class="built_in">min</span>(k, <span class="built_in">abs</span>(cnt[u] - cnt[v]) / <span class="number">2</span>);</span><br><span class="line">            ans += sub, k -= sub;</span><br><span class="line">        &#125;</span><br><span class="line">        ans += <span class="built_in">min</span>(cnt[u], cnt[v]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>暴力</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; pr;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">auto</span> getpr = [&amp;](<span class="type">int</span> n)</span><br><span class="line">    &#123;</span><br><span class="line">        vector&lt;<span class="type">bool</span>&gt; <span class="built_in">not_pr</span>(N);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!not_pr[i])</span><br><span class="line">                pr.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> p : pr)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i * p &gt; n)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                not_pr[i * p] = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (i % p == <span class="number">0</span>) <span class="comment">// 说明i*p已经被一个更小的i判断过了</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">getpr</span>(<span class="number">1e5</span>);</span><br><span class="line">    <span class="type">int</span> n = <span class="number">1e5</span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">10</span>, <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i += <span class="number">2</span>)</span><br><span class="line">        a[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>, j = <span class="number">1</span>; j &lt;= n; i++, j += i)</span><br><span class="line">        a[j] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> p : pr)</span><br><span class="line">        a[p] = <span class="number">0</span>;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">c</span><span class="params">(<span class="number">1e6</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    c[<span class="number">0</span>] = c[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">            c[i] += c[j] * c[i - j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">        a[c[i]] = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> x, ans = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= x; i++)</span><br><span class="line">        <span class="keyword">if</span> (a[i])</span><br><span class="line">            ans++;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>注意到值域不大,考虑dp</p>
<p>dp表示差的绝对值能否取到</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">f</span><span class="params">(N, <span class="number">0</span>)</span>, <span class="title">dp</span><span class="params">(N, <span class="number">0</span>)</span></span>;</span><br><span class="line">    f[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">2e5</span>; j++)</span><br><span class="line">            dp[j] = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">2e5</span>; j++)</span><br><span class="line">            <span class="keyword">if</span> (f[j])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (j + x &lt;= <span class="number">2e5</span>)</span><br><span class="line">                    dp[j + x] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">abs</span>(j - x) &lt;= <span class="number">2e5</span>)</span><br><span class="line">                    dp[<span class="built_in">abs</span>(j - x)] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="built_in">swap</span>(dp, f);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2e5</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (f[i])</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="H"><a href="#H" class="headerlink" title="H"></a>H</h1><p>二分答案</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, d;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; d;</span><br><span class="line"> </span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">b</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; b[i];</span><br><span class="line">    a[d] += b[<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">swap</span>(a[d], a[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">2</span>, a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="built_in">sort</span>(b.<span class="built_in">begin</span>() + <span class="number">2</span>, b.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">auto</span> chk = [&amp;](<span class="type">int</span> x) -&gt; <span class="type">bool</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> sml = n - x;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = sml + <span class="number">1</span>, j = <span class="number">2</span>; i &gt;= <span class="number">2</span>; i--, j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] + b[j] &gt; a[<span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">chk</span>(mid))</span><br><span class="line">            r = mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; l &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="I"><a href="#I" class="headerlink" title="I"></a>I</h1><p>二分相同前缀的长度</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Hash</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">const</span> ll base = <span class="number">1361</span>;</span><br><span class="line">    <span class="type">const</span> ll p = <span class="number">998244353</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;ll&gt; a, c;</span><br><span class="line">    <span class="built_in">Hash</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n), <span class="built_in">a</span>(n + <span class="number">10</span>), <span class="built_in">c</span>(n + <span class="number">10</span>, <span class="number">0</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> n, vector&lt;<span class="type">char</span>&gt; arr)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ll res = <span class="number">0</span>;</span><br><span class="line">        c[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            res = (res * base + arr[i]) % p;</span><br><span class="line">            c[i] = c[i - <span class="number">1</span>] * base % p;</span><br><span class="line">            a[i] = res;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span> <span class="comment">// 询问子串的哈希值</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ll ans = (a[r] - a[l - <span class="number">1</span>] * c[r - l + <span class="number">1</span>] % p + p) % p;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, q;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">char</span>&gt; <span class="title">s1</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">s2</span><span class="params">(m + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; s1[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">        cin &gt;&gt; s2[i];</span><br><span class="line">    <span class="function">Hash <span class="title">h1</span><span class="params">(n)</span></span>;</span><br><span class="line">    h1.<span class="built_in">build</span>(n, s1);</span><br><span class="line">    <span class="function">Hash <span class="title">h2</span><span class="params">(m)</span></span>;</span><br><span class="line">    h2.<span class="built_in">build</span>(m, s2);</span><br><span class="line">    <span class="keyword">while</span> (q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l1, r1, l2, r2;</span><br><span class="line">        cin &gt;&gt; l1 &gt;&gt; r1 &gt;&gt; l2 &gt;&gt; r2;</span><br><span class="line">        <span class="type">int</span> len = r1 - l1 + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (s1[l1] != s2[l2])</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; (s1[l1] &lt; s2[l2] ? <span class="string">&#x27;&lt;&#x27;</span> : <span class="string">&#x27;&gt;&#x27;</span>) &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> l = <span class="number">1</span>, r = len;</span><br><span class="line">        <span class="keyword">auto</span> chk = [&amp;](<span class="type">int</span> x) -&gt; <span class="type">bool</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> h1.<span class="built_in">query</span>(l1, l1 + x - <span class="number">1</span>) == h2.<span class="built_in">query</span>(l2, l2 + x - <span class="number">1</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">chk</span>(mid))</span><br><span class="line">                l = mid;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                r = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (l == len)</span><br><span class="line">            cout &lt;&lt; <span class="string">&#x27;=&#x27;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; (s1[l1 + l] &lt; s2[l2 + l] ? <span class="string">&#x27;&lt;&#x27;</span> : <span class="string">&#x27;&gt;&#x27;</span>) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="J"><a href="#J" class="headerlink" title="J"></a>J</h1><p>期望+状压dp</p>
<p>$f[i]$表示当前选择了部分课程后,期望还需要学多少次,最后答案就是$f[0]$</p>
<p>考虑状态转移:</p>
<p>设已经学过的课的数量为$cnt$</p>
<p>1.学到了学过的课$f[i]&#x3D;\frac{cnt}{n}(f[i]+1)$</p>
<p>2.学到了未学过的课$f[i]&#x3D;\sum_j\frac{1}{n}(f[j]+1)$</p>
<p>最后总的转移方程就是:</p>
<p>$f[i]&#x3D;\frac{cnt}{n}(f[i]+1)+\sum_j\frac{1}{n}(f[j]+1)$</p>
<p>展开:</p>
<p>$f[i]&#x3D;\frac{cnt}{n}f[i]+\frac{cnt}{n}+\frac{\sum_jf[j]}{n}+\frac{n-cnt}{n}$</p>
<p>移项:</p>
<p>$f[i]-\frac{cnt}{n}f[i]&#x3D;\frac{n-cnt}{n}f[i]&#x3D;\frac{cnt}{n}+\frac{\sum_jf[j]}{n}+\frac{n-cnt}{n}$</p>
<p>化简:</p>
<p>$f[i]&#x3D;\frac{n}{n-cnt}*(\frac{\sum_jf[j]}{n}+1)$</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="function">vector&lt;db&gt; <span class="title">f</span><span class="params">(<span class="number">1</span> &lt;&lt; n, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = (<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        db cnt = <span class="number">0</span>, s0 = <span class="number">1.0</span>, s1 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            <span class="keyword">if</span> (i &gt;&gt; j &amp; <span class="number">1</span>)</span><br><span class="line">                cnt++, s1 += a[j];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                s0 += f[i | (<span class="number">1</span> &lt;&lt; j)] / n;</span><br><span class="line">        <span class="keyword">if</span> (s1 &gt;= m) <span class="comment">// 已经够了,不需要再学了</span></span><br><span class="line">            f[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            f[i] = s0 / ((n - cnt) / n);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; f[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="K"><a href="#K" class="headerlink" title="K"></a>K</h1><p>期望&#x3D;所有方案的和&#x2F;方案数</p>
<p>方案数显然是$\frac{n(1+n)}{2}$</p>
<p>问题是怎样求方案和</p>
<p>注意到值域只有$2*10^5$,因子数不到200个,所以可枚举gcd</p>
<p>枚举左端点和gcd,二分右端点</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">100</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ST</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n, q;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; lg;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; f;</span><br><span class="line">    <span class="built_in">ST</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n), <span class="built_in">lg</span>(n + <span class="number">3</span>, <span class="number">0</span>), <span class="built_in">f</span>(<span class="number">25</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n + <span class="number">1</span>, <span class="number">0</span>)) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            f[<span class="number">0</span>][i] = a[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">20</span>; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i + (<span class="number">1</span> &lt;&lt; j) - <span class="number">1</span> &lt;= n; i++)</span><br><span class="line">                f[j][i] = <span class="built_in">gcd</span>(f[j - <span class="number">1</span>][i], f[j - <span class="number">1</span>][i + (<span class="number">1</span> &lt;&lt; (j - <span class="number">1</span>))]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> len = __lg(r - l + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">gcd</span>(f[len][l], f[len][r - (<span class="number">1</span> &lt;&lt; len) + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">auto</span> qmi = [&amp;](ll a, ll b)</span><br><span class="line">    &#123;</span><br><span class="line">        a %= mod;</span><br><span class="line">        ll res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">                res = res * a % mod;</span><br><span class="line">            b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">            a = a * a % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;;</span><br><span class="line">    ll n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">fac</span>(N);</span><br><span class="line">    <span class="function">ST <span class="title">st</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2e5</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; i * j &lt;= <span class="number">2e5</span>; j++)</span><br><span class="line">            fac[i * j].<span class="built_in">push_back</span>(i);</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    st.<span class="built_in">init</span>(a);</span><br><span class="line">    ll sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll p = i, res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;f : fac[a[i]])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> l = <span class="number">1</span>, r = i;</span><br><span class="line">            <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (st.<span class="built_in">query</span>(mid, i) &lt; f)</span><br><span class="line">                    l = mid + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    r = mid;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (st.<span class="built_in">query</span>(l, i) == f)</span><br><span class="line">            &#123;</span><br><span class="line">                ll st = i - p + <span class="number">1</span>, ed = i - l + <span class="number">1</span>;</span><br><span class="line">                ll len = ed - st + <span class="number">1</span>;</span><br><span class="line">                ll num = (len * (st + ed) / <span class="number">2</span>) % mod;</span><br><span class="line">                res = (res + f * num % mod) % mod;</span><br><span class="line">                p = l - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (p &lt; <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sum = (sum + res) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="function">sum * <span class="title">qmi</span><span class="params">(n * (<span class="number">1</span> + n) / <span class="number">2</span>, mod - <span class="number">2</span>)</span> % mod</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(10);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="L"><a href="#L" class="headerlink" title="L"></a>L</h1><p>赛时被我的假做法水过去了(</p>
<p>还是老老实实割点吧</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="M"><a href="#M" class="headerlink" title="M"></a>M</h1><p>每次取和最大的联通块即可,难点在于怎样实现</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>nowcoder</category>
      </categories>
  </entry>
  <entry>
    <title>西安理工大学2024年程序设计校赛（校外同步赛）</title>
    <url>/2024/03/17/%E8%A5%BF%E5%AE%89%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A62024%E5%B9%B4%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E6%A0%A1%E8%B5%9B%EF%BC%88%E6%A0%A1%E5%A4%96%E5%90%8C%E6%AD%A5%E8%B5%9B%EF%BC%89/</url>
    <content><![CDATA[<h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> a;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="string">&#x27;A&#x27;</span> || a == <span class="string">&#x27;B&#x27;</span> || a == <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">vector&lt;string&gt; <span class="title">s</span><span class="params">(<span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">        <span class="built_in">getline</span>(cin, s[i]);</span><br><span class="line">    <span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">&quot;Vertebrates&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[<span class="number">1</span>] == <span class="string">&quot;Bird&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[<span class="number">2</span>] == <span class="string">&quot;Carnivores&quot;</span>)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;Eagle&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;Pigeons&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[<span class="number">2</span>] == <span class="string">&quot;Haunted Den&quot;</span>)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;People&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;Cow&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[<span class="number">1</span>] == <span class="string">&quot;Insect&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[<span class="number">2</span>] == <span class="string">&quot;Blood Devouring&quot;</span>)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;Fleas&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;Caterpillar&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[<span class="number">2</span>] == <span class="string">&quot;Blood Devouring&quot;</span>)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;Leeches&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;Worms&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>$2*a&#x3D;2(\frac{xy}{z}+\frac{yz}{x}+\frac{xz}{y})$</p>
<p>$&#x3D;(\frac{xy}{z}+\frac{xz}{y})+(\frac{yz}{x}+\frac{xy}{z})+(\frac{xz}{y}+\frac{yz}{x})$</p>
<p>$&#x3D;x(\frac{y}{z}+\frac{z}{y})+y(\frac{z}{x}+\frac{x}{z})+z(\frac{x}{y}+\frac{y}{x})$</p>
<p>根据均值不等式$a+b\ge 2\sqrt{ab}$</p>
<p>$\frac{y}{z}+\frac{z}{y}\ge 2$</p>
<p>$2<em>a\ge 2</em>(x+y+z)$</p>
<p>等号只在$x&#x3D;y&#x3D;z$时取</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x, y, z = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">if</span> x*x*y*y+y*y*z*z+x*x*z*z&gt;(x+y+z)*x*y*z:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&gt;&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> x*x*y*y+y*y*z*z+x*x*z*z==(x+y+z)*x*y*z:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&lt;&quot;</span>)</span><br></pre></td></tr></table></figure>
<h1 id="D"><a href="#D" class="headerlink" title="D"></a>D</h1><p>后手每次选择与先手相反的操作,使得一轮之后的位置一定在对角线上,这样经过若干轮以后,一定是停止或者再走一步</p>
<p>1.如果是正好停止,后手必胜</p>
<p>2.如果是能再走一步,先手必胜</p>
<p>第二种情况后手是否还有更好的策略呢?</p>
<p>无论后手怎么走,先手选择相反的方向,一定可以最后让后手无法操作,后手必败</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll d1, k1;</span><br><span class="line">    cin &gt;&gt; d1 &gt;&gt; k1;</span><br><span class="line">    <span class="type">__int128_t</span> d = d1, k = k1;</span><br><span class="line">    <span class="type">__int128_t</span> l = <span class="number">0</span>, r = <span class="number">1e10</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> chk = [&amp;](<span class="type">__int128_t</span> x) -&gt; <span class="type">bool</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> x * x * k * k * <span class="number">2</span> &lt;= d * d;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">__int128_t</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">chk</span>(mid))</span><br><span class="line">            l = mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((l + <span class="number">1</span>) * (l + <span class="number">1</span>) * k * k + l * l * k * k &lt;= d * d)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Parry&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Mercedes&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E"><a href="#E" class="headerlink" title="E"></a>E</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">to be update</span><br></pre></td></tr></table></figure>
<h1 id="F"><a href="#F" class="headerlink" title="F"></a>F</h1><p>对值域开树状数组</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">7e7</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">BIT</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;ll&gt; a;</span><br><span class="line">    <span class="built_in">BIT</span>(<span class="type">int</span> _n) : <span class="built_in">n</span>(_n), <span class="built_in">a</span>(n + <span class="number">1</span>) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lb</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123; <span class="keyword">return</span> x &amp; -x; &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> n, vector&lt;<span class="type">int</span>&gt; &amp;s)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i] += s[i];</span><br><span class="line">            <span class="type">int</span> fa = i + <span class="built_in">lb</span>(i);</span><br><span class="line">            <span class="keyword">if</span> (fa &lt;= n)</span><br><span class="line">                a[fa] += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, ll y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (; x &lt;= n; x += <span class="built_in">lb</span>(x))</span><br><span class="line">            a[x] += y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ll res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; x; x ^= <span class="built_in">lb</span>(x))</span><br><span class="line">            res += a[x];</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">search</span><span class="params">(ll s)</span> <span class="comment">// 第一个小于等于s的位置</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> pos = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">20</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">            <span class="keyword">if</span> (pos + (<span class="number">1</span> &lt;&lt; j) &lt;= n &amp;&amp; a[pos + (<span class="number">1</span> &lt;&lt; j)] &lt;= s)</span><br><span class="line">            &#123;</span><br><span class="line">                pos += (<span class="number">1</span> &lt;&lt; j);</span><br><span class="line">                s -= a[pos];</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> pos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, q, m, ans = <span class="number">0</span>, tot = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; q &gt;&gt; m;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="function">BIT <span class="title">bit</span><span class="params">(<span class="number">1e6</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        bit.<span class="built_in">add</span>(a[i], <span class="number">1</span>);</span><br><span class="line">        ans += bit.<span class="built_in">query</span>(m / a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> opt, p, x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; opt;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; p &gt;&gt; x;</span><br><span class="line">            ans -= bit.<span class="built_in">query</span>(m / a[p]);</span><br><span class="line">            bit.<span class="built_in">add</span>(a[p], <span class="number">-1</span>);</span><br><span class="line">            a[p] = x;</span><br><span class="line">            bit.<span class="built_in">add</span>(a[p], <span class="number">1</span>);</span><br><span class="line">            ans += bit.<span class="built_in">query</span>(m / a[p]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(5);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="G"><a href="#G" class="headerlink" title="G"></a>G</h1><p>总数量不多,全部处理出来直接二分</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll x, st, ans = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    vector&lt;ll&gt; sum;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">p</span><span class="params">(<span class="number">30</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">auto</span> dfs = [&amp;](<span class="keyword">auto</span> &amp;dfs, <span class="type">int</span> u) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!u)</span><br><span class="line">        &#123;</span><br><span class="line">            ll res = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = st; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">            &#123;</span><br><span class="line">                res = res * <span class="number">10</span> + p[i];</span><br><span class="line">                <span class="comment">//  cout &lt;&lt; p[i];</span></span><br><span class="line">            &#125;</span><br><span class="line">            sum.<span class="built_in">push_back</span>(res);</span><br><span class="line">            <span class="comment">// cout &lt;&lt; endl;</span></span><br><span class="line">            <span class="comment">// ans++;</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (p[u + <span class="number">1</span>] - <span class="number">2</span> &gt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p[u] = p[u + <span class="number">1</span>] - <span class="number">2</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(dfs, u - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (p[u + <span class="number">1</span>] + <span class="number">2</span> &lt;= <span class="number">9</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p[u] = p[u + <span class="number">1</span>] + <span class="number">2</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(dfs, u - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">18</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        st = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">9</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            p[i] = j;</span><br><span class="line">            <span class="built_in">dfs</span>(dfs, i - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(sum.<span class="built_in">begin</span>(), sum.<span class="built_in">end</span>());</span><br><span class="line">    ll res = <span class="built_in">upper_bound</span>(sum.<span class="built_in">begin</span>(), sum.<span class="built_in">end</span>(), x) - sum.<span class="built_in">begin</span>();</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="H"><a href="#H" class="headerlink" title="H"></a>H</h1><p>二分答案</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;pll&gt; <span class="title">s</span><span class="params">(n)</span></span>;</span><br><span class="line">    vector&lt;ll&gt; a;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;[x, y] : s)</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y, a.<span class="built_in">push_back</span>(x);</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">    map&lt;ll, ll&gt; mp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        mp[a[i]] = i + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> [x, y] : s)</span><br><span class="line">    &#123;</span><br><span class="line">        a[mp[x]] = y;</span><br><span class="line">    &#125;</span><br><span class="line">    ll l = <span class="number">-2e9</span>, r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> chk = [&amp;](ll x) -&gt; <span class="type">bool</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> le = n, ri = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">                <span class="keyword">if</span> (a[i] &lt; x)</span><br><span class="line">                &#123;</span><br><span class="line">                    le = i;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">                <span class="keyword">if</span> (a[i] &lt; x)</span><br><span class="line">                &#123;</span><br><span class="line">                    ri = i;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">if</span> (le &gt; ri)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            ll add = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = le; i &lt;= ri; i++)</span><br><span class="line">                add = <span class="built_in">max</span>(add, x - a[i]);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = le; i &lt;= ri; i++)</span><br><span class="line">                <span class="keyword">if</span> (a[i] + add &gt; <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        ll mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">chk</span>(mid))</span><br><span class="line">            l = mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; l &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="I"><a href="#I" class="headerlink" title="I"></a>I</h1><p>设数组和为sum</p>
<p>如果sum是奇数,先手必胜</p>
<p>如果sum是偶数,此时要分为两种情况:</p>
<p>1.存在和为奇数的子段:</p>
<p>偶数-奇数&#x3D;奇数</p>
<p>那么后手操作完后一定还剩和为奇数,先手必胜</p>
<p>1.不存在存在和为奇数的子段:</p>
<p>后手必胜</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, sum = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i], a[i] %= <span class="number">2</span>, sum += a[i];</span><br><span class="line">        <span class="keyword">if</span> (!a[i])</span><br><span class="line">            cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum % <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;halo&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (cnt==n)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;parry&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;halo&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="J"><a href="#J" class="headerlink" title="J"></a>J</h1><p>模拟</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls(x) (a[x].l)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs(x) (a[x].r)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sum(x) a[x].sum</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> db;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">25</span>;</span><br><span class="line">random_device rd;</span><br><span class="line"><span class="function">mt19937_64 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">char</span>&gt;&gt; <span class="built_in">ans</span>(<span class="number">30</span>, <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt;(<span class="number">30</span>, <span class="string">&#x27;0&#x27;</span>));</span><br><span class="line">    <span class="keyword">auto</span> rot = [&amp;](<span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> x2, <span class="type">int</span> y2) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> now = ans[x1][y1];</span><br><span class="line">        ans[x1][y1] = ans[x2][y1];</span><br><span class="line">        ans[x2][y1] = ans[x2][y2];</span><br><span class="line">        ans[x2][y2] = ans[x1][y2];</span><br><span class="line">        ans[x1][y2] = now;</span><br><span class="line"></span><br><span class="line">        now = ans[x1][y1 + <span class="number">1</span>];</span><br><span class="line">        ans[x1][y1 + <span class="number">1</span>] = ans[x2 - <span class="number">1</span>][y1];</span><br><span class="line">        ans[x2 - <span class="number">1</span>][y1] = ans[x2][y2 - <span class="number">1</span>];</span><br><span class="line">        ans[x2][y2 - <span class="number">1</span>] = ans[x2 - <span class="number">1</span>][y2];</span><br><span class="line">        ans[x2 - <span class="number">1</span>][y2] = now;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">auto</span> draw = [&amp;](<span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> x2, <span class="type">int</span> y2, <span class="type">char</span> c) -&gt; <span class="type">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = x1; i &lt;= x2; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = y1; j &lt;= y2; j++)</span><br><span class="line">                ans[i][j] = c;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">draw</span>(<span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">    <span class="built_in">draw</span>(<span class="number">4</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="string">&#x27;o&#x27;</span>);</span><br><span class="line">    <span class="built_in">draw</span>(<span class="number">4</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">    <span class="built_in">draw</span>(<span class="number">4</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">    <span class="built_in">draw</span>(<span class="number">7</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">    <span class="built_in">draw</span>(<span class="number">10</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="string">&#x27;g&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c : s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;R&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">rot</span>(<span class="number">4</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">9</span>);</span><br><span class="line">            vector&lt;<span class="type">char</span>&gt; t;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">                t.<span class="built_in">push_back</span>(ans[i][<span class="number">6</span>]);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">                ans[i][<span class="number">6</span>] = ans[i + <span class="number">3</span>][<span class="number">6</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">10</span>; i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">                ans[i][<span class="number">6</span>] = t[i - <span class="number">10</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// for (int i = 0; i &lt; 3; i++)</span></span><br><span class="line">            <span class="built_in">rot</span>(<span class="number">4</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>);</span><br><span class="line">            vector&lt;<span class="type">char</span>&gt; t;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">10</span>; i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">                t.<span class="built_in">push_back</span>(ans[i][<span class="number">4</span>]);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">12</span>; i &gt;= <span class="number">4</span>; i--)</span><br><span class="line">                ans[i][<span class="number">4</span>] = ans[i - <span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">                ans[i][<span class="number">4</span>] = t[i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;F&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">rot</span>(<span class="number">4</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">6</span>);</span><br><span class="line">            vector&lt;<span class="type">char</span>&gt; t;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">                t.<span class="built_in">push_back</span>(ans[<span class="number">3</span>][i]);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">                ans[<span class="number">3</span>][i] = ans[<span class="number">10</span> - i][<span class="number">3</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">                ans[i][<span class="number">3</span>] = ans[<span class="number">7</span>][i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">                ans[<span class="number">7</span>][i] = ans[<span class="number">10</span> - i][<span class="number">7</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">                ans[i][<span class="number">7</span>] = t[i - <span class="number">4</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">rot</span>(<span class="number">10</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">6</span>);</span><br><span class="line">            vector&lt;<span class="type">char</span>&gt; t;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">                t.<span class="built_in">push_back</span>(ans[<span class="number">1</span>][i]);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">                ans[<span class="number">1</span>][i] = ans[i][<span class="number">9</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">                ans[i][<span class="number">9</span>] = ans[<span class="number">9</span>][<span class="number">10</span> - i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">                ans[<span class="number">9</span>][i] = ans[i][<span class="number">1</span>];</span><br><span class="line">            <span class="built_in">reverse</span>(t.<span class="built_in">begin</span>(), t.<span class="built_in">end</span>());</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">4</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">                ans[i][<span class="number">1</span>] = t[i - <span class="number">4</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;U&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">rot</span>(<span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>);</span><br><span class="line">            vector&lt;<span class="type">char</span>&gt; t;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">                t.<span class="built_in">push_back</span>(ans[<span class="number">4</span>][i]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">6</span>; i++)</span><br><span class="line">                ans[<span class="number">4</span>][i] = ans[<span class="number">4</span>][i + <span class="number">3</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">7</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">                ans[<span class="number">4</span>][i] = ans[<span class="number">12</span>][<span class="number">13</span> - i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>; i &gt;= <span class="number">4</span>; i--)</span><br><span class="line">                ans[<span class="number">12</span>][i] = t[<span class="number">6</span> - i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">rot</span>(<span class="number">7</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">6</span>);</span><br><span class="line">            vector&lt;<span class="type">char</span>&gt; t;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">7</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">                t.<span class="built_in">push_back</span>(ans[<span class="number">6</span>][i]);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">9</span>; i &gt;= <span class="number">4</span>; i--)</span><br><span class="line">                ans[<span class="number">6</span>][i] = ans[<span class="number">6</span>][i - <span class="number">3</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">                ans[<span class="number">6</span>][i] = ans[<span class="number">10</span>][<span class="number">7</span> - i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">6</span>, j = <span class="number">0</span>; i &gt;= <span class="number">4</span>; i--, j++)</span><br><span class="line">                ans[<span class="number">10</span>][i] = t[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">9</span>; j++)</span><br><span class="line">            <span class="keyword">if</span> (ans[i][j] != <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                cout &lt;&lt; ans[i][j];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cout &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// cout &lt;&lt; setprecision(5);</span></span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _ = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="L"><a href="#L" class="headerlink" title="L"></a>L</h1><p>暴力模拟</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    deque&lt;<span class="type">char</span>&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        cin &gt;&gt; c;</span><br><span class="line">        q.<span class="built_in">push_back</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>, r = <span class="number">-1</span>, opt, p;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; opt;</span><br><span class="line">        <span class="keyword">if</span> (opt == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">swap</span>(l, r);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; p &gt;&gt; c;</span><br><span class="line">            <span class="keyword">if</span> (p == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (l == <span class="number">1</span>)</span><br><span class="line">                    q.<span class="built_in">push_front</span>(c);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    q.<span class="built_in">push_back</span>(c);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (r == <span class="number">1</span>)</span><br><span class="line">                    q.<span class="built_in">push_front</span>(c);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    q.<span class="built_in">push_back</span>(c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    string ans;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : q)</span><br><span class="line">        ans += i;</span><br><span class="line">    <span class="keyword">if</span> (l == <span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="M"><a href="#M" class="headerlink" title="M"></a>M</h1><p>计算出每个线段的左右端点,先按左端点小,再按右端点大排序</p>
<p>然后计算逆序对即可</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">BIT</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;ll&gt; a;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lb</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123; <span class="keyword">return</span> x &amp; -x; &#125;</span><br><span class="line">    <span class="built_in">BIT</span>(<span class="type">int</span> n) : <span class="built_in">n</span>(n), <span class="built_in">a</span>(n + <span class="number">10</span>, <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// for (int i = 1; i &lt;= n; i++)</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line">        <span class="comment">//     a[i] += arr[i];</span></span><br><span class="line">        <span class="comment">//     int fa = i + lb(i);</span></span><br><span class="line">        <span class="comment">//     if (fa &lt;= n)</span></span><br><span class="line">        <span class="comment">//         a[fa] += a[i];</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, ll y)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (; x &lt;= n; x += <span class="built_in">lb</span>(x))</span><br><span class="line">            a[x] += y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ll res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; x; x ^= <span class="built_in">lb</span>(x))</span><br><span class="line">            res += a[x];</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    ll L, R;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; L &gt;&gt; R;</span><br><span class="line">    <span class="function">vector&lt;pll&gt; <span class="title">seg</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    vector&lt;ll&gt; a;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ll k, b;</span><br><span class="line">        cin &gt;&gt; k &gt;&gt; b;</span><br><span class="line">        seg[i].x = k * L + b;</span><br><span class="line">        seg[i].y = k * R + b;</span><br><span class="line">        a.<span class="built_in">push_back</span>(seg[i].y);</span><br><span class="line">        a.<span class="built_in">push_back</span>(seg[i].y - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    map&lt;ll, ll&gt; mp;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">    a.<span class="built_in">erase</span>(<span class="built_in">unique</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>()), a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="built_in">sort</span>(seg.<span class="built_in">begin</span>() + <span class="number">1</span>, seg.<span class="built_in">end</span>(), [&amp;](pll a, pll b)</span><br><span class="line">         &#123; <span class="keyword">if</span> (a.x != b.x)</span><br><span class="line">         <span class="keyword">return</span> a.x &lt; b.x;</span><br><span class="line">         <span class="keyword">return</span> a.y&gt;b.y; &#125;);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a.<span class="built_in">size</span>(); i++)</span><br><span class="line">        mp[a[i]] = i + <span class="number">1</span>;</span><br><span class="line">    <span class="function">BIT <span class="title">bit</span><span class="params">(a.size() + <span class="number">10</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans += bit.<span class="built_in">query</span>(a.<span class="built_in">size</span>() + <span class="number">1</span>) - bit.<span class="built_in">query</span>(mp[seg[i].y - <span class="number">1</span>]);</span><br><span class="line">        bit.<span class="built_in">add</span>(mp[seg[i].y], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="N"><a href="#N" class="headerlink" title="N"></a>N</h1><p>换根dp</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="O"><a href="#O" class="headerlink" title="O"></a>O</h1><p>哈希板子</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Hash</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">const</span> ll base = <span class="number">1361</span>;</span><br><span class="line">    <span class="type">const</span> ll p = <span class="number">998244353</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;ll&gt; a, c;</span><br><span class="line">    <span class="built_in">Hash</span>(<span class="type">int</span> _n, string arr) : <span class="built_in">n</span>(_n), <span class="built_in">a</span>(n + <span class="number">10</span>), <span class="built_in">c</span>(n + <span class="number">10</span>, <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ll res = <span class="number">0</span>;</span><br><span class="line">        c[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            res = (res * base + arr[i]) % p;</span><br><span class="line">            c[i] = c[i - <span class="number">1</span>] * base % p;</span><br><span class="line">            a[i] = res;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span> <span class="comment">// 询问子串的哈希值</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// if (l &lt; 1 || r &gt; n)</span></span><br><span class="line">        <span class="comment">//     cout &lt;&lt; &quot;invalid input&quot; &lt;&lt; endl;</span></span><br><span class="line">        ll ans = (a[r] - a[l - <span class="number">1</span>] * c[r - l + <span class="number">1</span>] % p + p) % p;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    string str = <span class="string">&quot;#&quot;</span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">l</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span>, <span class="title">r</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        l[i] = str.<span class="built_in">size</span>();</span><br><span class="line">        str += s;</span><br><span class="line">        r[i] = str.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> m = str.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">cnt</span><span class="params">(m + <span class="number">10</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">&#x27;2&#x27;</span> || str[i] == <span class="string">&#x27;3&#x27;</span> || str[i] == <span class="string">&#x27;4&#x27;</span> || str[i] == <span class="string">&#x27;5&#x27;</span> || str[i] == <span class="string">&#x27;7&#x27;</span>)</span><br><span class="line">            cnt[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">            str[i] = <span class="string">&#x27;6&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        cnt[i] += cnt[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">Hash <span class="title">hs</span><span class="params">(m, str)</span></span>;</span><br><span class="line">    <span class="built_in">reverse</span>(str.<span class="built_in">begin</span>() + <span class="number">1</span>, str.<span class="built_in">end</span>());</span><br><span class="line">    <span class="function">Hash <span class="title">hrs</span><span class="params">(m, str)</span></span>;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (cnt[r[j]] - cnt[l[i] - <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (hs.<span class="built_in">query</span>(l[i], r[j]) == hrs.<span class="built_in">query</span>(m - r[j] + <span class="number">1</span>, m - l[i] + <span class="number">1</span>))</span><br><span class="line">                ans = <span class="built_in">max</span>(ans, j - i + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>nowcoder</category>
      </categories>
  </entry>
</search>
